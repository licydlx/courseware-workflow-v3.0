{
    "sourceFile": "assets/prefabLibrary/models/choose/choose-model03-v2.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1623993702957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1623993737355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,10 @@\n     private _over: fgui.GGroup;\r\n \r\n     private _clickTotalLimit: number = 0.5;\r\n \r\n+    private _maskOver: fgui.GGraph;\r\n+\r\n     private feedbackType: any = cc.Enum({\r\n \r\n         No: 0,\r\n         GuideShow: 1,\r\n"
                },
                {
                    "date": 1623993750055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,8 +112,12 @@\n             this._c1.selectedIndex = 1;\r\n             this._c1.selectedIndex = 0;\r\n         }\r\n \r\n+        this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n+        this._maskOver.visible = false;\r\n+\r\n+\r\n         this.timeText = this._view.getChild(\"n32\").asLabel;\r\n         this.timeText.text = this._gameTime + '';\r\n \r\n         this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n"
                },
                {
                    "date": 1623993763833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,8 @@\n \r\n         this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n         this._maskOver.visible = false;\r\n \r\n-\r\n         this.timeText = this._view.getChild(\"n32\").asLabel;\r\n         this.timeText.text = this._gameTime + '';\r\n \r\n         this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n@@ -186,8 +185,9 @@\n             submitFeedback: this.feedbackType.No,\r\n             gameTime: 0,\r\n             clickFoodTag: -1,\r\n             rigthTotal: rigthTotalTemp,\r\n+            maskOver: false\r\n         }\r\n     }\r\n \r\n     async init(data: any) {\r\n"
                },
                {
                    "date": 1623993814168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,10 +67,8 @@\n     private _over: fgui.GGroup;\r\n \r\n     private _clickTotalLimit: number = 0.5;\r\n \r\n-    private _maskOver: fgui.GGraph;\r\n-\r\n     private feedbackType: any = cc.Enum({\r\n \r\n         No: 0,\r\n         GuideShow: 1,\r\n@@ -112,11 +110,8 @@\n             this._c1.selectedIndex = 1;\r\n             this._c1.selectedIndex = 0;\r\n         }\r\n \r\n-        this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n-        this._maskOver.visible = false;\r\n-\r\n         this.timeText = this._view.getChild(\"n32\").asLabel;\r\n         this.timeText.text = this._gameTime + '';\r\n \r\n         this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n@@ -184,10 +179,9 @@\n             gameStart: false,\r\n             submitFeedback: this.feedbackType.No,\r\n             gameTime: 0,\r\n             clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            maskOver: false\r\n+            rigthTotal: rigthTotalTemp\r\n         }\r\n     }\r\n \r\n     async init(data: any) {\r\n"
                },
                {
                    "date": 1623993826186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,790 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private _clickTotalLimit: number = 0.5;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected update(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+\r\n+        if (this._gameTime === 2) {\r\n+            this._gameTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.gameTime++;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n+                food.data = temp111;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let totalInit = 1;\r\n+            let isHa = false;\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                if (this.myFoodPools[i].data.index === index) {\r\n+                    isHa = true;\r\n+                    totalInit = this.myFoodPools[i].data.total + 1;\r\n+                    break;\r\n+                }\r\n+\r\n+            }\r\n+            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                state1.rigthTotal[index].showTotal = food.data.total;\r\n+                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n+                this.updateState(state1);\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        cc.tween(this)\r\n+                            .delay(0.15)\r\n+                            .call(() => {\r\n+\r\n+                                let indexTemp = btn.data.index;\r\n+\r\n+                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                    if (this.myFoodPools[i] === btn) {\r\n+                                        this.myFoodPools.splice(i, 1);\r\n+                                        btn.removeFromParent();\r\n+                                        break;\r\n+                                    }\r\n+                                }\r\n+\r\n+                                let state2: any = globalThis._.cloneDeep(this._state);\r\n+                                state2.rigthTotal[indexTemp].clickTotle++;\r\n+                                this.updateState(state2);\r\n+\r\n+                            })\r\n+                            .start()\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+            if (state.gameTime >= 60 * 15) {\r\n+\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                let isFail = false;\r\n+                for (var key in state.rigthTotal) {\r\n+\r\n+                    state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                    if (state.rigthTotal[key].percent <= 0.5) {\r\n+                        isFail = true;\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (isFail) {\r\n+\r\n+                    state1.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+                } else {\r\n+\r\n+                    state1.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+                }\r\n+\r\n+                state1.gameOver = true;\r\n+                this.updateState(state1);\r\n+                return;\r\n+            }\r\n+\r\n+            this._interTime++;\r\n+            if (state.gameTime <= 5 * 60) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = 60 * 1.5;\r\n+\r\n+            } else if (state.gameTime > 5 * 60 && state.gameTime <= 10 * 60) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = 60 * 0.7;\r\n+\r\n+            } else if (state.gameTime > 10 * 60) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = 60 * 0.5;\r\n+            }\r\n+            if (this._interTime >= this._interTimeLimit) {\r\n+                this._interTime = 0;\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+            }\r\n+            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                }
            ],
            "date": 1623993702957,
            "name": "Commit-0",
            "content": "\r\n/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: ruzhuan\r\n * @Date: 2021-06-08 18:00:00\r\n * @LastEditors: ruzhuan\r\n * @LastEditTime: 2021-06-08 18:00:00\r\n */\r\nconst { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class choose_model03_v2 extends cc.Component {\r\n    private _worldRoot: cc.Node;\r\n    private _view: fgui.GComponent;\r\n    private _c1: fgui.Controller;\r\n    private _c2: fgui.Controller;\r\n\r\n    private _boyFood: any = [];\r\n    private _girlFood: any = [];\r\n    private _gameFood: any = [];\r\n\r\n    private _gameOver: boolean = false;\r\n    private _gameStart: boolean = false;\r\n\r\n    private _title: fgui.GButton;\r\n    private _titleTrigger: fgui.GLoader;\r\n\r\n    // 1s *60 = 60\r\n    private _gameTime: number = 0;\r\n\r\n    private _interTime: number = 0;\r\n\r\n    private _interTimeLimit: number = 0;\r\n\r\n    /** 我自己的对象池 */\r\n    private myFoodPools: any = [];\r\n\r\n    private _foodTag: number = 1;\r\n\r\n    private _rightIndexs: any = [];\r\n\r\n    private _dropSpeed: number = 2.5;\r\n\r\n    private _playBtn: fgui.GButton;\r\n\r\n    private _package: any;\r\n\r\n    private timeText: fgui.GLabel;\r\n\r\n    private _gameMusic: cc.AudioClip;\r\n    private _wrongSound: cc.AudioClip;\r\n    private _rightSound: cc.AudioClip;\r\n    private _readySound: cc.AudioClip;\r\n\r\n    private _boySound: string;\r\n    private _girlSound: string;\r\n\r\n    private _boy3D: fgui.GLoader3D;\r\n\r\n    private _girl3D: fgui.GLoader3D;\r\n\r\n    private _readyGroup: fgui.GGroup;\r\n    private _ready: fgui.GImage;\r\n    private _go: fgui.GImage;\r\n    private _over: fgui.GGroup;\r\n\r\n    private _clickTotalLimit: number = 0.5;\r\n\r\n    private feedbackType: any = cc.Enum({\r\n\r\n        No: 0,\r\n        GuideShow: 1,\r\n        WrongFeed: 2,\r\n        RightFeed: 3\r\n    });\r\n\r\n    // 远程动态组件\r\n    private feedback: any;\r\n\r\n    private _state = {};\r\n\r\n    get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    set state(v: any) {\r\n        this.updateUi(this._state, v);\r\n        this._state = v;\r\n        this.mergeState();\r\n    }\r\n\r\n    async onLoad() {\r\n        this._worldRoot = cc.find(\"Canvas\").parent;\r\n\r\n        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n\r\n        fgui.GRoot.inst.addChild(this._view);\r\n\r\n        this.myFoodPools = [];\r\n\r\n        this._c1 = this._view.getController(\"c1\");\r\n        this._c2 = this._view.getController(\"c2\");\r\n\r\n        // 臨時\r\n        // bug 初始设置不播放不生效\r\n        if (this._c1) {\r\n            this._c1.selectedIndex = 1;\r\n            this._c1.selectedIndex = 0;\r\n        }\r\n\r\n        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n        this.timeText.text = this._gameTime + '';\r\n\r\n        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n        this._ready = this._view.getChild('ready').asImage;\r\n        this._go = this._view.getChild('go').asImage;\r\n        this._over = this._view.getChild('over').asGroup;\r\n\r\n        this._readyGroup.visible = false;\r\n        this._ready.visible = false;\r\n        this._go.visible = false;\r\n        this._over.visible = false;\r\n\r\n        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n\r\n        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n\r\n        this._boy3D.animationName = 'b_idle';\r\n        this._girl3D.animationName = 'g_idle';\r\n\r\n        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n\r\n        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n\r\n        this._title = this._view.getChild(\"title\").asButton;\r\n\r\n        this._playBtn = this._view.getChild(\"play\").asButton;\r\n        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n        this._playBtn.enabled = false;\r\n\r\n        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n        for (let i = 0; i < this._view.numChildren; i++) {\r\n            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n                btn.alpha = 0;\r\n                this._boyFood.push(btn);\r\n            }\r\n        }\r\n\r\n        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n        for (let i = 0; i < this._view.numChildren; i++) {\r\n            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n                btn.alpha = 0;\r\n                this._girlFood.push(btn);\r\n            }\r\n        }\r\n\r\n        let rigthTotalTemp = {};\r\n        let temp = {};\r\n        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n        }\r\n        // 初始化state\r\n        this._state = {\r\n            title: false,\r\n            elvesPlay: false,\r\n            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n            gameCanPlay: false,\r\n            gameOver: false,\r\n            gameStart: false,\r\n            submitFeedback: this.feedbackType.No,\r\n            gameTime: 0,\r\n            clickFoodTag: -1,\r\n            rigthTotal: rigthTotalTemp,\r\n        }\r\n    }\r\n\r\n    async init(data: any) {\r\n        // 临时 model component json 配置加载\r\n        let { pathConfig, model, components } = data;\r\n        let Package = pathConfig.packageName;\r\n        let GComponent = model.uiPath;\r\n        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n        this._package = Package;\r\n\r\n        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n\r\n        if (gameFood) this._gameFood = gameFood;\r\n        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n\r\n        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n\r\n        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n\r\n        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n\r\n        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n\r\n        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n\r\n        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n\r\n        if (components) {\r\n            for (const key in components) {\r\n                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n                let componentBundle: any = await loadBundle(componentPath);\r\n                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n                this[key] = componentPrefab;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n\r\n        if (!this._gameStart || this._gameOver) {\r\n\r\n            return;\r\n        }\r\n        this._gameTime++;\r\n\r\n        if (this._gameTime === 2) {\r\n            this._gameTime = 0;\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.gameTime++;\r\n            this.updateState(state);\r\n        }\r\n    }\r\n\r\n    private foodDropAnimate(index: number, state: any) {\r\n\r\n        let isHave = false;\r\n        let food = null;\r\n        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n\r\n            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n                isHave = true;\r\n                food = this.myFoodPools[i];\r\n                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n                food.data = temp111;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!isHave) {\r\n            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n            let totalInit = 1;\r\n            let isHa = false;\r\n            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n\r\n                if (this.myFoodPools[i].data.index === index) {\r\n                    isHa = true;\r\n                    totalInit = this.myFoodPools[i].data.total + 1;\r\n                    break;\r\n                }\r\n\r\n            }\r\n            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n            food.data = temp;\r\n            this._view.addChild(food);\r\n            this.myFoodPools.push(food);\r\n            this._foodTag++;\r\n        }\r\n\r\n        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n        food.x = randPosX;\r\n        food.y = 100;\r\n        food.visible = true;\r\n\r\n        cc.tween(food)\r\n            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n            .call(() => {\r\n                food.y = 100;\r\n                food.visible = false;\r\n                food.data.isShow = false;\r\n\r\n            })\r\n            .start();\r\n\r\n\r\n        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n\r\n            if (this._rightIndexs[i] === index) {\r\n\r\n                let state1: any = globalThis._.cloneDeep(this._state);\r\n                state1.rigthTotal[index].showTotal = food.data.total;\r\n                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n                this.updateState(state1);\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private _clickDropFood(evt: any) {\r\n\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n\r\n        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n        let btn = obj.asButton;\r\n        state.clickFoodTag = btn.data.tag;\r\n        this.updateState(state);\r\n\r\n    }\r\n\r\n    private _clickElves(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n        if (btn.name === 'boy') {\r\n\r\n            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n\r\n        } else {\r\n\r\n            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n        }\r\n        state.elvesPlay = true;\r\n        this.updateState(state);\r\n    }\r\n\r\n    private _clickStartPlay(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        state.play = true;\r\n        this.updateState(state);\r\n    }\r\n\r\n    private _clickTitle(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        state.title = true;\r\n        this.updateState(state);\r\n    }\r\n\r\n\r\n    // 获取状态\r\n    getState(data: any) {\r\n        this.updateState(data);\r\n    }\r\n\r\n    // 更新状态层\r\n    updateState(curState: any) {\r\n        if (globalThis._.isEqual(this._state, curState)) return;\r\n        this.state = curState;\r\n    }\r\n\r\n    // 更新ui层\r\n    updateUi(oldState: any, state: any) {\r\n\r\n        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n            if (state.elvesPlay) {\r\n                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.maskOver, state.maskOver)) {\r\n\r\n            this._maskOver.visible = state.maskOver;\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n            this._gameStart = state.gameStart;\r\n            if (state.gameStart && !state.gameOver) {\r\n                let boy = this._view.getChild(\"boy\").asButton;\r\n                let girl = this._view.getChild(\"girl\").asButton;\r\n                boy.touchable = false;\r\n                girl.touchable = false;\r\n\r\n                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n\r\n                    this.myFoodPools[i].removeFromParent();\r\n                }\r\n                this.myFoodPools = [];\r\n                this._foodTag = 1;\r\n                cc.audioEngine.playMusic(this._gameMusic, true);\r\n\r\n                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                this.foodDropAnimate(randIndex, state);\r\n\r\n            } else {\r\n                let boy = this._view.getChild(\"boy\").asButton;\r\n                let girl = this._view.getChild(\"girl\").asButton;\r\n                boy.touchable = true;\r\n                girl.touchable = true;\r\n                cc.audioEngine.stopMusic();\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n\r\n            if (state.play) {\r\n                this._playBtn.visible = false;\r\n                this._readyGroup.visible = true;\r\n                this._ready.visible = true;\r\n                cc.tween(this)\r\n                    .delay(0.7)\r\n                    .call(() => {\r\n                        this._go.visible = true;\r\n                        this._ready.visible = false;\r\n                    })\r\n                    .start();\r\n\r\n                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n                cc.audioEngine.setFinishCallback(audioId, () => {\r\n\r\n                    this._readyGroup.visible = false;\r\n\r\n                    let state1: any = globalThis._.cloneDeep(this._state);\r\n                    state1.gameStart = true;\r\n                    this.updateState(state1);\r\n                });\r\n\r\n            } else {\r\n                this._readyGroup.visible = false;\r\n                this._playBtn.visible = true;\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n\r\n            this._gameOver = state.gameOver;\r\n            if (state.gameOver) {\r\n                let boy = this._view.getChild(\"boy\").asButton;\r\n                let girl = this._view.getChild(\"girl\").asButton;\r\n                boy.touchable = false;\r\n                girl.touchable = false;\r\n                this._over.visible = true;\r\n            } else {\r\n\r\n                this._over.visible = false;\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n\r\n            if (state.clickFoodTag) {\r\n\r\n                let btn = null;\r\n                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n\r\n                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n                        btn = this.myFoodPools[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (btn) {\r\n\r\n                    // 是正确的\r\n                    let isRight = false;\r\n                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n                        if (btn.data.index === this._rightIndexs[i]) {\r\n                            isRight = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (isRight) {\r\n\r\n                        //点击正确\r\n                        btn.icon = 'ui://733aoo45r3753l';\r\n                        btn.data.isShow = true;\r\n                        cc.tween(this)\r\n                            .delay(0.15)\r\n                            .call(() => {\r\n\r\n                                let indexTemp = btn.data.index;\r\n\r\n                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n                                    if (this.myFoodPools[i] === btn) {\r\n                                        this.myFoodPools.splice(i, 1);\r\n                                        btn.removeFromParent();\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                let state2: any = globalThis._.cloneDeep(this._state);\r\n                                state2.rigthTotal[indexTemp].clickTotle++;\r\n                                this.updateState(state2);\r\n\r\n                            })\r\n                            .start()\r\n                        cc.audioEngine.playEffect(this._rightSound, false);\r\n\r\n\r\n\r\n                    } else {\r\n\r\n                        //点击错误\r\n                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n\r\n            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n\r\n                this.answerFeedback(true);\r\n\r\n            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n\r\n                this.answerFeedback(false);\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n\r\n            if (state.gameCanPlay) {\r\n\r\n                this._playBtn.enabled = true;\r\n\r\n            } else {\r\n\r\n                this._playBtn.enabled = false;\r\n            }\r\n        }\r\n\r\n\r\n        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n            if (state.gameTime >= 60 * 15) {\r\n\r\n                let state1: any = globalThis._.cloneDeep(this._state);\r\n                let isFail = false;\r\n                for (var key in state.rigthTotal) {\r\n\r\n                    state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n                    if (state.rigthTotal[key].percent <= 0.5) {\r\n                        isFail = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (isFail) {\r\n\r\n                    state1.submitFeedback = this.feedbackType.WrongFeed;\r\n\r\n                } else {\r\n\r\n                    state1.submitFeedback = this.feedbackType.RightFeed;\r\n\r\n                }\r\n\r\n                state1.gameOver = true;\r\n                this.updateState(state1);\r\n                return;\r\n            }\r\n\r\n            this._interTime++;\r\n            if (state.gameTime <= 5 * 60) {\r\n\r\n                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n                this._interTimeLimit = 60 * 1.5;\r\n\r\n            } else if (state.gameTime > 5 * 60 && state.gameTime <= 10 * 60) {\r\n\r\n                this._dropSpeed = 2.3;\r\n                //2.0 ----> 60 * 0.6\r\n                this._interTimeLimit = 60 * 0.7;\r\n\r\n            } else if (state.gameTime > 10 * 60) {\r\n\r\n                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n                this._interTimeLimit = 60 * 0.5;\r\n            }\r\n            if (this._interTime >= this._interTimeLimit) {\r\n                this._interTime = 0;\r\n                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                this.foodDropAnimate(randIndex, state);\r\n            }\r\n            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n            this.playTitle(state.title);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async playTitle(bool: boolean) {\r\n        this._c1.selectedIndex = bool ? 1 : 0;\r\n        if (bool) {\r\n            cc.audioEngine.stopAll();\r\n            this.forbidHandle();\r\n            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n            let audioId = cc.audioEngine.play(audio, false, 1);\r\n            cc.audioEngine.setFinishCallback(audioId, () => {\r\n                let state: any = globalThis._.cloneDeep(this._state);\r\n                state.title = false;\r\n                this.updateState(state);\r\n            });\r\n        } else {\r\n            this.disableForbidHandle();\r\n        }\r\n    }\r\n\r\n    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n        if (bool) {\r\n            cc.audioEngine.stopAll();\r\n            this.forbidHandle();\r\n            this.playRightSound(0, rightSoundFile);\r\n\r\n        } else {\r\n            this._c2.selectedIndex = 0;\r\n            this.disableForbidHandle();\r\n        }\r\n    }\r\n\r\n    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n\r\n        let foodArr = [];\r\n        if (rightSoundFile[curIndex].sex === 1) {\r\n\r\n            foodArr = this._boyFood;\r\n            this._boy3D.animationName = 'b_speak';\r\n\r\n        } else {\r\n            foodArr = this._girlFood;\r\n            this._girl3D.animationName = 'g_speak';\r\n        }\r\n\r\n        cc.tween(this)\r\n            .delay(0.5)\r\n            .call(() => {\r\n\r\n                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n                this.playFoodShowAnimate(0, foodArr);\r\n            })\r\n            .start();\r\n\r\n        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n        let audioId = cc.audioEngine.play(audio, false, 1);\r\n        cc.audioEngine.setFinishCallback(audioId, () => {\r\n\r\n            if (rightSoundFile[curIndex].sex === 1) {\r\n\r\n                this._boy3D.animationName = 'b_idle';\r\n\r\n            } else {\r\n                this._girl3D.animationName = 'g_idle';\r\n            }\r\n\r\n            if (curIndex >= rightSoundFile.length - 1) {\r\n                this.disableForbidHandle();\r\n                this._c2.selectedIndex = 0;\r\n                let state: any = globalThis._.cloneDeep(this._state);\r\n                state.elvesPlay = false;\r\n                state.gameCanPlay = true;\r\n                this.updateState(state);\r\n                for (let i = 0; i < this._boyFood.length; i++) {\r\n                    this._boyFood[i].alpha = 0;\r\n                }\r\n                for (let i = 0; i < this._girlFood.length; i++) {\r\n                    this._girlFood[i].alpha = 0;\r\n                }\r\n\r\n            } else {\r\n\r\n                curIndex++;\r\n                this.playRightSound(curIndex, rightSoundFile);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    playFoodShowAnimate(index: number, foodArr: any) {\r\n\r\n        cc.tween(foodArr[index])\r\n            .to(1.0, { alpha: 1 })\r\n            .call(() => {\r\n                index++;\r\n                if (index < foodArr.length) {\r\n                    this.playFoodShowAnimate(index, foodArr);\r\n                }\r\n            })\r\n            .start()\r\n\r\n    }\r\n\r\n    answerFeedback(bool: boolean) {\r\n        if (!this.feedback) return;\r\n        let feedback: any = cc.instantiate(this.feedback);\r\n        feedback.x = 960;\r\n        feedback.y = 540;\r\n        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n        feedbackJs.init(bool);\r\n        feedback.parent = cc.find(\"Canvas\").parent;\r\n\r\n        setTimeout(() => {\r\n            feedback.destroy();\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.submitFeedback = this.feedbackType.No;\r\n            this.updateState(state);\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    /**\r\n     * 点击指引\r\n     * @param obj 点击对象\r\n     */\r\n    handTips2(obj: fgui.GObject) {\r\n        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n        this._view.addChild(hand);\r\n        let tempX = obj.x + obj.width / 2;\r\n        let tempY = obj.y + obj.height / 2;\r\n\r\n        hand.x = tempX;\r\n        hand.y = tempY;\r\n\r\n        cc.tween(hand).to(0.3, {\r\n            x: tempX - 30,\r\n            y: tempY - 30\r\n        }).to(0.3, {\r\n            x: tempX,\r\n            y: tempY\r\n        }).to(0.3, {\r\n            x: tempX - 30,\r\n            y: tempY - 30\r\n        }).to(0.3, {\r\n            x: tempX,\r\n            y: tempY\r\n        }).call(() => {\r\n            this._view.removeChild(hand);\r\n            hand = null;\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.submit = this.feedbackType.No;\r\n            this.updateState(state)\r\n        }).start();\r\n    }\r\n\r\n    // 运行时 禁止操作\r\n    forbidHandle() {\r\n        console.log('===  运行时 禁止操作 =====');\r\n        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n        if (!handleMask) {\r\n            let handleMask = new cc.Node('handleMask');\r\n            handleMask.addComponent(cc.BlockInputEvents);\r\n            handleMask.parent = this._worldRoot;\r\n            handleMask.width = 1920;\r\n            handleMask.height = 1080;\r\n            handleMask.x = 960;\r\n            handleMask.y = 540;\r\n        }\r\n    }\r\n\r\n    // 消除禁止\r\n    disableForbidHandle() {\r\n        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n        if (handleMask) handleMask.destroy();\r\n    }\r\n\r\n    // 注册状态，及获取状态的方法\r\n    registerState() {\r\n        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n    }\r\n\r\n    // 解除状态，及获取状态的方法\r\n    relieveState() {\r\n        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n    }\r\n\r\n    // 本组件状态合并到全局\r\n    mergeState() {\r\n        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n    }\r\n\r\n    onEnable() {\r\n        this.registerState();\r\n    }\r\n\r\n    onDisable() {\r\n        this.relieveState();\r\n        cc.audioEngine.stopAll();\r\n    }\r\n}\r\n"
        }
    ]
}