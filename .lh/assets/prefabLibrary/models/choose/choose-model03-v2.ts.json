{
    "sourceFile": "assets/prefabLibrary/models/choose/choose-model03-v2.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 482,
            "patches": [
                {
                    "date": 1623993702957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1623993737355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,10 @@\n     private _over: fgui.GGroup;\r\n \r\n     private _clickTotalLimit: number = 0.5;\r\n \r\n+    private _maskOver: fgui.GGraph;\r\n+\r\n     private feedbackType: any = cc.Enum({\r\n \r\n         No: 0,\r\n         GuideShow: 1,\r\n"
                },
                {
                    "date": 1623993750055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,8 +112,12 @@\n             this._c1.selectedIndex = 1;\r\n             this._c1.selectedIndex = 0;\r\n         }\r\n \r\n+        this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n+        this._maskOver.visible = false;\r\n+\r\n+\r\n         this.timeText = this._view.getChild(\"n32\").asLabel;\r\n         this.timeText.text = this._gameTime + '';\r\n \r\n         this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n"
                },
                {
                    "date": 1623993763833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,8 @@\n \r\n         this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n         this._maskOver.visible = false;\r\n \r\n-\r\n         this.timeText = this._view.getChild(\"n32\").asLabel;\r\n         this.timeText.text = this._gameTime + '';\r\n \r\n         this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n@@ -186,8 +185,9 @@\n             submitFeedback: this.feedbackType.No,\r\n             gameTime: 0,\r\n             clickFoodTag: -1,\r\n             rigthTotal: rigthTotalTemp,\r\n+            maskOver: false\r\n         }\r\n     }\r\n \r\n     async init(data: any) {\r\n"
                },
                {
                    "date": 1623993814168,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,10 +67,8 @@\n     private _over: fgui.GGroup;\r\n \r\n     private _clickTotalLimit: number = 0.5;\r\n \r\n-    private _maskOver: fgui.GGraph;\r\n-\r\n     private feedbackType: any = cc.Enum({\r\n \r\n         No: 0,\r\n         GuideShow: 1,\r\n@@ -112,11 +110,8 @@\n             this._c1.selectedIndex = 1;\r\n             this._c1.selectedIndex = 0;\r\n         }\r\n \r\n-        this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n-        this._maskOver.visible = false;\r\n-\r\n         this.timeText = this._view.getChild(\"n32\").asLabel;\r\n         this.timeText.text = this._gameTime + '';\r\n \r\n         this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n@@ -184,10 +179,9 @@\n             gameStart: false,\r\n             submitFeedback: this.feedbackType.No,\r\n             gameTime: 0,\r\n             clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            maskOver: false\r\n+            rigthTotal: rigthTotalTemp\r\n         }\r\n     }\r\n \r\n     async init(data: any) {\r\n"
                },
                {
                    "date": 1623993826186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,790 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private _clickTotalLimit: number = 0.5;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected update(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+\r\n+        if (this._gameTime === 2) {\r\n+            this._gameTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.gameTime++;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n+                food.data = temp111;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let totalInit = 1;\r\n+            let isHa = false;\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                if (this.myFoodPools[i].data.index === index) {\r\n+                    isHa = true;\r\n+                    totalInit = this.myFoodPools[i].data.total + 1;\r\n+                    break;\r\n+                }\r\n+\r\n+            }\r\n+            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                state1.rigthTotal[index].showTotal = food.data.total;\r\n+                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n+                this.updateState(state1);\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        cc.tween(this)\r\n+                            .delay(0.15)\r\n+                            .call(() => {\r\n+\r\n+                                let indexTemp = btn.data.index;\r\n+\r\n+                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                    if (this.myFoodPools[i] === btn) {\r\n+                                        this.myFoodPools.splice(i, 1);\r\n+                                        btn.removeFromParent();\r\n+                                        break;\r\n+                                    }\r\n+                                }\r\n+\r\n+                                let state2: any = globalThis._.cloneDeep(this._state);\r\n+                                state2.rigthTotal[indexTemp].clickTotle++;\r\n+                                this.updateState(state2);\r\n+\r\n+                            })\r\n+                            .start()\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+            if (state.gameTime >= 60 * 15) {\r\n+\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                let isFail = false;\r\n+                for (var key in state.rigthTotal) {\r\n+\r\n+                    state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                    if (state.rigthTotal[key].percent <= 0.5) {\r\n+                        isFail = true;\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (isFail) {\r\n+\r\n+                    state1.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+                } else {\r\n+\r\n+                    state1.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+                }\r\n+\r\n+                state1.gameOver = true;\r\n+                this.updateState(state1);\r\n+                return;\r\n+            }\r\n+\r\n+            this._interTime++;\r\n+            if (state.gameTime <= 5 * 60) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = 60 * 1.5;\r\n+\r\n+            } else if (state.gameTime > 5 * 60 && state.gameTime <= 10 * 60) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = 60 * 0.7;\r\n+\r\n+            } else if (state.gameTime > 10 * 60) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = 60 * 0.5;\r\n+            }\r\n+            if (this._interTime >= this._interTimeLimit) {\r\n+                this._interTime = 0;\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+            }\r\n+            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1623996145718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -787,799 +787,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private _clickTotalLimit: number = 0.5;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected update(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-\r\n-        if (this._gameTime === 2) {\r\n-            this._gameTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.gameTime++;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n-                food.data = temp111;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let totalInit = 1;\r\n-            let isHa = false;\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === index) {\r\n-                    isHa = true;\r\n-                    totalInit = this.myFoodPools[i].data.total + 1;\r\n-                    break;\r\n-                }\r\n-\r\n-            }\r\n-            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-        food.x = randPosX;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                state1.rigthTotal[index].showTotal = food.data.total;\r\n-                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n-                this.updateState(state1);\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.maskOver, state.maskOver)) {\r\n-\r\n-            this._maskOver.visible = state.maskOver;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        cc.tween(this)\r\n-                            .delay(0.15)\r\n-                            .call(() => {\r\n-\r\n-                                let indexTemp = btn.data.index;\r\n-\r\n-                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                    if (this.myFoodPools[i] === btn) {\r\n-                                        this.myFoodPools.splice(i, 1);\r\n-                                        btn.removeFromParent();\r\n-                                        break;\r\n-                                    }\r\n-                                }\r\n-\r\n-                                let state2: any = globalThis._.cloneDeep(this._state);\r\n-                                state2.rigthTotal[indexTemp].clickTotle++;\r\n-                                this.updateState(state2);\r\n-\r\n-                            })\r\n-                            .start()\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-            if (state.gameTime >= 60 * 15) {\r\n-\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                let isFail = false;\r\n-                for (var key in state.rigthTotal) {\r\n-\r\n-                    state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                    if (state.rigthTotal[key].percent <= 0.5) {\r\n-                        isFail = true;\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (isFail) {\r\n-\r\n-                    state1.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-                } else {\r\n-\r\n-                    state1.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-                }\r\n-\r\n-                state1.gameOver = true;\r\n-                this.updateState(state1);\r\n-                return;\r\n-            }\r\n-\r\n-            this._interTime++;\r\n-            if (state.gameTime <= 5 * 60) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = 60 * 1.5;\r\n-\r\n-            } else if (state.gameTime > 5 * 60 && state.gameTime <= 10 * 60) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = 60 * 0.7;\r\n-\r\n-            } else if (state.gameTime > 10 * 60) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = 60 * 0.5;\r\n-            }\r\n-            if (this._interTime >= this._interTimeLimit) {\r\n-                this._interTime = 0;\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-            }\r\n-            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624000744575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,14 +230,61 @@\n             return;\r\n         }\r\n         this._gameTime++;\r\n \r\n-        if (this._gameTime === 2) {\r\n-            this._gameTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.gameTime++;\r\n-            this.updateState(state);\r\n+        if (state.gameTime >= 60 * 15) {\r\n+\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state1.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state1.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+\r\n+            state1.gameOver = true;\r\n+            this.updateState(state1);\r\n+            return;\r\n         }\r\n+\r\n+        this._interTime++;\r\n+        if (state.gameTime <= 5 * 60) {\r\n+\r\n+            this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            this._interTimeLimit = 60 * 1.5;\r\n+\r\n+        } else if (state.gameTime > 5 * 60 && state.gameTime <= 10 * 60) {\r\n+\r\n+            this._dropSpeed = 2.3;\r\n+            //2.0 ----> 60 * 0.6\r\n+            this._interTimeLimit = 60 * 0.7;\r\n+\r\n+        } else if (state.gameTime > 10 * 60) {\r\n+\r\n+            this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            this._interTimeLimit = 60 * 0.5;\r\n+        }\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            this.foodDropAnimate(randIndex, state);\r\n+        }\r\n+        this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+\r\n     }\r\n \r\n     private foodDropAnimate(index: number, state: any) {\r\n \r\n@@ -528,60 +575,9 @@\n         }\r\n \r\n \r\n         if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-            if (state.gameTime >= 60 * 15) {\r\n \r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                let isFail = false;\r\n-                for (var key in state.rigthTotal) {\r\n-\r\n-                    state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                    if (state.rigthTotal[key].percent <= 0.5) {\r\n-                        isFail = true;\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (isFail) {\r\n-\r\n-                    state1.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-                } else {\r\n-\r\n-                    state1.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-                }\r\n-\r\n-                state1.gameOver = true;\r\n-                this.updateState(state1);\r\n-                return;\r\n-            }\r\n-\r\n-            this._interTime++;\r\n-            if (state.gameTime <= 5 * 60) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = 60 * 1.5;\r\n-\r\n-            } else if (state.gameTime > 5 * 60 && state.gameTime <= 10 * 60) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = 60 * 0.7;\r\n-\r\n-            } else if (state.gameTime > 10 * 60) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = 60 * 0.5;\r\n-            }\r\n-            if (this._interTime >= this._interTimeLimit) {\r\n-                this._interTime = 0;\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-            }\r\n-            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n             this.playTitle(state.title);\r\n"
                },
                {
                    "date": 1624000856535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,786 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private _clickTotalLimit: number = 0.5;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected update(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+\r\n+        if (state.gameTime >= 60 * 15) {\r\n+\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state1.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state1.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+\r\n+            state1.gameOver = true;\r\n+            this.updateState(state1);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+        if (state.gameTime <= 5 * 60) {\r\n+\r\n+            this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            this._interTimeLimit = 60 * 1.5;\r\n+\r\n+        } else if (state.gameTime > 5 * 60 && state.gameTime <= 10 * 60) {\r\n+\r\n+            this._dropSpeed = 2.3;\r\n+            //2.0 ----> 60 * 0.6\r\n+            this._interTimeLimit = 60 * 0.7;\r\n+\r\n+        } else if (state.gameTime > 10 * 60) {\r\n+\r\n+            this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            this._interTimeLimit = 60 * 0.5;\r\n+        }\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            this.foodDropAnimate(randIndex, state);\r\n+        }\r\n+        this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n+                food.data = temp111;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let totalInit = 1;\r\n+            let isHa = false;\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                if (this.myFoodPools[i].data.index === index) {\r\n+                    isHa = true;\r\n+                    totalInit = this.myFoodPools[i].data.total + 1;\r\n+                    break;\r\n+                }\r\n+\r\n+            }\r\n+            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                state1.rigthTotal[index].showTotal = food.data.total;\r\n+                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n+                this.updateState(state1);\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        cc.tween(this)\r\n+                            .delay(0.15)\r\n+                            .call(() => {\r\n+\r\n+                                let indexTemp = btn.data.index;\r\n+\r\n+                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                    if (this.myFoodPools[i] === btn) {\r\n+                                        this.myFoodPools.splice(i, 1);\r\n+                                        btn.removeFromParent();\r\n+                                        break;\r\n+                                    }\r\n+                                }\r\n+\r\n+                                let state2: any = globalThis._.cloneDeep(this._state);\r\n+                                state2.rigthTotal[indexTemp].clickTotle++;\r\n+                                this.updateState(state2);\r\n+\r\n+                            })\r\n+                            .start()\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624000870140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -230,9 +230,9 @@\n             return;\r\n         }\r\n         this._gameTime++;\r\n \r\n-        if (state.gameTime >= 60 * 15) {\r\n+        if (this._gameTime >= 60 * 15) {\r\n \r\n             let state1: any = globalThis._.cloneDeep(this._state);\r\n             let isFail = false;\r\n             for (var key in state.rigthTotal) {\r\n@@ -783,790 +783,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private _clickTotalLimit: number = 0.5;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected update(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-\r\n-        if (state.gameTime >= 60 * 15) {\r\n-\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state1.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state1.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-\r\n-            state1.gameOver = true;\r\n-            this.updateState(state1);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-        if (state.gameTime <= 5 * 60) {\r\n-\r\n-            this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            this._interTimeLimit = 60 * 1.5;\r\n-\r\n-        } else if (state.gameTime > 5 * 60 && state.gameTime <= 10 * 60) {\r\n-\r\n-            this._dropSpeed = 2.3;\r\n-            //2.0 ----> 60 * 0.6\r\n-            this._interTimeLimit = 60 * 0.7;\r\n-\r\n-        } else if (state.gameTime > 10 * 60) {\r\n-\r\n-            this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            this._interTimeLimit = 60 * 0.5;\r\n-        }\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            this.foodDropAnimate(randIndex, state);\r\n-        }\r\n-        this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n-\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n-                food.data = temp111;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let totalInit = 1;\r\n-            let isHa = false;\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === index) {\r\n-                    isHa = true;\r\n-                    totalInit = this.myFoodPools[i].data.total + 1;\r\n-                    break;\r\n-                }\r\n-\r\n-            }\r\n-            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-        food.x = randPosX;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                state1.rigthTotal[index].showTotal = food.data.total;\r\n-                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n-                this.updateState(state1);\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        cc.tween(this)\r\n-                            .delay(0.15)\r\n-                            .call(() => {\r\n-\r\n-                                let indexTemp = btn.data.index;\r\n-\r\n-                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                    if (this.myFoodPools[i] === btn) {\r\n-                                        this.myFoodPools.splice(i, 1);\r\n-                                        btn.removeFromParent();\r\n-                                        break;\r\n-                                    }\r\n-                                }\r\n-\r\n-                                let state2: any = globalThis._.cloneDeep(this._state);\r\n-                                state2.rigthTotal[indexTemp].clickTotle++;\r\n-                                this.updateState(state2);\r\n-\r\n-                            })\r\n-                            .start()\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624000920135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -232,9 +232,9 @@\n         this._gameTime++;\r\n \r\n         if (this._gameTime >= 60 * 15) {\r\n \r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n             let isFail = false;\r\n             for (var key in state.rigthTotal) {\r\n \r\n                 state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n@@ -245,18 +245,18 @@\n             }\r\n \r\n             if (isFail) {\r\n \r\n-                state1.submitFeedback = this.feedbackType.WrongFeed;\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n \r\n             } else {\r\n \r\n-                state1.submitFeedback = this.feedbackType.RightFeed;\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n \r\n             }\r\n \r\n-            state1.gameOver = true;\r\n-            this.updateState(state1);\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n             return;\r\n         }\r\n \r\n         this._interTime++;\r\n"
                },
                {
                    "date": 1624001156657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -259,20 +259,20 @@\n             return;\r\n         }\r\n \r\n         this._interTime++;\r\n-        if (state.gameTime <= 5 * 60) {\r\n+        if (this._gameTime <= 5 * 60) {\r\n \r\n             this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n             this._interTimeLimit = 60 * 1.5;\r\n \r\n-        } else if (state.gameTime > 5 * 60 && state.gameTime <= 10 * 60) {\r\n+        } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n \r\n             this._dropSpeed = 2.3;\r\n             //2.0 ----> 60 * 0.6\r\n             this._interTimeLimit = 60 * 0.7;\r\n \r\n-        } else if (state.gameTime > 10 * 60) {\r\n+        } else if (this._gameTime > 10 * 60) {\r\n \r\n             this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n             this._interTimeLimit = 60 * 0.5;\r\n         }\r\n"
                },
                {
                    "date": 1624001212528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -276,8 +276,9 @@\n             this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n             this._interTimeLimit = 60 * 0.5;\r\n         }\r\n         if (this._interTime >= this._interTimeLimit) {\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n             this._interTime = 0;\r\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             this.foodDropAnimate(randIndex, state);\r\n"
                },
                {
                    "date": 1624001223614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -281,11 +281,12 @@\n             this._interTime = 0;\r\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             this.foodDropAnimate(randIndex, state);\r\n+            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n         }\r\n-        this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n \r\n+\r\n     }\r\n \r\n     private foodDropAnimate(index: number, state: any) {\r\n \r\n"
                },
                {
                    "date": 1624001229433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -283,10 +283,8 @@\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             this.foodDropAnimate(randIndex, state);\r\n             this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n         }\r\n-\r\n-\r\n     }\r\n \r\n     private foodDropAnimate(index: number, state: any) {\r\n \r\n"
                },
                {
                    "date": 1624001250136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,786 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private _clickTotalLimit: number = 0.5;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected update(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+\r\n+        if (this._gameTime >= 60 * 15) {\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+        if (this._gameTime <= 5 * 60) {\r\n+\r\n+            this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            this._interTimeLimit = 60 * 1.5;\r\n+\r\n+        } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n+\r\n+            this._dropSpeed = 2.3;\r\n+            //2.0 ----> 60 * 0.6\r\n+            this._interTimeLimit = 60 * 0.7;\r\n+\r\n+        } else if (this._gameTime > 10 * 60) {\r\n+\r\n+            this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            this._interTimeLimit = 60 * 0.5;\r\n+        }\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            this._interTime = 0;\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            this.foodDropAnimate(randIndex, state);\r\n+            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n+                food.data = temp111;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let totalInit = 1;\r\n+            let isHa = false;\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                if (this.myFoodPools[i].data.index === index) {\r\n+                    isHa = true;\r\n+                    totalInit = this.myFoodPools[i].data.total + 1;\r\n+                    break;\r\n+                }\r\n+\r\n+            }\r\n+            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                state1.rigthTotal[index].showTotal = food.data.total;\r\n+                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n+                this.updateState(state1);\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        cc.tween(this)\r\n+                            .delay(0.15)\r\n+                            .call(() => {\r\n+\r\n+                                let indexTemp = btn.data.index;\r\n+\r\n+                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                    if (this.myFoodPools[i] === btn) {\r\n+                                        this.myFoodPools.splice(i, 1);\r\n+                                        btn.removeFromParent();\r\n+                                        break;\r\n+                                    }\r\n+                                }\r\n+\r\n+                                let state2: any = globalThis._.cloneDeep(this._state);\r\n+                                state2.rigthTotal[indexTemp].clickTotle++;\r\n+                                this.updateState(state2);\r\n+\r\n+                            })\r\n+                            .start()\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624001268908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,787 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private _clickTotalLimit: number = 0.5;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected update(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+\r\n+        if (this._gameTime >= 60 * 15) {\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+        if (this._gameTime <= 5 * 60) {\r\n+\r\n+            this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            this._interTimeLimit = 60 * 1.5;\r\n+\r\n+        } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n+\r\n+            this._dropSpeed = 2.3;\r\n+            //2.0 ----> 60 * 0.6\r\n+            this._interTimeLimit = 60 * 0.7;\r\n+\r\n+        } else if (this._gameTime > 10 * 60) {\r\n+\r\n+            this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            this._interTimeLimit = 60 * 0.5;\r\n+        }\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            this._interTime = 0;\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            this.foodDropAnimate(randIndex, state);\r\n+            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n+                food.data = temp111;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let totalInit = 1;\r\n+            let isHa = false;\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                if (this.myFoodPools[i].data.index === index) {\r\n+                    isHa = true;\r\n+                    totalInit = this.myFoodPools[i].data.total + 1;\r\n+                    break;\r\n+                }\r\n+\r\n+            }\r\n+            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                state1.rigthTotal[index].showTotal = food.data.total;\r\n+                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n+                this.updateState(state1);\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        cc.tween(this)\r\n+                            .delay(0.15)\r\n+                            .call(() => {\r\n+\r\n+                                let indexTemp = btn.data.index;\r\n+\r\n+                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                    if (this.myFoodPools[i] === btn) {\r\n+                                        this.myFoodPools.splice(i, 1);\r\n+                                        btn.removeFromParent();\r\n+                                        break;\r\n+                                    }\r\n+                                }\r\n+\r\n+                                let state2: any = globalThis._.cloneDeep(this._state);\r\n+                                state2.rigthTotal[indexTemp].clickTotle++;\r\n+                                this.updateState(state2);\r\n+\r\n+                            })\r\n+                            .start()\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624001286848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,8 +279,9 @@\n         }\r\n         if (this._interTime >= this._interTimeLimit) {\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             this._interTime = 0;\r\n+            state.isAddFood\r\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             this.foodDropAnimate(randIndex, state);\r\n             this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n@@ -784,1576 +785,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private _clickTotalLimit: number = 0.5;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected update(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-\r\n-        if (this._gameTime >= 60 * 15) {\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-        if (this._gameTime <= 5 * 60) {\r\n-\r\n-            this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            this._interTimeLimit = 60 * 1.5;\r\n-\r\n-        } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n-\r\n-            this._dropSpeed = 2.3;\r\n-            //2.0 ----> 60 * 0.6\r\n-            this._interTimeLimit = 60 * 0.7;\r\n-\r\n-        } else if (this._gameTime > 10 * 60) {\r\n-\r\n-            this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            this._interTimeLimit = 60 * 0.5;\r\n-        }\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            this._interTime = 0;\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            this.foodDropAnimate(randIndex, state);\r\n-            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n-                food.data = temp111;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let totalInit = 1;\r\n-            let isHa = false;\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === index) {\r\n-                    isHa = true;\r\n-                    totalInit = this.myFoodPools[i].data.total + 1;\r\n-                    break;\r\n-                }\r\n-\r\n-            }\r\n-            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-        food.x = randPosX;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                state1.rigthTotal[index].showTotal = food.data.total;\r\n-                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n-                this.updateState(state1);\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        cc.tween(this)\r\n-                            .delay(0.15)\r\n-                            .call(() => {\r\n-\r\n-                                let indexTemp = btn.data.index;\r\n-\r\n-                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                    if (this.myFoodPools[i] === btn) {\r\n-                                        this.myFoodPools.splice(i, 1);\r\n-                                        btn.removeFromParent();\r\n-                                        break;\r\n-                                    }\r\n-                                }\r\n-\r\n-                                let state2: any = globalThis._.cloneDeep(this._state);\r\n-                                state2.rigthTotal[indexTemp].clickTotle++;\r\n-                                this.updateState(state2);\r\n-\r\n-                            })\r\n-                            .start()\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private _clickTotalLimit: number = 0.5;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected update(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-\r\n-        if (this._gameTime >= 60 * 15) {\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-        if (this._gameTime <= 5 * 60) {\r\n-\r\n-            this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            this._interTimeLimit = 60 * 1.5;\r\n-\r\n-        } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n-\r\n-            this._dropSpeed = 2.3;\r\n-            //2.0 ----> 60 * 0.6\r\n-            this._interTimeLimit = 60 * 0.7;\r\n-\r\n-        } else if (this._gameTime > 10 * 60) {\r\n-\r\n-            this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            this._interTimeLimit = 60 * 0.5;\r\n-        }\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            this._interTime = 0;\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            this.foodDropAnimate(randIndex, state);\r\n-            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n-                food.data = temp111;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let totalInit = 1;\r\n-            let isHa = false;\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === index) {\r\n-                    isHa = true;\r\n-                    totalInit = this.myFoodPools[i].data.total + 1;\r\n-                    break;\r\n-                }\r\n-\r\n-            }\r\n-            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-        food.x = randPosX;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                state1.rigthTotal[index].showTotal = food.data.total;\r\n-                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n-                this.updateState(state1);\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        cc.tween(this)\r\n-                            .delay(0.15)\r\n-                            .call(() => {\r\n-\r\n-                                let indexTemp = btn.data.index;\r\n-\r\n-                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                    if (this.myFoodPools[i] === btn) {\r\n-                                        this.myFoodPools.splice(i, 1);\r\n-                                        btn.removeFromParent();\r\n-                                        break;\r\n-                                    }\r\n-                                }\r\n-\r\n-                                let state2: any = globalThis._.cloneDeep(this._state);\r\n-                                state2.rigthTotal[indexTemp].clickTotle++;\r\n-                                this.updateState(state2);\r\n-\r\n-                            })\r\n-                            .start()\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624001292722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,9 +279,10 @@\n         }\r\n         if (this._interTime >= this._interTimeLimit) {\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             this._interTime = 0;\r\n-            state.isAddFood\r\n+            state.isAddFood = true;\r\n+\r\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             this.foodDropAnimate(randIndex, state);\r\n             this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n"
                },
                {
                    "date": 1624001303657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -280,9 +280,8 @@\n         if (this._interTime >= this._interTimeLimit) {\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             this._interTime = 0;\r\n             state.isAddFood = true;\r\n-\r\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             this.foodDropAnimate(randIndex, state);\r\n             this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n"
                },
                {
                    "date": 1624001354828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,13 +279,9 @@\n         }\r\n         if (this._interTime >= this._interTimeLimit) {\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             this._interTime = 0;\r\n-            state.isAddFood = true;\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            this.foodDropAnimate(randIndex, state);\r\n-            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+            this.updateState(state);\r\n         }\r\n     }\r\n \r\n     private foodDropAnimate(index: number, state: any) {\r\n@@ -578,8 +574,14 @@\n \r\n \r\n         if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n \r\n+            state.isAddFood = true;\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            this.foodDropAnimate(randIndex, state);\r\n+            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+\r\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n             this.playTitle(state.title);\r\n"
                },
                {
                    "date": 1624001362104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -572,11 +572,11 @@\n             }\r\n         }\r\n \r\n \r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n-            state.isAddFood = true;\r\n+\r\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             this.foodDropAnimate(randIndex, state);\r\n             this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n"
                },
                {
                    "date": 1624001373451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -574,9 +574,11 @@\n \r\n \r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n+            if () {\r\n \r\n+            }\r\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             this.foodDropAnimate(randIndex, state);\r\n             this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n"
                },
                {
                    "date": 1624001379219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -574,9 +574,9 @@\n \r\n \r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n-            if () {\r\n+            if (state.isAddFood) {\r\n \r\n             }\r\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n"
                },
                {
                    "date": 1624001386563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -575,14 +575,13 @@\n \r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n             if (state.isAddFood) {\r\n-\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+                this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n             }\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            this.foodDropAnimate(randIndex, state);\r\n-            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n \r\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n"
                },
                {
                    "date": 1624001445517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -425,11 +425,8 @@\n                 this.myFoodPools = [];\r\n                 this._foodTag = 1;\r\n                 cc.audioEngine.playMusic(this._gameMusic, true);\r\n \r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-\r\n             } else {\r\n                 let boy = this._view.getChild(\"boy\").asButton;\r\n                 let girl = this._view.getChild(\"girl\").asButton;\r\n                 boy.touchable = true;\r\n@@ -458,8 +455,9 @@\n                     this._readyGroup.visible = false;\r\n \r\n                     let state1: any = globalThis._.cloneDeep(this._state);\r\n                     state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n                     this.updateState(state1);\r\n                 });\r\n \r\n             } else {\r\n@@ -580,9 +578,8 @@\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 this.foodDropAnimate(randIndex, state);\r\n                 this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n             }\r\n-\r\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n             this.playTitle(state.title);\r\n"
                },
                {
                    "date": 1624001495316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -279,8 +279,9 @@\n         }\r\n         if (this._interTime >= this._interTimeLimit) {\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             this._interTime = 0;\r\n+            state.isAddFood\r\n             this.updateState(state);\r\n         }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624001504119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,10 +278,9 @@\n             this._interTimeLimit = 60 * 0.5;\r\n         }\r\n         if (this._interTime >= this._interTimeLimit) {\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n-            this._interTime = 0;\r\n-            state.isAddFood\r\n+            state.isAddFood = true;\r\n             this.updateState(state);\r\n         }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624001536568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -260,25 +260,11 @@\n             return;\r\n         }\r\n \r\n         this._interTime++;\r\n-        if (this._gameTime <= 5 * 60) {\r\n \r\n-            this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            this._interTimeLimit = 60 * 1.5;\r\n-\r\n-        } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n-\r\n-            this._dropSpeed = 2.3;\r\n-            //2.0 ----> 60 * 0.6\r\n-            this._interTimeLimit = 60 * 0.7;\r\n-\r\n-        } else if (this._gameTime > 10 * 60) {\r\n-\r\n-            this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            this._interTimeLimit = 60 * 0.5;\r\n-        }\r\n         if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             state.isAddFood = true;\r\n             this.updateState(state);\r\n         }\r\n@@ -572,8 +558,25 @@\n \r\n \r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n+            if (this._gameTime <= 5 * 60) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = 60 * 1.5;\r\n+\r\n+            } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = 60 * 0.7;\r\n+\r\n+            } else if (this._gameTime > 10 * 60) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = 60 * 0.5;\r\n+            }\r\n+\r\n             if (state.isAddFood) {\r\n                 // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 this.foodDropAnimate(randIndex, state);\r\n"
                },
                {
                    "date": 1624001564650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -558,8 +558,9 @@\n \r\n \r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n+            this._gameTime = state.gameTime;\r\n             if (this._gameTime <= 5 * 60) {\r\n \r\n                 this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n                 this._interTimeLimit = 60 * 1.5;\r\n"
                },
                {
                    "date": 1624001584153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,792 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private _clickTotalLimit: number = 0.5;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected update(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+\r\n+        if (this._gameTime >= 60 * 15) {\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n+                food.data = temp111;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let totalInit = 1;\r\n+            let isHa = false;\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                if (this.myFoodPools[i].data.index === index) {\r\n+                    isHa = true;\r\n+                    totalInit = this.myFoodPools[i].data.total + 1;\r\n+                    break;\r\n+                }\r\n+\r\n+            }\r\n+            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                state1.rigthTotal[index].showTotal = food.data.total;\r\n+                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n+                this.updateState(state1);\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        cc.tween(this)\r\n+                            .delay(0.15)\r\n+                            .call(() => {\r\n+\r\n+                                let indexTemp = btn.data.index;\r\n+\r\n+                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                    if (this.myFoodPools[i] === btn) {\r\n+                                        this.myFoodPools.splice(i, 1);\r\n+                                        btn.removeFromParent();\r\n+                                        break;\r\n+                                    }\r\n+                                }\r\n+\r\n+                                let state2: any = globalThis._.cloneDeep(this._state);\r\n+                                state2.rigthTotal[indexTemp].clickTotle++;\r\n+                                this.updateState(state2);\r\n+\r\n+                            })\r\n+                            .start()\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * 60) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = 60 * 1.5;\r\n+\r\n+            } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = 60 * 0.7;\r\n+\r\n+            } else if (this._gameTime > 10 * 60) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = 60 * 0.5;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+                this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624001589610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -789,796 +789,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private _clickTotalLimit: number = 0.5;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected update(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-\r\n-        if (this._gameTime >= 60 * 15) {\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n-                food.data = temp111;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let totalInit = 1;\r\n-            let isHa = false;\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === index) {\r\n-                    isHa = true;\r\n-                    totalInit = this.myFoodPools[i].data.total + 1;\r\n-                    break;\r\n-                }\r\n-\r\n-            }\r\n-            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-        food.x = randPosX;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                state1.rigthTotal[index].showTotal = food.data.total;\r\n-                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n-                this.updateState(state1);\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        cc.tween(this)\r\n-                            .delay(0.15)\r\n-                            .call(() => {\r\n-\r\n-                                let indexTemp = btn.data.index;\r\n-\r\n-                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                    if (this.myFoodPools[i] === btn) {\r\n-                                        this.myFoodPools.splice(i, 1);\r\n-                                        btn.removeFromParent();\r\n-                                        break;\r\n-                                    }\r\n-                                }\r\n-\r\n-                                let state2: any = globalThis._.cloneDeep(this._state);\r\n-                                state2.rigthTotal[indexTemp].clickTotle++;\r\n-                                this.updateState(state2);\r\n-\r\n-                            })\r\n-                            .start()\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * 60) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = 60 * 1.5;\r\n-\r\n-            } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = 60 * 0.7;\r\n-\r\n-            } else if (this._gameTime > 10 * 60) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = 60 * 0.5;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-                this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624001596415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,792 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private _clickTotalLimit: number = 0.5;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected update(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+\r\n+        if (this._gameTime >= 60 * 15) {\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n+                food.data = temp111;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let totalInit = 1;\r\n+            let isHa = false;\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                if (this.myFoodPools[i].data.index === index) {\r\n+                    isHa = true;\r\n+                    totalInit = this.myFoodPools[i].data.total + 1;\r\n+                    break;\r\n+                }\r\n+\r\n+            }\r\n+            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                state1.rigthTotal[index].showTotal = food.data.total;\r\n+                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n+                this.updateState(state1);\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        cc.tween(this)\r\n+                            .delay(0.15)\r\n+                            .call(() => {\r\n+\r\n+                                let indexTemp = btn.data.index;\r\n+\r\n+                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                    if (this.myFoodPools[i] === btn) {\r\n+                                        this.myFoodPools.splice(i, 1);\r\n+                                        btn.removeFromParent();\r\n+                                        break;\r\n+                                    }\r\n+                                }\r\n+\r\n+                                let state2: any = globalThis._.cloneDeep(this._state);\r\n+                                state2.rigthTotal[indexTemp].clickTotle++;\r\n+                                this.updateState(state2);\r\n+\r\n+                            })\r\n+                            .start()\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * 60) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = 60 * 1.5;\r\n+\r\n+            } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = 60 * 0.7;\r\n+\r\n+            } else if (this._gameTime > 10 * 60) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = 60 * 0.5;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+                this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624001668785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,810 +326,24 @@\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === index) {\r\n \r\n+\r\n                 let state1: any = globalThis._.cloneDeep(this._state);\r\n                 state1.rigthTotal[index].showTotal = food.data.total;\r\n-                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n                 this.updateState(state1);\r\n                 break;\r\n             }\r\n         }\r\n \r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        cc.tween(this)\r\n-                            .delay(0.15)\r\n-                            .call(() => {\r\n-\r\n-                                let indexTemp = btn.data.index;\r\n-\r\n-                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                    if (this.myFoodPools[i] === btn) {\r\n-                                        this.myFoodPools.splice(i, 1);\r\n-                                        btn.removeFromParent();\r\n-                                        break;\r\n-                                    }\r\n-                                }\r\n-\r\n-                                let state2: any = globalThis._.cloneDeep(this._state);\r\n-                                state2.rigthTotal[indexTemp].clickTotle++;\r\n-                                this.updateState(state2);\r\n-\r\n-                            })\r\n-                            .start()\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * 60) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = 60 * 1.5;\r\n-\r\n-            } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = 60 * 0.7;\r\n-\r\n-            } else if (this._gameTime > 10 * 60) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = 60 * 0.5;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-                this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n         setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            state1.rigthTotal[index].showTotal = food.data.total;\r\n+            this.updateState(state1);\r\n+        }, 0.05)\r\n \r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n     }\r\n \r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private _clickTotalLimit: number = 0.5;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected update(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-\r\n-        if (this._gameTime >= 60 * 15) {\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n-                food.data = temp111;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let totalInit = 1;\r\n-            let isHa = false;\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === index) {\r\n-                    isHa = true;\r\n-                    totalInit = this.myFoodPools[i].data.total + 1;\r\n-                    break;\r\n-                }\r\n-\r\n-            }\r\n-            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-        food.x = randPosX;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                state1.rigthTotal[index].showTotal = food.data.total;\r\n-                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n-                this.updateState(state1);\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-    }\r\n-\r\n     private _clickDropFood(evt: any) {\r\n \r\n         let state: any = globalThis._.cloneDeep(this._state);\r\n \r\n"
                },
                {
                    "date": 1624001674622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,9 +336,9 @@\n         }\r\n \r\n         setTimeout(() => {\r\n             let state1: any = globalThis._.cloneDeep(this._state);\r\n-            state1.rigthTotal[index].showTotal = food.data.total;\r\n+            state1.rigthTotal[index].showTotal++\r\n             this.updateState(state1);\r\n         }, 0.05)\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624001700009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,19 +326,16 @@\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === index) {\r\n \r\n-\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                state1.rigthTotal[index].showTotal = food.data.total;\r\n-                this.updateState(state1);\r\n+                state.rigthTotal[index].showTotal++;\r\n                 break;\r\n             }\r\n         }\r\n \r\n         setTimeout(() => {\r\n             let state1: any = globalThis._.cloneDeep(this._state);\r\n-            state1.rigthTotal[index].showTotal++\r\n+            state1.rigthTotal[index].showTotal++;\r\n             this.updateState(state1);\r\n         }, 0.05)\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624001712462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,9 +333,9 @@\n         }\r\n \r\n         setTimeout(() => {\r\n             let state1: any = globalThis._.cloneDeep(this._state);\r\n-            state1.rigthTotal[index].showTotal++;\r\n+            state1.rigthTotal = state.rigthTotal\r\n             this.updateState(state1);\r\n         }, 0.05)\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624001721707,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,9 +333,9 @@\n         }\r\n \r\n         setTimeout(() => {\r\n             let state1: any = globalThis._.cloneDeep(this._state);\r\n-            state1.rigthTotal = state.rigthTotal\r\n+            state1.rigthTotal = state.rigthTotal;\r\n             this.updateState(state1);\r\n         }, 0.05)\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624001729032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,9 +335,9 @@\n         setTimeout(() => {\r\n             let state1: any = globalThis._.cloneDeep(this._state);\r\n             state1.rigthTotal = state.rigthTotal;\r\n             this.updateState(state1);\r\n-        }, 0.05)\r\n+        }, 0.03)\r\n \r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n"
                },
                {
                    "date": 1624001735081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,795 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private _clickTotalLimit: number = 0.5;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected update(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+\r\n+        if (this._gameTime >= 60 * 15) {\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n+                food.data = temp111;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let totalInit = 1;\r\n+            let isHa = false;\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                if (this.myFoodPools[i].data.index === index) {\r\n+                    isHa = true;\r\n+                    totalInit = this.myFoodPools[i].data.total + 1;\r\n+                    break;\r\n+                }\r\n+\r\n+            }\r\n+            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            state1.rigthTotal = state.rigthTotal;\r\n+            this.updateState(state1);\r\n+        }, 0.03)\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        cc.tween(this)\r\n+                            .delay(0.15)\r\n+                            .call(() => {\r\n+\r\n+                                let indexTemp = btn.data.index;\r\n+\r\n+                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                    if (this.myFoodPools[i] === btn) {\r\n+                                        this.myFoodPools.splice(i, 1);\r\n+                                        btn.removeFromParent();\r\n+                                        break;\r\n+                                    }\r\n+                                }\r\n+\r\n+                                let state2: any = globalThis._.cloneDeep(this._state);\r\n+                                state2.rigthTotal[indexTemp].clickTotle++;\r\n+                                this.updateState(state2);\r\n+\r\n+                            })\r\n+                            .start()\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * 60) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = 60 * 1.5;\r\n+\r\n+            } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = 60 * 0.7;\r\n+\r\n+            } else if (this._gameTime > 10 * 60) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = 60 * 0.5;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+                this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624001740362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -792,799 +792,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private _clickTotalLimit: number = 0.5;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected update(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-\r\n-        if (this._gameTime >= 60 * 15) {\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n-                food.data = temp111;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let totalInit = 1;\r\n-            let isHa = false;\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === index) {\r\n-                    isHa = true;\r\n-                    totalInit = this.myFoodPools[i].data.total + 1;\r\n-                    break;\r\n-                }\r\n-\r\n-            }\r\n-            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-        food.x = randPosX;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            state1.rigthTotal = state.rigthTotal;\r\n-            this.updateState(state1);\r\n-        }, 0.03)\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        cc.tween(this)\r\n-                            .delay(0.15)\r\n-                            .call(() => {\r\n-\r\n-                                let indexTemp = btn.data.index;\r\n-\r\n-                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                    if (this.myFoodPools[i] === btn) {\r\n-                                        this.myFoodPools.splice(i, 1);\r\n-                                        btn.removeFromParent();\r\n-                                        break;\r\n-                                    }\r\n-                                }\r\n-\r\n-                                let state2: any = globalThis._.cloneDeep(this._state);\r\n-                                state2.rigthTotal[indexTemp].clickTotle++;\r\n-                                this.updateState(state2);\r\n-\r\n-                            })\r\n-                            .start()\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * 60) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = 60 * 1.5;\r\n-\r\n-            } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = 60 * 0.7;\r\n-\r\n-            } else if (this._gameTime > 10 * 60) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = 60 * 0.5;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-                this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624001815358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -278,29 +278,16 @@\n \r\n             if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n                 isHave = true;\r\n                 food = this.myFoodPools[i];\r\n-                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n-                food.data = temp111;\r\n                 break;\r\n             }\r\n         }\r\n \r\n         if (!isHave) {\r\n             food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let totalInit = 1;\r\n-            let isHa = false;\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === index) {\r\n-                    isHa = true;\r\n-                    totalInit = this.myFoodPools[i].data.total + 1;\r\n-                    break;\r\n-                }\r\n-\r\n-            }\r\n-            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n+            let temp = { index: index, isShow: true, total: 1, tag: this._foodTag };\r\n             food.data = temp;\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n             this._foodTag++;\r\n"
                },
                {
                    "date": 1624001839655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,10 +65,8 @@\n     private _ready: fgui.GImage;\r\n     private _go: fgui.GImage;\r\n     private _over: fgui.GGroup;\r\n \r\n-    private _clickTotalLimit: number = 0.5;\r\n-\r\n     private feedbackType: any = cc.Enum({\r\n \r\n         No: 0,\r\n         GuideShow: 1,\r\n"
                },
                {
                    "date": 1624001950835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,8 +319,9 @@\n \r\n         setTimeout(() => {\r\n             let state1: any = globalThis._.cloneDeep(this._state);\r\n             state1.rigthTotal = state.rigthTotal;\r\n+            state1.isAddFood = true;\r\n             this.updateState(state1);\r\n         }, 0.03)\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624001957688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,11 +319,11 @@\n \r\n         setTimeout(() => {\r\n             let state1: any = globalThis._.cloneDeep(this._state);\r\n             state1.rigthTotal = state.rigthTotal;\r\n-            state1.isAddFood = true;\r\n+            state1.isAddFood = false;\r\n             this.updateState(state1);\r\n-        }, 0.03)\r\n+        }, 0.02)\r\n \r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n"
                },
                {
                    "date": 1624002046979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,781 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected update(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+\r\n+        if (this._gameTime >= 60 * 15) {\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, total: 1, tag: this._foodTag };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            state1.rigthTotal = state.rigthTotal;\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+        }, 0.02)\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        cc.tween(this)\r\n+                            .delay(0.15)\r\n+                            .call(() => {\r\n+\r\n+                                let indexTemp = btn.data.index;\r\n+\r\n+                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                    if (this.myFoodPools[i] === btn) {\r\n+                                        this.myFoodPools.splice(i, 1);\r\n+                                        btn.removeFromParent();\r\n+                                        break;\r\n+                                    }\r\n+                                }\r\n+\r\n+                                let state2: any = globalThis._.cloneDeep(this._state);\r\n+                                state2.rigthTotal[indexTemp].clickTotle++;\r\n+                                this.updateState(state2);\r\n+\r\n+                            })\r\n+                            .start()\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * 60) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = 60 * 1.5;\r\n+\r\n+            } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = 60 * 0.7;\r\n+\r\n+            } else if (this._gameTime > 10 * 60) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = 60 * 0.5;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+                this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624002062467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -778,785 +778,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected update(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-\r\n-        if (this._gameTime >= 60 * 15) {\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, total: 1, tag: this._foodTag };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-        food.x = randPosX;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            state1.rigthTotal = state.rigthTotal;\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-        }, 0.02)\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        cc.tween(this)\r\n-                            .delay(0.15)\r\n-                            .call(() => {\r\n-\r\n-                                let indexTemp = btn.data.index;\r\n-\r\n-                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                    if (this.myFoodPools[i] === btn) {\r\n-                                        this.myFoodPools.splice(i, 1);\r\n-                                        btn.removeFromParent();\r\n-                                        break;\r\n-                                    }\r\n-                                }\r\n-\r\n-                                let state2: any = globalThis._.cloneDeep(this._state);\r\n-                                state2.rigthTotal[indexTemp].clickTotle++;\r\n-                                this.updateState(state2);\r\n-\r\n-                            })\r\n-                            .start()\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * 60) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = 60 * 1.5;\r\n-\r\n-            } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = 60 * 0.7;\r\n-\r\n-            } else if (this._gameTime > 10 * 60) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = 60 * 0.5;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-                this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624002097758,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import { game } from '../../../../creator';\r\n \r\n /*\r\n  * @Descripttion: \r\n  * @version: \r\n@@ -263,8 +264,9 @@\n         if (this._interTime >= this._interTimeLimit) {\r\n             this._interTime = 0;\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             state.isAddFood = true;\r\n+            state.gameTime = this._gameTime;\r\n             this.updateState(state);\r\n         }\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624002106908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -253,8 +253,9 @@\n                 state.submitFeedback = this.feedbackType.RightFeed;\r\n \r\n             }\r\n \r\n+            state.gameTime = this._gameTime;\r\n             state.gameOver = true;\r\n             this.updateState(state);\r\n             return;\r\n         }\r\n"
                },
                {
                    "date": 1624002120858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,10 +252,10 @@\n \r\n                 state.submitFeedback = this.feedbackType.RightFeed;\r\n \r\n             }\r\n-\r\n-            state.gameTime = this._gameTime;\r\n+            this._gameTime = 0\r\n+            state.gameTime = 0;\r\n             state.gameOver = true;\r\n             this.updateState(state);\r\n             return;\r\n         }\r\n"
                },
                {
                    "date": 1624002125963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -252,9 +252,9 @@\n \r\n                 state.submitFeedback = this.feedbackType.RightFeed;\r\n \r\n             }\r\n-            this._gameTime = 0\r\n+            this._gameTime = 0;\r\n             state.gameTime = 0;\r\n             state.gameOver = true;\r\n             this.updateState(state);\r\n             return;\r\n"
                },
                {
                    "date": 1624002173805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-import { game } from '../../../../creator';\r\n \r\n /*\r\n  * @Descripttion: \r\n  * @version: \r\n"
                },
                {
                    "date": 1624002334045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -486,9 +486,9 @@\n                         //点击正确\r\n                         btn.icon = 'ui://733aoo45r3753l';\r\n                         btn.data.isShow = true;\r\n                         cc.tween(this)\r\n-                            .delay(0.15)\r\n+                            .delay(0.02)\r\n                             .call(() => {\r\n \r\n                                 let indexTemp = btn.data.index;\r\n \r\n"
                },
                {
                    "date": 1624002342733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -486,9 +486,9 @@\n                         //点击正确\r\n                         btn.icon = 'ui://733aoo45r3753l';\r\n                         btn.data.isShow = true;\r\n                         cc.tween(this)\r\n-                            .delay(0.02)\r\n+                            .delay(0.03)\r\n                             .call(() => {\r\n \r\n                                 let indexTemp = btn.data.index;\r\n \r\n"
                },
                {
                    "date": 1624002553982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,9 +228,8 @@\n \r\n             return;\r\n         }\r\n         this._gameTime++;\r\n-\r\n         if (this._gameTime >= 60 * 15) {\r\n \r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             let isFail = false;\r\n@@ -252,9 +251,9 @@\n                 state.submitFeedback = this.feedbackType.RightFeed;\r\n \r\n             }\r\n             this._gameTime = 0;\r\n-            state.gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n             state.gameOver = true;\r\n             this.updateState(state);\r\n             return;\r\n         }\r\n"
                },
                {
                    "date": 1624002597650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -400,8 +400,9 @@\n                 }\r\n                 this.myFoodPools = [];\r\n                 this._foodTag = 1;\r\n                 cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.update, 0.02);\r\n \r\n             } else {\r\n                 let boy = this._view.getChild(\"boy\").asButton;\r\n                 let girl = this._view.getChild(\"girl\").asButton;\r\n"
                },
                {
                    "date": 1624002625255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -221,9 +221,9 @@\n             }\r\n         }\r\n     }\r\n \r\n-    protected update(dt: number): void {\r\n+    protected updateAdd(dt: number): void {\r\n \r\n         if (!this._gameStart || this._gameOver) {\r\n \r\n             return;\r\n@@ -400,9 +400,9 @@\n                 }\r\n                 this.myFoodPools = [];\r\n                 this._foodTag = 1;\r\n                 cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.update, 0.02);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n \r\n             } else {\r\n                 let boy = this._view.getChild(\"boy\").asButton;\r\n                 let girl = this._view.getChild(\"girl\").asButton;\r\n"
                },
                {
                    "date": 1624002652145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,10 @@\n     private _package: any;\r\n \r\n     private timeText: fgui.GLabel;\r\n \r\n+    private _\r\n+\r\n     private _gameMusic: cc.AudioClip;\r\n     private _wrongSound: cc.AudioClip;\r\n     private _rightSound: cc.AudioClip;\r\n     private _readySound: cc.AudioClip;\r\n"
                },
                {
                    "date": 1624002683858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,11 +48,11 @@\n     private _package: any;\r\n \r\n     private timeText: fgui.GLabel;\r\n \r\n-    private _\r\n+    private _frames:\r\n \r\n-    private _gameMusic: cc.AudioClip;\r\n+        private _gameMusic: cc.AudioClip;\r\n     private _wrongSound: cc.AudioClip;\r\n     private _rightSound: cc.AudioClip;\r\n     private _readySound: cc.AudioClip;\r\n \r\n"
                },
                {
                    "date": 1624002692390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,11 +48,11 @@\n     private _package: any;\r\n \r\n     private timeText: fgui.GLabel;\r\n \r\n-    private _frames:\r\n+    private _frames: number = 60;\r\n \r\n-        private _gameMusic: cc.AudioClip;\r\n+    private _gameMusic: cc.AudioClip;\r\n     private _wrongSound: cc.AudioClip;\r\n     private _rightSound: cc.AudioClip;\r\n     private _readySound: cc.AudioClip;\r\n \r\n"
                },
                {
                    "date": 1624002770480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n     private _package: any;\r\n \r\n     private timeText: fgui.GLabel;\r\n \r\n-    private _frames: number = 60;\r\n+    private _framesSecond: number = 30;\r\n \r\n     private _gameMusic: cc.AudioClip;\r\n     private _wrongSound: cc.AudioClip;\r\n     private _rightSound: cc.AudioClip;\r\n@@ -230,9 +230,9 @@\n \r\n             return;\r\n         }\r\n         this._gameTime++;\r\n-        if (this._gameTime >= 60 * 15) {\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n \r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             let isFail = false;\r\n             for (var key in state.rigthTotal) {\r\n@@ -552,30 +552,30 @@\n \r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n             this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * 60) {\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n \r\n                 this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = 60 * 1.5;\r\n+                this._interTimeLimit = this._framesSecond * 1.5;\r\n \r\n-            } else if (this._gameTime > 5 * 60 && this._gameTime <= 10 * 60) {\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n \r\n                 this._dropSpeed = 2.3;\r\n                 //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = 60 * 0.7;\r\n+                this._interTimeLimit = this._framesSecond * 0.7;\r\n \r\n-            } else if (this._gameTime > 10 * 60) {\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n \r\n                 this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = 60 * 0.5;\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n             }\r\n \r\n             if (state.isAddFood) {\r\n                 // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 this.foodDropAnimate(randIndex, state);\r\n-                this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n+                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n             }\r\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n"
                },
                {
                    "date": 1624003023396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,785 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, total: 1, tag: this._foodTag };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            state1.rigthTotal = state.rigthTotal;\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+        }, 0.02)\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        cc.tween(this)\r\n+                            .delay(0.03)\r\n+                            .call(() => {\r\n+\r\n+                                let indexTemp = btn.data.index;\r\n+\r\n+                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                    if (this.myFoodPools[i] === btn) {\r\n+                                        this.myFoodPools.splice(i, 1);\r\n+                                        btn.removeFromParent();\r\n+                                        break;\r\n+                                    }\r\n+                                }\r\n+\r\n+                                let state2: any = globalThis._.cloneDeep(this._state);\r\n+                                state2.rigthTotal[indexTemp].clickTotle++;\r\n+                                this.updateState(state2);\r\n+\r\n+                            })\r\n+                            .start()\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.5;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.7;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624003028547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -782,789 +782,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, total: 1, tag: this._foodTag };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-        food.x = randPosX;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            state1.rigthTotal = state.rigthTotal;\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-        }, 0.02)\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        cc.tween(this)\r\n-                            .delay(0.03)\r\n-                            .call(() => {\r\n-\r\n-                                let indexTemp = btn.data.index;\r\n-\r\n-                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                    if (this.myFoodPools[i] === btn) {\r\n-                                        this.myFoodPools.splice(i, 1);\r\n-                                        btn.removeFromParent();\r\n-                                        break;\r\n-                                    }\r\n-                                }\r\n-\r\n-                                let state2: any = globalThis._.cloneDeep(this._state);\r\n-                                state2.rigthTotal[indexTemp].clickTotle++;\r\n-                                this.updateState(state2);\r\n-\r\n-                            })\r\n-                            .start()\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.5;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.7;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624003292032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import { AssetManager } from '../../../../creator';\r\n \r\n /*\r\n  * @Descripttion: \r\n  * @version: \r\n@@ -487,26 +488,31 @@\n \r\n                         //点击正确\r\n                         btn.icon = 'ui://733aoo45r3753l';\r\n                         btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.01);\r\n                         cc.tween(this)\r\n                             .delay(0.03)\r\n                             .call(() => {\r\n \r\n-                                let indexTemp = btn.data.index;\r\n \r\n-                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                    if (this.myFoodPools[i] === btn) {\r\n-                                        this.myFoodPools.splice(i, 1);\r\n-                                        btn.removeFromParent();\r\n-                                        break;\r\n-                                    }\r\n-                                }\r\n \r\n-                                let state2: any = globalThis._.cloneDeep(this._state);\r\n-                                state2.rigthTotal[indexTemp].clickTotle++;\r\n-                                this.updateState(state2);\r\n-\r\n                             })\r\n                             .start()\r\n                         cc.audioEngine.playEffect(this._rightSound, false);\r\n \r\n"
                },
                {
                    "date": 1624003299807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -504,9 +504,10 @@\n                             let state2: any = globalThis._.cloneDeep(this._state);\r\n                             state2.rigthTotal[indexTemp].clickTotle++;\r\n                             this.updateState(state2);\r\n \r\n-                        }, 0.01);\r\n+                        }, 0.05);\r\n+\r\n                         cc.tween(this)\r\n                             .delay(0.03)\r\n                             .call(() => {\r\n \r\n"
                },
                {
                    "date": 1624003305308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -506,16 +506,8 @@\n                             this.updateState(state2);\r\n \r\n                         }, 0.05);\r\n \r\n-                        cc.tween(this)\r\n-                            .delay(0.03)\r\n-                            .call(() => {\r\n-\r\n-\r\n-\r\n-                            })\r\n-                            .start()\r\n                         cc.audioEngine.playEffect(this._rightSound, false);\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1624003537478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -508,10 +508,8 @@\n                         }, 0.05);\r\n \r\n                         cc.audioEngine.playEffect(this._rightSound, false);\r\n \r\n-\r\n-\r\n                     } else {\r\n \r\n                         //点击错误\r\n                         cc.audioEngine.playEffect(this._wrongSound, false);\r\n"
                },
                {
                    "date": 1624003545667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-import { AssetManager } from '../../../../creator';\r\n \r\n /*\r\n  * @Descripttion: \r\n  * @version: \r\n"
                },
                {
                    "date": 1624003795412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,781 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, total: 1, tag: this._foodTag };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            state1.rigthTotal = state.rigthTotal;\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+        }, 0.02)\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.5;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.7;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624003839679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -227,8 +227,9 @@\n     protected updateAdd(dt: number): void {\r\n \r\n         if (!this._gameStart || this._gameOver) {\r\n \r\n+            this.unschedule(this.updateAdd);\r\n             return;\r\n         }\r\n         this._gameTime++;\r\n         if (this._gameTime >= this._framesSecond * 15) {\r\n@@ -778,785 +779,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, total: 1, tag: this._foodTag };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-        food.x = randPosX;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            state1.rigthTotal = state.rigthTotal;\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-        }, 0.02)\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.5;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.7;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624003844767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,8 +233,9 @@\n         }\r\n         this._gameTime++;\r\n         if (this._gameTime >= this._framesSecond * 15) {\r\n \r\n+            this.unschedule(this.updateAdd);\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             let isFail = false;\r\n             for (var key in state.rigthTotal) {\r\n \r\n"
                },
                {
                    "date": 1624003850877,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,8 +234,9 @@\n         this._gameTime++;\r\n         if (this._gameTime >= this._framesSecond * 15) {\r\n \r\n             this.unschedule(this.updateAdd);\r\n+\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             let isFail = false;\r\n             for (var key in state.rigthTotal) {\r\n \r\n"
                },
                {
                    "date": 1624003958184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,784 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, total: 1, tag: this._foodTag };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: randPosX, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            state1.rigthTotal = state.rigthTotal;\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+        }, 0.02)\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.5;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.7;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624004006349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -303,792 +303,8 @@\n         food.y = 100;\r\n         food.visible = true;\r\n \r\n         cc.tween(food)\r\n-            .to(this._dropSpeed, { x: randPosX, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            state1.rigthTotal = state.rigthTotal;\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-        }, 0.02)\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.5;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.7;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, total: 1, tag: this._foodTag };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-        food.x = randPosX;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n             .to(this._dropSpeed, { x: food.x, y: 970 })\r\n             .call(() => {\r\n                 food.y = 100;\r\n                 food.visible = false;\r\n"
                },
                {
                    "date": 1624004068033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -554,20 +554,20 @@\n             this._gameTime = state.gameTime;\r\n             if (this._gameTime <= 5 * this._framesSecond) {\r\n \r\n                 this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.5;\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n \r\n             } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n \r\n                 this._dropSpeed = 2.3;\r\n                 //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.7;\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n \r\n             } else if (this._gameTime > 10 * this._framesSecond) {\r\n \r\n                 this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n             }\r\n \r\n             if (state.isAddFood) {\r\n                 // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n"
                },
                {
                    "date": 1624004168080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,9 +289,9 @@\n \r\n         if (!isHave) {\r\n             food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, total: 1, tag: this._foodTag };\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag };\r\n             food.data = temp;\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n             this._foodTag++;\r\n"
                },
                {
                    "date": 1624004184556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -306,9 +306,9 @@\n         cc.tween(food)\r\n             .to(this._dropSpeed, { x: food.x, y: 970 })\r\n             .call(() => {\r\n                 food.y = 100;\r\n-                food.visible = false;\r\n+                food.visible = true;\r\n                 food.data.isShow = false;\r\n \r\n             })\r\n             .start();\r\n"
                },
                {
                    "date": 1624004282066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -289,9 +289,9 @@\n \r\n         if (!isHave) {\r\n             food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag };\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n             food.data = temp;\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n             this._foodTag++;\r\n"
                },
                {
                    "date": 1624004306420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,784 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+        food.x = randPosX;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            state1.rigthTotal = state.rigthTotal;\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+        }, 0.02)\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                this.foodDropAnimate(randIndex, state);\r\n+                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624004352580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -781,788 +781,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-        food.x = randPosX;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            state1.rigthTotal = state.rigthTotal;\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-        }, 0.02)\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                this.foodDropAnimate(randIndex, state);\r\n-                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624004444073,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,8 +312,9 @@\n \r\n             })\r\n             .start();\r\n \r\n+        console.log('==== ====' + );\r\n \r\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === index) {\r\n"
                },
                {
                    "date": 1624004451140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n \r\n             })\r\n             .start();\r\n \r\n-        console.log('==== ====' + );\r\n+        console.log('==== ====' + food.data);\r\n \r\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === index) {\r\n"
                },
                {
                    "date": 1624004461708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n \r\n /*\r\n  * @Descripttion: \r\n  * @version: \r\n@@ -312,9 +313,9 @@\n \r\n             })\r\n             .start();\r\n \r\n-        console.log('==== ====' + food.data);\r\n+        console.log('==== ====' + food.data.index);\r\n \r\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === index) {\r\n"
                },
                {
                    "date": 1624004477400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n \r\n             })\r\n             .start();\r\n \r\n-        console.log('==== ====' + food.data.index);\r\n+        console.log('==== index ====' + food.data.index + '=== yy ===' + );\r\n \r\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === index) {\r\n"
                },
                {
                    "date": 1624004482465,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n \r\n             })\r\n             .start();\r\n \r\n-        console.log('==== index ====' + food.data.index + '=== yy ===' + );\r\n+        console.log('==== index ====' + food.data.index + '=== yy ===' + food.y);\r\n \r\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === index) {\r\n"
                },
                {
                    "date": 1624004502842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n \r\n             })\r\n             .start();\r\n \r\n-        console.log('==== index ====' + food.data.index + '=== yy ===' + food.y);\r\n+        console.log('==== index ====' + food.data.tag + '=== yy ===' + food.y);\r\n \r\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === index) {\r\n"
                },
                {
                    "date": 1624004553847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,9 +313,9 @@\n \r\n             })\r\n             .start();\r\n \r\n-        console.log('==== index ====' + food.data.tag + '=== yy ===' + food.y);\r\n+        console.log('==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n \r\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === index) {\r\n"
                },
                {
                    "date": 1624004577600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -298,9 +298,9 @@\n             this._foodTag++;\r\n         }\r\n \r\n         // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n         food.x = randPosX;\r\n         food.y = 100;\r\n         food.visible = true;\r\n \r\n@@ -573,8 +573,9 @@\n \r\n             if (state.isAddFood) {\r\n                 // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n                 this.foodDropAnimate(randIndex, state);\r\n                 this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n             }\r\n         }\r\n"
                },
                {
                    "date": 1624004598742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -274,9 +274,9 @@\n             this.updateState(state);\r\n         }\r\n     }\r\n \r\n-    private foodDropAnimate(index: number, state: any) {\r\n+    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n \r\n         let isHave = false;\r\n         let food = null;\r\n         for (let i = 0; i < this.myFoodPools.length; i++) {\r\n@@ -574,9 +574,9 @@\n             if (state.isAddFood) {\r\n                 // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-                this.foodDropAnimate(randIndex, state);\r\n+                this.foodDropAnimate(randIndex, randPosX, state);\r\n                 this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n             }\r\n         }\r\n \r\n"
                },
                {
                    "date": 1624004606335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -297,9 +297,8 @@\n             this.myFoodPools.push(food);\r\n             this._foodTag++;\r\n         }\r\n \r\n-        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n \r\n         food.x = randPosX;\r\n         food.y = 100;\r\n         food.visible = true;\r\n@@ -572,8 +571,9 @@\n             }\r\n \r\n             if (state.isAddFood) {\r\n                 // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n                 this.foodDropAnimate(randIndex, randPosX, state);\r\n                 this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n"
                },
                {
                    "date": 1624004681621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -297,25 +297,29 @@\n             this.myFoodPools.push(food);\r\n             this._foodTag++;\r\n         }\r\n \r\n+        food.x = randPosX;\r\n \r\n-        food.x = randPosX;\r\n+        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+\r\n         food.y = 100;\r\n         food.visible = true;\r\n \r\n         cc.tween(food)\r\n             .to(food.data.speed, { x: food.x, y: 970 })\r\n             .call(() => {\r\n+\r\n                 food.y = 100;\r\n                 food.visible = true;\r\n                 food.data.isShow = false;\r\n \r\n             })\r\n             .start();\r\n \r\n-        console.log('==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n \r\n+\r\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === index) {\r\n \r\n"
                },
                {
                    "date": 1624004686712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,8 +309,10 @@\n         cc.tween(food)\r\n             .to(food.data.speed, { x: food.x, y: 970 })\r\n             .call(() => {\r\n \r\n+                console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n                 food.y = 100;\r\n                 food.visible = true;\r\n                 food.data.isShow = false;\r\n \r\n"
                },
                {
                    "date": 1624004702418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,793 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        food.x = randPosX;\r\n+\r\n+        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+\r\n+                console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+\r\n+\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            state1.rigthTotal = state.rigthTotal;\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+        }, 0.02)\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+                this.foodDropAnimate(randIndex, randPosX, state);\r\n+                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624004709049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -790,797 +790,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        food.x = randPosX;\r\n-\r\n-        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-\r\n-\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            state1.rigthTotal = state.rigthTotal;\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-        }, 0.02)\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-                this.foodDropAnimate(randIndex, randPosX, state);\r\n-                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624004720249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,9 +309,9 @@\n         cc.tween(food)\r\n             .to(food.data.speed, { x: food.x, y: 970 })\r\n             .call(() => {\r\n \r\n-                console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n \r\n                 food.y = 100;\r\n                 food.visible = true;\r\n                 food.data.isShow = false;\r\n"
                },
                {
                    "date": 1624004925097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -301,9 +301,8 @@\n         food.x = randPosX;\r\n \r\n         console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n \r\n-\r\n         food.y = 100;\r\n         food.visible = true;\r\n \r\n         cc.tween(food)\r\n@@ -318,10 +317,9 @@\n \r\n             })\r\n             .start();\r\n \r\n-\r\n-\r\n+        let isFlag = false;\r\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === index) {\r\n \r\n"
                },
                {
                    "date": 1624004931537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -322,8 +322,9 @@\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === index) {\r\n \r\n+                isFlag = true;\r\n                 state.rigthTotal[index].showTotal++;\r\n                 break;\r\n             }\r\n         }\r\n"
                },
                {
                    "date": 1624004936682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,8 +328,11 @@\n                 break;\r\n             }\r\n         }\r\n \r\n+        if () {\r\n+\r\n+        }\r\n         setTimeout(() => {\r\n             let state1: any = globalThis._.cloneDeep(this._state);\r\n             state1.rigthTotal = state.rigthTotal;\r\n             state1.isAddFood = false;\r\n"
                },
                {
                    "date": 1624004947017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,18 +328,18 @@\n                 break;\r\n             }\r\n         }\r\n \r\n-        if () {\r\n-\r\n+        if (isFlag) {\r\n+            setTimeout(() => {\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+                state1.isAddFood = false;\r\n+                this.updateState(state1);\r\n+            }, 0.02)\r\n         }\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            state1.rigthTotal = state.rigthTotal;\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-        }, 0.02)\r\n \r\n+\r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n \r\n"
                },
                {
                    "date": 1624004953931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,10 +336,8 @@\n                 state1.isAddFood = false;\r\n                 this.updateState(state1);\r\n             }, 0.02)\r\n         }\r\n-\r\n-\r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n \r\n"
                },
                {
                    "date": 1624005057499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -331,13 +331,19 @@\n \r\n         if (isFlag) {\r\n             setTimeout(() => {\r\n                 let state1: any = globalThis._.cloneDeep(this._state);\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-                state1.isAddFood = false;\r\n-                this.updateState(state1);\r\n+                if (isFlag) {\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.rigthTotal = state.rigthTotal;\r\n+                    state1.isAddFood = false;\r\n+                    this.updateState(state1);\r\n+                }\r\n+\r\n             }, 0.02)\r\n         }\r\n+\r\n+\r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n \r\n"
                },
                {
                    "date": 1624005069856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,13 +332,12 @@\n         if (isFlag) {\r\n             setTimeout(() => {\r\n                 let state1: any = globalThis._.cloneDeep(this._state);\r\n                 if (isFlag) {\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n                     state1.rigthTotal = state.rigthTotal;\r\n-                    state1.isAddFood = false;\r\n-                    this.updateState(state1);\r\n                 }\r\n+                state1.isAddFood = false;\r\n+                this.updateState(state1);\r\n \r\n             }, 0.02)\r\n         }\r\n \r\n"
                },
                {
                    "date": 1624005075562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,8 +329,9 @@\n             }\r\n         }\r\n \r\n         if (isFlag) {\r\n+\r\n             setTimeout(() => {\r\n                 let state1: any = globalThis._.cloneDeep(this._state);\r\n                 if (isFlag) {\r\n                     state1.rigthTotal = state.rigthTotal;\r\n"
                },
                {
                    "date": 1624005129980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -338,9 +338,9 @@\n                 }\r\n                 state1.isAddFood = false;\r\n                 this.updateState(state1);\r\n \r\n-            }, 0.02)\r\n+            }, 0.03)\r\n         }\r\n \r\n \r\n     }\r\n"
                },
                {
                    "date": 1624005178171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,22 +328,17 @@\n                 break;\r\n             }\r\n         }\r\n \r\n-        if (isFlag) {\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n \r\n-            setTimeout(() => {\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                if (isFlag) {\r\n-                    state1.rigthTotal = state.rigthTotal;\r\n-                }\r\n-                state1.isAddFood = false;\r\n-                this.updateState(state1);\r\n-\r\n-            }, 0.03)\r\n-        }\r\n-\r\n-\r\n+        }, 0.03)\r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n \r\n"
                },
                {
                    "date": 1624005185755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,794 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        food.x = randPosX;\r\n+\r\n+        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+\r\n+                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.03)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+                this.foodDropAnimate(randIndex, randPosX, state);\r\n+                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624005192920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,794 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        food.x = randPosX;\r\n+\r\n+        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+\r\n+                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.03)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+                this.foodDropAnimate(randIndex, randPosX, state);\r\n+                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624005198807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -791,1592 +791,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        food.x = randPosX;\r\n-\r\n-        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.03)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-                this.foodDropAnimate(randIndex, randPosX, state);\r\n-                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        food.x = randPosX;\r\n-\r\n-        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.03)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-                this.foodDropAnimate(randIndex, randPosX, state);\r\n-                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624005243357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,9 +336,9 @@\n             }\r\n             state1.isAddFood = false;\r\n             this.updateState(state1);\r\n \r\n-        }, 0.03)\r\n+        }, 0.1)\r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n \r\n"
                },
                {
                    "date": 1624005252762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,9 +336,9 @@\n             }\r\n             state1.isAddFood = false;\r\n             this.updateState(state1);\r\n \r\n-        }, 0.1)\r\n+        }, 0.07)\r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n \r\n"
                },
                {
                    "date": 1624005325993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,794 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        food.x = randPosX;\r\n+\r\n+        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+\r\n+                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.2)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+                this.foodDropAnimate(randIndex, randPosX, state);\r\n+                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624005332148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -791,798 +791,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        food.x = randPosX;\r\n-\r\n-        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.07)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-                this.foodDropAnimate(randIndex, randPosX, state);\r\n-                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624005418821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -566,16 +566,22 @@\n                 this._interTimeLimit = this._framesSecond * 1.2;\r\n \r\n             } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n \r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n \r\n+                // this._dropSpeed = 2.3;\r\n+                // //2.0 ----> 60 * 0.6\r\n+                // this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n             } else if (this._gameTime > 10 * this._framesSecond) {\r\n \r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                // this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                // this._interTimeLimit = this._framesSecond * 0.3;\r\n             }\r\n \r\n             if (state.isAddFood) {\r\n                 // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n"
                },
                {
                    "date": 1624005481323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -566,22 +566,22 @@\n                 this._interTimeLimit = this._framesSecond * 1.2;\r\n \r\n             } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n \r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n \r\n-                // this._dropSpeed = 2.3;\r\n-                // //2.0 ----> 60 * 0.6\r\n-                // this._interTimeLimit = this._framesSecond * 0.5;\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n \r\n             } else if (this._gameTime > 10 * this._framesSecond) {\r\n \r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n \r\n-                // this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                // this._interTimeLimit = this._framesSecond * 0.3;\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n             }\r\n \r\n             if (state.isAddFood) {\r\n                 // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n"
                },
                {
                    "date": 1624005531981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,800 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        food.x = randPosX;\r\n+\r\n+        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+\r\n+                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.2)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+                this.foodDropAnimate(randIndex, randPosX, state);\r\n+                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624005581688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,9 +181,10 @@\n             submitFeedback: this.feedbackType.No,\r\n             gameTime: 0,\r\n             clickFoodTag: -1,\r\n             rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n+            isAddFood: false,\r\n+            gameFoodData: [],\r\n         }\r\n     }\r\n \r\n     async init(data: any) {\r\n@@ -797,804 +798,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        food.x = randPosX;\r\n-\r\n-        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.2)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-                this.foodDropAnimate(randIndex, randPosX, state);\r\n-                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624005735237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -556,9 +556,12 @@\n                 this._playBtn.enabled = false;\r\n             }\r\n         }\r\n \r\n+        if () {\r\n \r\n+        }\r\n+\r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n             this._gameTime = state.gameTime;\r\n             if (this._gameTime <= 5 * this._framesSecond) {\r\n"
                },
                {
                    "date": 1624005742683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -556,9 +556,9 @@\n                 this._playBtn.enabled = false;\r\n             }\r\n         }\r\n \r\n-        if () {\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n"
                },
                {
                    "date": 1624005750588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -556,9 +556,9 @@\n                 this._playBtn.enabled = false;\r\n             }\r\n         }\r\n \r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n \r\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n"
                },
                {
                    "date": 1624005756178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,805 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false,\r\n+            gameFoodData: [],\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        food.x = randPosX;\r\n+\r\n+        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+\r\n+                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.2)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+                this.foodDropAnimate(randIndex, randPosX, state);\r\n+                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624005844774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -592,817 +592,76 @@\n                 // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n                 // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-                this.foodDropAnimate(randIndex, randPosX, state);\r\n-                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n \r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n+                let isHave = false;\r\n+                let food = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n+                    if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                        isHave = true;\r\n+                        food = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n                 }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n \r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n+                if (!isHave) {\r\n+                    food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+                    food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+                    let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+                    food.data = temp;\r\n+                    this._view.addChild(food);\r\n+                    this.myFoodPools.push(food);\r\n+                    this._foodTag++;\r\n                 }\r\n-            })\r\n-            .start()\r\n \r\n-    }\r\n+                food.x = randPosX;\r\n \r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n+                console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n \r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false,\r\n-            gameFoodData: [],\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        food.x = randPosX;\r\n-\r\n-        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n                 food.y = 100;\r\n                 food.visible = true;\r\n-                food.data.isShow = false;\r\n \r\n-            })\r\n-            .start();\r\n+                cc.tween(food)\r\n+                    .to(food.data.speed, { x: food.x, y: 970 })\r\n+                    .call(() => {\r\n \r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n \r\n-            if (this._rightIndexs[i] === index) {\r\n+                        food.y = 100;\r\n+                        food.visible = true;\r\n+                        food.data.isShow = false;\r\n \r\n-                isFlag = true;\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.2)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n                     })\r\n                     .start();\r\n \r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let isFlag = false;\r\n+                for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n-                    this._readyGroup.visible = false;\r\n+                    if (this._rightIndexs[i] === index) {\r\n \r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n+                        isFlag = true;\r\n+                        state.rigthTotal[index].showTotal++;\r\n                         break;\r\n                     }\r\n                 }\r\n \r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n+                setTimeout(() => {\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    if (isFlag) {\r\n+                        state1.rigthTotal = state.rigthTotal;\r\n                     }\r\n-                    if (isRight) {\r\n+                    state1.isAddFood = false;\r\n+                    this.updateState(state1);\r\n \r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n+                }, 0.2)\r\n \r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n+                // this.foodDropAnimate(randIndex, randPosX, state);\r\n+                // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n             }\r\n-\r\n         }\r\n \r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-                this.foodDropAnimate(randIndex, randPosX, state);\r\n-                this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n         if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n             this.playTitle(state.title);\r\n         }\r\n \r\n"
                },
                {
                    "date": 1624005904712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -593,8 +593,14 @@\n                 // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n+                let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+                food.data = temp;\r\n+                this._view.addChild(food);\r\n+                this.myFoodPools.push(food);\r\n+                this._foodTag++;\r\n+\r\n                 let isHave = false;\r\n                 let food = null;\r\n                 for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n"
                },
                {
                    "date": 1624005912211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -593,9 +593,9 @@\n                 // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n-                let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+                let temp = { index: randIndex, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n                 food.data = temp;\r\n                 this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n                 this._foodTag++;\r\n"
                },
                {
                    "date": 1624005939576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -593,9 +593,9 @@\n                 // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n-                let temp = { index: randIndex, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+                let temp = { index: randIndex, isShow: true, tag: this._foodTag };\r\n                 food.data = temp;\r\n                 this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n                 this._foodTag++;\r\n"
                },
                {
                    "date": 1624005950553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -593,9 +593,9 @@\n                 // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n-                let temp = { index: randIndex, isShow: true, tag: this._foodTag };\r\n+                let temp = { index: randIndex, isShow: true, tag: this._foodTag x: randPosX };\r\n                 food.data = temp;\r\n                 this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n                 this._foodTag++;\r\n"
                },
                {
                    "date": 1624005957918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -593,9 +593,9 @@\n                 // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n-                let temp = { index: randIndex, isShow: true, tag: this._foodTag x: randPosX };\r\n+                let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n                 food.data = temp;\r\n                 this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n                 this._foodTag++;\r\n"
                },
                {
                    "date": 1624005979047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,874 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            isAddFood: false,\r\n+            gameFoodData: [],\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.isAddFood = true;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        food.x = randPosX;\r\n+\r\n+        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+\r\n+                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.2)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                state.gameFoodData\r\n+                this._view.addChild(food);\r\n+                this.myFoodPools.push(food);\r\n+                this._foodTag++;\r\n+\r\n+                let isHave = false;\r\n+                let food = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                        isHave = true;\r\n+                        food = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (!isHave) {\r\n+                    food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+                    food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+                    let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+                    food.data = temp;\r\n+                    this._view.addChild(food);\r\n+                    this.myFoodPools.push(food);\r\n+                    this._foodTag++;\r\n+                }\r\n+\r\n+                food.x = randPosX;\r\n+\r\n+                console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+\r\n+                cc.tween(food)\r\n+                    .to(food.data.speed, { x: food.x, y: 970 })\r\n+                    .call(() => {\r\n+\r\n+                        console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                        food.y = 100;\r\n+                        food.visible = true;\r\n+                        food.data.isShow = false;\r\n+\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let isFlag = false;\r\n+                for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+                    if (this._rightIndexs[i] === index) {\r\n+\r\n+                        isFlag = true;\r\n+                        state.rigthTotal[index].showTotal++;\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                setTimeout(() => {\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    if (isFlag) {\r\n+                        state1.rigthTotal = state.rigthTotal;\r\n+                    }\r\n+                    state1.isAddFood = false;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.2)\r\n+\r\n+                // this.foodDropAnimate(randIndex, randPosX, state);\r\n+                // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624005985171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -871,878 +871,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false,\r\n-            gameFoodData: [],\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        food.x = randPosX;\r\n-\r\n-        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.2)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                food.data = temp;\r\n-                this._view.addChild(food);\r\n-                this.myFoodPools.push(food);\r\n-                this._foodTag++;\r\n-\r\n-                let isHave = false;\r\n-                let food = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                        isHave = true;\r\n-                        food = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (!isHave) {\r\n-                    food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-                    food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-                    let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-                    food.data = temp;\r\n-                    this._view.addChild(food);\r\n-                    this.myFoodPools.push(food);\r\n-                    this._foodTag++;\r\n-                }\r\n-\r\n-                food.x = randPosX;\r\n-\r\n-                console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-\r\n-                cc.tween(food)\r\n-                    .to(food.data.speed, { x: food.x, y: 970 })\r\n-                    .call(() => {\r\n-\r\n-                        console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                        food.y = 100;\r\n-                        food.visible = true;\r\n-                        food.data.isShow = false;\r\n-\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let isFlag = false;\r\n-                for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-                    if (this._rightIndexs[i] === index) {\r\n-\r\n-                        isFlag = true;\r\n-                        state.rigthTotal[index].showTotal++;\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                setTimeout(() => {\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    if (isFlag) {\r\n-                        state1.rigthTotal = state.rigthTotal;\r\n-                    }\r\n-                    state1.isAddFood = false;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.2)\r\n-\r\n-                // this.foodDropAnimate(randIndex, randPosX, state);\r\n-                // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624006000977,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -594,10 +594,10 @@\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n                 let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                state.gameFoodData\r\n-                this._view.addChild(food);\r\n+                state.gameFoodData =\r\n+                    this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n                 this._foodTag++;\r\n \r\n                 let isHave = false;\r\n"
                },
                {
                    "date": 1624006006154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -594,10 +594,10 @@\n                 let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                 let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n                 let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                state.gameFoodData =\r\n-                    this._view.addChild(food);\r\n+                state.gameFoodData = temp;\r\n+                this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n                 this._foodTag++;\r\n \r\n                 let isHave = false;\r\n"
                },
                {
                    "date": 1624006020309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -595,10 +595,8 @@\n                 let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n                 let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n                 state.gameFoodData = temp;\r\n-                this._view.addChild(food);\r\n-                this.myFoodPools.push(food);\r\n                 this._foodTag++;\r\n \r\n                 let isHave = false;\r\n                 let food = null;\r\n"
                },
                {
                    "date": 1624006118485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -268,8 +268,14 @@\n         this._interTime++;\r\n \r\n         if (this._interTime >= this._interTimeLimit) {\r\n             this._interTime = 0;\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+            state.gameFoodData = temp;\r\n+            this._foodTag++;\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             state.isAddFood = true;\r\n             state.gameTime = this._gameTime;\r\n             this.updateState(state);\r\n@@ -590,77 +596,10 @@\n \r\n             if (state.isAddFood) {\r\n                 // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n                 // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n-                let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                state.gameFoodData = temp;\r\n-                this._foodTag++;\r\n \r\n-                let isHave = false;\r\n-                let food = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                        isHave = true;\r\n-                        food = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (!isHave) {\r\n-                    food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-                    food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-                    let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-                    food.data = temp;\r\n-                    this._view.addChild(food);\r\n-                    this.myFoodPools.push(food);\r\n-                    this._foodTag++;\r\n-                }\r\n-\r\n-                food.x = randPosX;\r\n-\r\n-                console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-\r\n-                cc.tween(food)\r\n-                    .to(food.data.speed, { x: food.x, y: 970 })\r\n-                    .call(() => {\r\n-\r\n-                        console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                        food.y = 100;\r\n-                        food.visible = true;\r\n-                        food.data.isShow = false;\r\n-\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let isFlag = false;\r\n-                for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-                    if (this._rightIndexs[i] === index) {\r\n-\r\n-                        isFlag = true;\r\n-                        state.rigthTotal[index].showTotal++;\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                setTimeout(() => {\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    if (isFlag) {\r\n-                        state1.rigthTotal = state.rigthTotal;\r\n-                    }\r\n-                    state1.isAddFood = false;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.2)\r\n-\r\n                 // this.foodDropAnimate(randIndex, randPosX, state);\r\n                 // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n             }\r\n         }\r\n"
                },
                {
                    "date": 1624006270731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,9 +181,8 @@\n             submitFeedback: this.feedbackType.No,\r\n             gameTime: 0,\r\n             clickFoodTag: -1,\r\n             rigthTotal: rigthTotalTemp,\r\n-            isAddFood: false,\r\n             gameFoodData: [],\r\n         }\r\n     }\r\n \r\n@@ -268,16 +267,17 @@\n         this._interTime++;\r\n \r\n         if (this._interTime >= this._interTimeLimit) {\r\n             this._interTime = 0;\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n             state.gameFoodData = temp;\r\n             this._foodTag++;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.isAddFood = true;\r\n             state.gameTime = this._gameTime;\r\n             this.updateState(state);\r\n         }\r\n     }\r\n"
                },
                {
                    "date": 1624006341124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -266,10 +266,31 @@\n \r\n         this._interTime++;\r\n \r\n         if (this._interTime >= this._interTimeLimit) {\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n             this._interTime = 0;\r\n-\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n \r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n@@ -570,31 +591,10 @@\n \r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n             this._gameTime = state.gameTime;\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n \r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n \r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n             if (state.isAddFood) {\r\n                 // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n                 // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n \r\n"
                },
                {
                    "date": 1624006360684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -288,8 +288,9 @@\n \r\n                 this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n                 this._interTimeLimit = this._framesSecond * 0.3;\r\n             }\r\n+\r\n             this._interTime = 0;\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n \r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n"
                },
                {
                    "date": 1624006459777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,8 +182,10 @@\n             gameTime: 0,\r\n             clickFoodTag: -1,\r\n             rigthTotal: rigthTotalTemp,\r\n             gameFoodData: [],\r\n+            _dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit\r\n         }\r\n     }\r\n \r\n     async init(data: any) {\r\n"
                },
                {
                    "date": 1624006575680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,9 @@\n             gameTime: 0,\r\n             clickFoodTag: -1,\r\n             rigthTotal: rigthTotalTemp,\r\n             gameFoodData: [],\r\n-            _dropSpeed: this._dropSpeed,\r\n+            dropSpeed: this._dropSpeed,\r\n             interTimeLimit: this._interTimeLimit\r\n         }\r\n     }\r\n \r\n@@ -299,9 +299,10 @@\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n             state.gameFoodData = temp;\r\n-            this._foodTag++;\r\n+            state.dropSpeed =\r\n+                this._foodTag++;\r\n             state.gameTime = this._gameTime;\r\n             this.updateState(state);\r\n         }\r\n     }\r\n"
                },
                {
                    "date": 1624006694643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,10 +299,11 @@\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n             state.gameFoodData = temp;\r\n-            state.dropSpeed =\r\n-                this._foodTag++;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this.interTimeLimit\r\n+            this._foodTag++;\r\n             state.gameTime = this._gameTime;\r\n             this.updateState(state);\r\n         }\r\n     }\r\n"
                },
                {
                    "date": 1624006701815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,9 +300,9 @@\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n             state.gameFoodData = temp;\r\n             state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this.interTimeLimit\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n             this._foodTag++;\r\n             state.gameTime = this._gameTime;\r\n             this.updateState(state);\r\n         }\r\n"
                },
                {
                    "date": 1624007131661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,9 +183,10 @@\n             clickFoodTag: -1,\r\n             rigthTotal: rigthTotalTemp,\r\n             gameFoodData: [],\r\n             dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            _foodTag: _foodTag\r\n         }\r\n     }\r\n \r\n     async init(data: any) {\r\n"
                },
                {
                    "date": 1624007137949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,9 @@\n             rigthTotal: rigthTotalTemp,\r\n             gameFoodData: [],\r\n             dropSpeed: this._dropSpeed,\r\n             interTimeLimit: this._interTimeLimit,\r\n-            _foodTag: _foodTag\r\n+            _foodTag: this._foodTag\r\n         }\r\n     }\r\n \r\n     async init(data: any) {\r\n"
                },
                {
                    "date": 1624007144288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -184,9 +184,9 @@\n             rigthTotal: rigthTotalTemp,\r\n             gameFoodData: [],\r\n             dropSpeed: this._dropSpeed,\r\n             interTimeLimit: this._interTimeLimit,\r\n-            _foodTag: this._foodTag\r\n+            foodTag: this._foodTag\r\n         }\r\n     }\r\n \r\n     async init(data: any) {\r\n"
                },
                {
                    "date": 1624007150413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,817 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: [],\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            this._foodTag++;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        food.x = randPosX;\r\n+\r\n+        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+\r\n+                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.2)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+\r\n+                // this.foodDropAnimate(randIndex, randPosX, state);\r\n+                // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624007168384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,829 +299,14 @@\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n             this._foodTag++;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n \r\n-    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        food.x = randPosX;\r\n-\r\n-        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.2)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-\r\n-                // this.foodDropAnimate(randIndex, randPosX, state);\r\n-                // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: [],\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n             state.gameFoodData = temp;\r\n             state.dropSpeed = this._dropSpeed;\r\n             state.interTimeLimit = this._interTimeLimit;\r\n-            this._foodTag++;\r\n+\r\n             state.gameTime = this._gameTime;\r\n             this.updateState(state);\r\n         }\r\n     }\r\n"
                },
                {
                    "date": 1624007178750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -304,9 +304,9 @@\n \r\n             state.gameFoodData = temp;\r\n             state.dropSpeed = this._dropSpeed;\r\n             state.interTimeLimit = this._interTimeLimit;\r\n-\r\n+            state._foodTag = this._foodTag;\r\n             state.gameTime = this._gameTime;\r\n             this.updateState(state);\r\n         }\r\n     }\r\n"
                },
                {
                    "date": 1624007184403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -304,9 +304,9 @@\n \r\n             state.gameFoodData = temp;\r\n             state.dropSpeed = this._dropSpeed;\r\n             state.interTimeLimit = this._interTimeLimit;\r\n-            state._foodTag = this._foodTag;\r\n+            state.foodTag = this._foodTag;\r\n             state.gameTime = this._gameTime;\r\n             this.updateState(state);\r\n         }\r\n     }\r\n"
                },
                {
                    "date": 1624007219406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,819 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: [],\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+            this._foodTag++;\r\n+\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        food.x = randPosX;\r\n+\r\n+        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+\r\n+                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.2)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+\r\n+                // this.foodDropAnimate(randIndex, randPosX, state);\r\n+                // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624007229443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -816,823 +816,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: [],\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-            this._foodTag++;\r\n-\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        food.x = randPosX;\r\n-\r\n-        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.2)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-\r\n-                // this.foodDropAnimate(randIndex, randPosX, state);\r\n-                // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624007236207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,819 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: [],\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+            this._foodTag++;\r\n+\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        food.x = randPosX;\r\n+\r\n+        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+\r\n+                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.2)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+\r\n+                // this.foodDropAnimate(randIndex, randPosX, state);\r\n+                // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624007241986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -816,823 +816,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: [],\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-            this._foodTag++;\r\n-\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        food.x = randPosX;\r\n-\r\n-        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.2)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-\r\n-                // this.foodDropAnimate(randIndex, randPosX, state);\r\n-                // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624007290881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,9 +300,8 @@\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n             this._foodTag++;\r\n-\r\n             state.gameFoodData = temp;\r\n             state.dropSpeed = this._dropSpeed;\r\n             state.interTimeLimit = this._interTimeLimit;\r\n             state.foodTag = this._foodTag;\r\n"
                },
                {
                    "date": 1624007348835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,9 +300,9 @@\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n             this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n+            state.gameFoodData[index] = temp;\r\n             state.dropSpeed = this._dropSpeed;\r\n             state.interTimeLimit = this._interTimeLimit;\r\n             state.foodTag = this._foodTag;\r\n             state.gameTime = this._gameTime;\r\n"
                },
                {
                    "date": 1624007360211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,9 +300,9 @@\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n             this._foodTag++;\r\n-            state.gameFoodData[index] = temp;\r\n+            state.gameFoodData[randIndex] = temp;\r\n             state.dropSpeed = this._dropSpeed;\r\n             state.interTimeLimit = this._interTimeLimit;\r\n             state.foodTag = this._foodTag;\r\n             state.gameTime = this._gameTime;\r\n"
                },
                {
                    "date": 1624007375961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -300,9 +300,9 @@\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n             this._foodTag++;\r\n-            state.gameFoodData[randIndex] = temp;\r\n+            state.gameFoodData = temp;\r\n             state.dropSpeed = this._dropSpeed;\r\n             state.interTimeLimit = this._interTimeLimit;\r\n             state.foodTag = this._foodTag;\r\n             state.gameTime = this._gameTime;\r\n"
                },
                {
                    "date": 1624007406153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -594,9 +594,26 @@\n         if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n \r\n \r\n         }\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n \r\n+\r\n+        }\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+\r\n+        }\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+\r\n+        }\r\n+\r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n             this._gameTime = state.gameTime;\r\n \r\n"
                },
                {
                    "date": 1624007414898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -590,9 +590,9 @@\n                 this._playBtn.enabled = false;\r\n             }\r\n         }\r\n \r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n \r\n \r\n         }\r\n         if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n"
                },
                {
                    "date": 1624007427258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,836 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: [],\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+            food.data = temp;\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+            this._foodTag++;\r\n+        }\r\n+\r\n+        food.x = randPosX;\r\n+\r\n+        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+\r\n+                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            state1.isAddFood = false;\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.2)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+\r\n+        }\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+\r\n+        }\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+\r\n+\r\n+            if (state.isAddFood) {\r\n+                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+\r\n+                // this.foodDropAnimate(randIndex, randPosX, state);\r\n+                // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624007439463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -595,11 +595,11 @@\n \r\n             this._dropSpeed = state.dropSpeed;\r\n \r\n         }\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+            this._dropSpeed = state.dropSpeed;\r\n \r\n-\r\n         }\r\n         if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n \r\n \r\n@@ -833,839 +833,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: [],\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n-\r\n-        food.x = randPosX;\r\n-\r\n-        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.2)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-\r\n-        }\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-\r\n-        }\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-\r\n-        }\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-\r\n-\r\n-            if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-\r\n-                // this.foodDropAnimate(randIndex, randPosX, state);\r\n-                // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624007449143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -596,10 +596,11 @@\n             this._dropSpeed = state.dropSpeed;\r\n \r\n         }\r\n         if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-            this._dropSpeed = state.dropSpeed;\r\n \r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+\r\n         }\r\n         if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n \r\n \r\n"
                },
                {
                    "date": 1624007467564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -600,11 +600,11 @@\n \r\n             this._interTimeLimit = state.interTimeLimit;\r\n \r\n         }\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n \r\n-\r\n+            this._foodTag = state.foodTag;\r\n         }\r\n         if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n \r\n \r\n"
                },
                {
                    "date": 1624007485837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -604,11 +604,11 @@\n         if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n \r\n             this._foodTag = state.foodTag;\r\n         }\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n \r\n-\r\n+            this._gameTime = state.gameTime;\r\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n \r\n"
                },
                {
                    "date": 1624007491814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -595,17 +595,20 @@\n \r\n             this._dropSpeed = state.dropSpeed;\r\n \r\n         }\r\n+\r\n         if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n \r\n             this._interTimeLimit = state.interTimeLimit;\r\n \r\n         }\r\n+\r\n         if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n \r\n             this._foodTag = state.foodTag;\r\n         }\r\n+\r\n         if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n \r\n             this._gameTime = state.gameTime;\r\n         }\r\n"
                },
                {
                    "date": 1624007504799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -599,9 +599,8 @@\n \r\n         if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n \r\n             this._interTimeLimit = state.interTimeLimit;\r\n-\r\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n \r\n"
                },
                {
                    "date": 1624007512700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -614,8 +614,9 @@\n \r\n         if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n \r\n \r\n+\r\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n"
                },
                {
                    "date": 1624007540851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -309,9 +309,9 @@\n             this.updateState(state);\r\n         }\r\n     }\r\n \r\n-    private foodDropAnimate(index: number, randPosX: number, state: any) {\r\n+    private foodDropAnimate(state: any) {\r\n \r\n         let isHave = false;\r\n         let food = null;\r\n         for (let i = 0; i < this.myFoodPools.length; i++) {\r\n"
                },
                {
                    "date": 1624007558825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -614,23 +614,24 @@\n \r\n         if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n \r\n \r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n \r\n+\r\n+            this.foodDropAnimate(randIndex, randPosX, state);\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+\r\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n \r\n             this._gameTime = state.gameTime;\r\n \r\n \r\n             if (state.isAddFood) {\r\n-                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-                // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n \r\n-\r\n-                // this.foodDropAnimate(randIndex, randPosX, state);\r\n-                // this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n             }\r\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n"
                },
                {
                    "date": 1624007621339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -617,9 +617,8 @@\n \r\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n \r\n-\r\n             this.foodDropAnimate(randIndex, randPosX, state);\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n \r\n         }\r\n"
                },
                {
                    "date": 1624007643722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -613,13 +613,11 @@\n         }\r\n \r\n         if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n \r\n-\r\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(randIndex, randPosX, state);\r\n+            this.foodDropAnimate(state);\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n \r\n         }\r\n \r\n"
                },
                {
                    "date": 1624007689190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -323,9 +323,9 @@\n             }\r\n         }\r\n \r\n         if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[state.gameFoodData]).asButton;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n             food.data = temp;\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624007742438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,8 +311,11 @@\n     }\r\n \r\n     private foodDropAnimate(state: any) {\r\n \r\n+        for (let i = 0; i < state.gameFoodData.length; i +=) {\r\n+\r\n+        }\r\n         let isHave = false;\r\n         let food = null;\r\n         for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n"
                },
                {
                    "date": 1624007747633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,10 +311,11 @@\n     }\r\n \r\n     private foodDropAnimate(state: any) {\r\n \r\n-        for (let i = 0; i < state.gameFoodData.length; i +=) {\r\n+        for (let i = 0; i < state.gameFoodData.length; i++) {\r\n \r\n+\r\n         }\r\n         let isHave = false;\r\n         let food = null;\r\n         for (let i = 0; i < this.myFoodPools.length; i++) {\r\n"
                },
                {
                    "date": 1624007786301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -313,71 +313,72 @@\n     private foodDropAnimate(state: any) {\r\n \r\n         for (let i = 0; i < state.gameFoodData.length; i++) {\r\n \r\n+            let isHave = false;\r\n+            let food = null;\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n-        }\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                    isHave = true;\r\n+                    food = this.myFoodPools[i];\r\n+                    break;\r\n+                }\r\n+            }\r\n \r\n-            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n+            if (!isHave) {\r\n+                food = fgui.UIPackage.createObject(this._package, this._gameFood[state.gameFoodData]).asButton;\r\n+                food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+                let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n+                food.data = temp;\r\n+                this._view.addChild(food);\r\n+                this.myFoodPools.push(food);\r\n+                this._foodTag++;\r\n             }\r\n-        }\r\n \r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[state.gameFoodData]).asButton;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-            food.data = temp;\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-            this._foodTag++;\r\n-        }\r\n+            food.x = randPosX;\r\n \r\n-        food.x = randPosX;\r\n+            console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n \r\n-        console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+            food.y = 100;\r\n+            food.visible = true;\r\n \r\n-        food.y = 100;\r\n-        food.visible = true;\r\n+            cc.tween(food)\r\n+                .to(food.data.speed, { x: food.x, y: 970 })\r\n+                .call(() => {\r\n \r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.x, y: 970 })\r\n-            .call(() => {\r\n+                    console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n \r\n-                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+                    food.y = 100;\r\n+                    food.visible = true;\r\n+                    food.data.isShow = false;\r\n \r\n-                food.y = 100;\r\n-                food.visible = true;\r\n-                food.data.isShow = false;\r\n+                })\r\n+                .start();\r\n \r\n-            })\r\n-            .start();\r\n+            let isFlag = false;\r\n+            for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                if (this._rightIndexs[i] === index) {\r\n \r\n-            if (this._rightIndexs[i] === index) {\r\n+                    isFlag = true;\r\n+                    state.rigthTotal[index].showTotal++;\r\n+                    break;\r\n+                }\r\n+            }\r\n \r\n-                isFlag = true;\r\n-                state.rigthTotal[index].showTotal++;\r\n-                break;\r\n-            }\r\n+            setTimeout(() => {\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                if (isFlag) {\r\n+                    state1.rigthTotal = state.rigthTotal;\r\n+                }\r\n+                state1.isAddFood = false;\r\n+                this.updateState(state1);\r\n+\r\n+            }, 0.2)\r\n+\r\n         }\r\n \r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            state1.isAddFood = false;\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.2)\r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n \r\n"
                },
                {
                    "date": 1624007846097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,8 +311,9 @@\n     }\r\n \r\n     private foodDropAnimate(state: any) {\r\n \r\n+        let foodData = state.gameFoodData;\r\n         for (let i = 0; i < state.gameFoodData.length; i++) {\r\n \r\n             let isHave = false;\r\n             let food = null;\r\n"
                },
                {
                    "date": 1624007851458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n \r\n     private foodDropAnimate(state: any) {\r\n \r\n         let foodData = state.gameFoodData;\r\n-        for (let i = 0; i < state.gameFoodData.length; i++) {\r\n+        for (let i = 0; i < foodData.length; i++) {\r\n \r\n             let isHave = false;\r\n             let food = null;\r\n             for (let i = 0; i < this.myFoodPools.length; i++) {\r\n"
                },
                {
                    "date": 1624007870944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,9 +326,9 @@\n                 }\r\n             }\r\n \r\n             if (!isHave) {\r\n-                food = fgui.UIPackage.createObject(this._package, this._gameFood[state.gameFoodData]).asButton;\r\n+                food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i]]).asButton;\r\n                 food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n                 let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n                 food.data = temp;\r\n                 this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624007923921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -318,9 +318,9 @@\n             let isHave = false;\r\n             let food = null;\r\n             for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n-                if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n+                if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n                     isHave = true;\r\n                     food = this.myFoodPools[i];\r\n                     break;\r\n                 }\r\n"
                },
                {
                    "date": 1624007984379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,10 +328,9 @@\n \r\n             if (!isHave) {\r\n                 food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i]]).asButton;\r\n                 food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-                let temp = { index: index, isShow: true, tag: this._foodTag, speed: this._dropSpeed };\r\n-                food.data = temp;\r\n+                food.data = foodData[i];\r\n                 this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n                 this._foodTag++;\r\n             }\r\n"
                },
                {
                    "date": 1624008070842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -331,12 +331,11 @@\n                 food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n                 food.data = foodData[i];\r\n                 this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n-                this._foodTag++;\r\n             }\r\n \r\n-            food.x = randPosX;\r\n+            food.x = food.data.x;\r\n \r\n             console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n \r\n             food.y = 100;\r\n"
                },
                {
                    "date": 1624008145256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -327,18 +327,16 @@\n             }\r\n \r\n             if (!isHave) {\r\n                 food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i]]).asButton;\r\n+                food.data = foodData[i];\r\n                 food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-                food.data = foodData[i];\r\n+\r\n                 this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n             }\r\n \r\n             food.x = food.data.x;\r\n-\r\n-            console.log('111 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n             food.y = 100;\r\n             food.visible = true;\r\n \r\n             cc.tween(food)\r\n"
                },
                {
                    "date": 1624008156284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,9 +329,8 @@\n             if (!isHave) {\r\n                 food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i]]).asButton;\r\n                 food.data = foodData[i];\r\n                 food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-\r\n                 this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n             }\r\n \r\n"
                },
                {
                    "date": 1624008164412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,9 +332,8 @@\n                 food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n                 this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n             }\r\n-\r\n             food.x = food.data.x;\r\n             food.y = 100;\r\n             food.visible = true;\r\n \r\n"
                },
                {
                    "date": 1624008170377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -332,8 +332,9 @@\n                 food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n                 this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n             }\r\n+\r\n             food.x = food.data.x;\r\n             food.y = 100;\r\n             food.visible = true;\r\n \r\n"
                },
                {
                    "date": 1624008241087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -338,9 +338,9 @@\n             food.y = 100;\r\n             food.visible = true;\r\n \r\n             cc.tween(food)\r\n-                .to(food.data.speed, { x: food.x, y: 970 })\r\n+                .to(this._dropSpeed, { x: food.x, y: 970 })\r\n                 .call(() => {\r\n \r\n                     console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n \r\n"
                },
                {
                    "date": 1624008253967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,15 +336,12 @@\n \r\n             food.x = food.data.x;\r\n             food.y = 100;\r\n             food.visible = true;\r\n-\r\n             cc.tween(food)\r\n                 .to(this._dropSpeed, { x: food.x, y: 970 })\r\n                 .call(() => {\r\n-\r\n                     console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-\r\n                     food.y = 100;\r\n                     food.visible = true;\r\n                     food.data.isShow = false;\r\n \r\n"
                },
                {
                    "date": 1624008295334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -350,12 +350,12 @@\n \r\n             let isFlag = false;\r\n             for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n-                if (this._rightIndexs[i] === index) {\r\n+                if (this._rightIndexs[i] === foodData[i].index) {\r\n \r\n                     isFlag = true;\r\n-                    state.rigthTotal[index].showTotal++;\r\n+                    state.rigthTotal[foodData[i].index].showTotal++;\r\n                     break;\r\n                 }\r\n             }\r\n \r\n"
                },
                {
                    "date": 1624008322738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -366,9 +366,9 @@\n                 }\r\n                 state1.isAddFood = false;\r\n                 this.updateState(state1);\r\n \r\n-            }, 0.2)\r\n+            }, 0.02)\r\n \r\n         }\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624008386695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,836 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: [],\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any) {\r\n+\r\n+        let foodData = state.gameFoodData;\r\n+        for (let i = 0; i < foodData.length; i++) {\r\n+\r\n+            let isHave = false;\r\n+            let food = null;\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n+                    isHave = true;\r\n+                    food = this.myFoodPools[i];\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (!isHave) {\r\n+                food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i]]).asButton;\r\n+                food.data = foodData[i];\r\n+                food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+                this._view.addChild(food);\r\n+                this.myFoodPools.push(food);\r\n+            }\r\n+\r\n+            food.x = food.data.x;\r\n+            food.y = 100;\r\n+            food.visible = true;\r\n+            cc.tween(food)\r\n+                .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+                .call(() => {\r\n+                    console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+                    food.y = 100;\r\n+                    food.visible = true;\r\n+                    food.data.isShow = false;\r\n+\r\n+                })\r\n+                .start();\r\n+\r\n+            let isFlag = false;\r\n+            for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+                if (this._rightIndexs[i] === foodData[i].index) {\r\n+\r\n+                    isFlag = true;\r\n+                    state.rigthTotal[foodData[i].index].showTotal++;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            setTimeout(() => {\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                if (isFlag) {\r\n+                    state1.rigthTotal = state.rigthTotal;\r\n+                }\r\n+                state1.isAddFood = false;\r\n+                this.updateState(state1);\r\n+\r\n+            }, 0.02)\r\n+\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    state1.isAddFood = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+            this.foodDropAnimate(state);\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+\r\n+\r\n+            if (state.isAddFood) {\r\n+\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624008418112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -363,9 +363,8 @@\n                 let state1: any = globalThis._.cloneDeep(this._state);\r\n                 if (isFlag) {\r\n                     state1.rigthTotal = state.rigthTotal;\r\n                 }\r\n-                state1.isAddFood = false;\r\n                 this.updateState(state1);\r\n \r\n             }, 0.02)\r\n \r\n@@ -478,9 +477,8 @@\n                     this._readyGroup.visible = false;\r\n \r\n                     let state1: any = globalThis._.cloneDeep(this._state);\r\n                     state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n                     this.updateState(state1);\r\n                 });\r\n \r\n             } else {\r\n@@ -617,19 +615,8 @@\n             this.foodDropAnimate(state);\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n \r\n         }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-\r\n-\r\n-            if (state.isAddFood) {\r\n-\r\n-            }\r\n-        }\r\n-\r\n         if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n             this.playTitle(state.title);\r\n         }\r\n \r\n@@ -833,840 +820,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: [],\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any) {\r\n-\r\n-        let foodData = state.gameFoodData;\r\n-        for (let i = 0; i < foodData.length; i++) {\r\n-\r\n-            let isHave = false;\r\n-            let food = null;\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n-                    isHave = true;\r\n-                    food = this.myFoodPools[i];\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (!isHave) {\r\n-                food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i]]).asButton;\r\n-                food.data = foodData[i];\r\n-                food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-                this._view.addChild(food);\r\n-                this.myFoodPools.push(food);\r\n-            }\r\n-\r\n-            food.x = food.data.x;\r\n-            food.y = 100;\r\n-            food.visible = true;\r\n-            cc.tween(food)\r\n-                .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-                .call(() => {\r\n-                    console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-                    food.y = 100;\r\n-                    food.visible = true;\r\n-                    food.data.isShow = false;\r\n-\r\n-                })\r\n-                .start();\r\n-\r\n-            let isFlag = false;\r\n-            for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-                if (this._rightIndexs[i] === foodData[i].index) {\r\n-\r\n-                    isFlag = true;\r\n-                    state.rigthTotal[foodData[i].index].showTotal++;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            setTimeout(() => {\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                if (isFlag) {\r\n-                    state1.rigthTotal = state.rigthTotal;\r\n-                }\r\n-                state1.isAddFood = false;\r\n-                this.updateState(state1);\r\n-\r\n-            }, 0.02)\r\n-\r\n-        }\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    state1.isAddFood = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-            this.foodDropAnimate(state);\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.isAddFood, state.isAddFood)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-\r\n-\r\n-            if (state.isAddFood) {\r\n-\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624008564796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -294,9 +294,8 @@\n             }\r\n \r\n             this._interTime = 0;\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n@@ -445,8 +444,20 @@\n                 }\r\n                 this.myFoodPools = [];\r\n                 this._foodTag = 1;\r\n                 cc.audioEngine.playMusic(this._gameMusic, true);\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                this._foodTag++;\r\n+                state.gameFoodData = temp;\r\n+                state.dropSpeed = this._dropSpeed;\r\n+                state.interTimeLimit = this._interTimeLimit;\r\n+                state.foodTag = this._foodTag;\r\n+                state.gameTime = this._gameTime;\r\n+                this.updateState(state);\r\n                 this.schedule(this.updateAdd, 0.02);\r\n \r\n             } else {\r\n                 let boy = this._view.getChild(\"boy\").asButton;\r\n"
                },
                {
                    "date": 1624008599159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -444,22 +444,29 @@\n                 }\r\n                 this.myFoodPools = [];\r\n                 this._foodTag = 1;\r\n                 cc.audioEngine.playMusic(this._gameMusic, true);\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n-                let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                this._foodTag++;\r\n-                state.gameFoodData = temp;\r\n-                state.dropSpeed = this._dropSpeed;\r\n-                state.interTimeLimit = this._interTimeLimit;\r\n-                state.foodTag = this._foodTag;\r\n-                state.gameTime = this._gameTime;\r\n-                this.updateState(state);\r\n-                this.schedule(this.updateAdd, 0.02);\r\n+                setTimeout(() => {\r\n \r\n+                    let state: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state.gameFoodData = temp;\r\n+                    state.dropSpeed = this._dropSpeed;\r\n+                    state.interTimeLimit = this._interTimeLimit;\r\n+                    state.foodTag = this._foodTag;\r\n+                    state.gameTime = this._gameTime;\r\n+                    this.updateState(state);\r\n+\r\n+                    this.schedule(this.updateAdd, 0.02);\r\n+\r\n+                }, 0.02);\r\n+\r\n+\r\n             } else {\r\n                 let boy = this._view.getChild(\"boy\").asButton;\r\n                 let girl = this._view.getChild(\"girl\").asButton;\r\n                 boy.touchable = true;\r\n"
                },
                {
                    "date": 1624008650973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,841 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: [],\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any) {\r\n+\r\n+        let foodData = state.gameFoodData;\r\n+        for (let i = 0; i < foodData.length; i++) {\r\n+\r\n+            let isHave = false;\r\n+            let food = null;\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n+                    isHave = true;\r\n+                    food = this.myFoodPools[i];\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (!isHave) {\r\n+                food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i]]).asButton;\r\n+                food.data = foodData[i];\r\n+                food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+                this._view.addChild(food);\r\n+                this.myFoodPools.push(food);\r\n+            }\r\n+\r\n+            food.x = food.data.x;\r\n+            food.y = 100;\r\n+            food.visible = true;\r\n+            cc.tween(food)\r\n+                .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+                .call(() => {\r\n+                    console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+                    food.y = 100;\r\n+                    food.visible = true;\r\n+                    food.data.isShow = false;\r\n+\r\n+                })\r\n+                .start();\r\n+\r\n+            let isFlag = false;\r\n+            for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+                if (this._rightIndexs[i] === foodData[i].index) {\r\n+\r\n+                    isFlag = true;\r\n+                    state.rigthTotal[foodData[i].index].showTotal++;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            setTimeout(() => {\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                if (isFlag) {\r\n+                    state1.rigthTotal = state.rigthTotal;\r\n+                }\r\n+                this.updateState(state1);\r\n+\r\n+            }, 0.02)\r\n+\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData.push(temp);\r\n+                    state.dropSpeed = this._dropSpeed;\r\n+                    state.interTimeLimit = this._interTimeLimit;\r\n+                    state.foodTag = this._foodTag;\r\n+                    state.gameTime = this._gameTime;\r\n+                    this.updateState(state);\r\n+\r\n+                    this.schedule(this.updateAdd, 0.02);\r\n+\r\n+                }, 0.02);\r\n+\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+            this.foodDropAnimate(state);\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+\r\n+        }\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624008662798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -454,11 +454,9 @@\n \r\n                     let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n                     this._foodTag++;\r\n                     state1.gameFoodData.push(temp);\r\n-                    state.dropSpeed = this._dropSpeed;\r\n-                    state.interTimeLimit = this._interTimeLimit;\r\n-                    state.foodTag = this._foodTag;\r\n+                    state1.foodTag = this._foodTag;\r\n                     state.gameTime = this._gameTime;\r\n                     this.updateState(state);\r\n \r\n                     this.schedule(this.updateAdd, 0.02);\r\n@@ -838,845 +836,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: [],\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any) {\r\n-\r\n-        let foodData = state.gameFoodData;\r\n-        for (let i = 0; i < foodData.length; i++) {\r\n-\r\n-            let isHave = false;\r\n-            let food = null;\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n-                    isHave = true;\r\n-                    food = this.myFoodPools[i];\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (!isHave) {\r\n-                food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i]]).asButton;\r\n-                food.data = foodData[i];\r\n-                food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-                this._view.addChild(food);\r\n-                this.myFoodPools.push(food);\r\n-            }\r\n-\r\n-            food.x = food.data.x;\r\n-            food.y = 100;\r\n-            food.visible = true;\r\n-            cc.tween(food)\r\n-                .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-                .call(() => {\r\n-                    console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-                    food.y = 100;\r\n-                    food.visible = true;\r\n-                    food.data.isShow = false;\r\n-\r\n-                })\r\n-                .start();\r\n-\r\n-            let isFlag = false;\r\n-            for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-                if (this._rightIndexs[i] === foodData[i].index) {\r\n-\r\n-                    isFlag = true;\r\n-                    state.rigthTotal[foodData[i].index].showTotal++;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            setTimeout(() => {\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                if (isFlag) {\r\n-                    state1.rigthTotal = state.rigthTotal;\r\n-                }\r\n-                this.updateState(state1);\r\n-\r\n-            }, 0.02)\r\n-\r\n-        }\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state.gameFoodData = temp;\r\n-                    state.dropSpeed = this._dropSpeed;\r\n-                    state.interTimeLimit = this._interTimeLimit;\r\n-                    state.foodTag = this._foodTag;\r\n-                    state.gameTime = this._gameTime;\r\n-                    this.updateState(state);\r\n-\r\n-                    this.schedule(this.updateAdd, 0.02);\r\n-\r\n-                }, 0.02);\r\n-\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-            this.foodDropAnimate(state);\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-\r\n-        }\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624008672195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -455,9 +455,9 @@\n                     let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n                     this._foodTag++;\r\n                     state1.gameFoodData.push(temp);\r\n                     state1.foodTag = this._foodTag;\r\n-                    state.gameTime = this._gameTime;\r\n+\r\n                     this.updateState(state);\r\n \r\n                     this.schedule(this.updateAdd, 0.02);\r\n \r\n"
                },
                {
                    "date": 1624008681556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -455,15 +455,12 @@\n                     let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n                     this._foodTag++;\r\n                     state1.gameFoodData.push(temp);\r\n                     state1.foodTag = this._foodTag;\r\n-\r\n                     this.updateState(state);\r\n-\r\n-                    this.schedule(this.updateAdd, 0.02);\r\n-\r\n                 }, 0.02);\r\n \r\n+                this.schedule(this.updateAdd, 0.02);\r\n \r\n             } else {\r\n                 let boy = this._view.getChild(\"boy\").asButton;\r\n                 let girl = this._view.getChild(\"girl\").asButton;\r\n"
                },
                {
                    "date": 1624008688366,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -456,8 +456,9 @@\n                     this._foodTag++;\r\n                     state1.gameFoodData.push(temp);\r\n                     state1.foodTag = this._foodTag;\r\n                     this.updateState(state);\r\n+\r\n                 }, 0.02);\r\n \r\n                 this.schedule(this.updateAdd, 0.02);\r\n \r\n"
                },
                {
                    "date": 1624008735741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -299,9 +299,9 @@\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n             this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n+            state.gameFoodData.push(temp);\r\n             state.dropSpeed = this._dropSpeed;\r\n             state.interTimeLimit = this._interTimeLimit;\r\n             state.foodTag = this._foodTag;\r\n             state.gameTime = this._gameTime;\r\n@@ -455,9 +455,9 @@\n                     let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n                     this._foodTag++;\r\n                     state1.gameFoodData.push(temp);\r\n                     state1.foodTag = this._foodTag;\r\n-                    this.updateState(state);\r\n+                    this.updateState(state1);\r\n \r\n                 }, 0.02);\r\n \r\n                 this.schedule(this.updateAdd, 0.02);\r\n"
                },
                {
                    "date": 1624008788918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,9 +325,9 @@\n                 }\r\n             }\r\n \r\n             if (!isHave) {\r\n-                food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i]]).asButton;\r\n+                food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i].index]).asButton;\r\n                 food.data = foodData[i];\r\n                 food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n                 this._view.addChild(food);\r\n                 this.myFoodPools.push(food);\r\n"
                },
                {
                    "date": 1624008977886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -315,10 +315,14 @@\n         for (let i = 0; i < foodData.length; i++) {\r\n \r\n             let isHave = false;\r\n             let food = null;\r\n+            console.log(this.myFoodPools);\r\n+\r\n             for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n+                console.log(foodData[i])\r\n+\r\n                 if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n                     isHave = true;\r\n                     food = this.myFoodPools[i];\r\n                     break;\r\n"
                },
                {
                    "date": 1624009000872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,13 +316,12 @@\n \r\n             let isHave = false;\r\n             let food = null;\r\n             console.log(this.myFoodPools);\r\n-\r\n+            console.log('===== ====');\r\n+            console.log(foodData[i])\r\n             for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n-                console.log(foodData[i])\r\n-\r\n                 if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n                     isHave = true;\r\n                     food = this.myFoodPools[i];\r\n                     break;\r\n"
                },
                {
                    "date": 1624009008405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,9 +316,9 @@\n \r\n             let isHave = false;\r\n             let food = null;\r\n             console.log(this.myFoodPools);\r\n-            console.log('===== ====');\r\n+            console.log('===== 测试  ====');\r\n             console.log(foodData[i])\r\n             for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n                 if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n"
                },
                {
                    "date": 1624009102945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,843 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: [],\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+            this._foodTag++;\r\n+            state.gameFoodData.push(temp);\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any) {\r\n+\r\n+        let foodData = state.gameFoodData;\r\n+        for (let i = 0; i < foodData.length; i++) {\r\n+\r\n+            let isHave = false;\r\n+            let food = null;\r\n+            console.log(this.myFoodPools);\r\n+            console.log('===== 测试  ====');\r\n+            console.log(foodData[i])\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n+                    isHave = true;\r\n+                    food = this.myFoodPools[i];\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (!isHave) {\r\n+                food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i].index]).asButton;\r\n+                food.data = foodData[i];\r\n+                food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+                this._view.addChild(food);\r\n+                this.myFoodPools.push(food);\r\n+            }\r\n+\r\n+            food.x = food.data.x;\r\n+            food.y = 100;\r\n+            food.visible = true;\r\n+            cc.tween(food)\r\n+                .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+                .call(() => {\r\n+                    console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+                    food.y = 100;\r\n+                    food.visible = true;\r\n+                    food.data.isShow = false;\r\n+\r\n+                })\r\n+                .start();\r\n+\r\n+            let isFlag = false;\r\n+            for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+                if (this._rightIndexs[i] === foodData[i].index) {\r\n+\r\n+                    isFlag = true;\r\n+                    state.rigthTotal[foodData[i].index].showTotal++;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            setTimeout(() => {\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                if (isFlag) {\r\n+                    state1.rigthTotal = state.rigthTotal;\r\n+                }\r\n+                this.updateState(state1);\r\n+\r\n+            }, 0.02)\r\n+\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData.push(temp);\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+\r\n+            console.log(state.gameFoodData);\r\n+            // this.foodDropAnimate(state);\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+\r\n+        }\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624009116292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -629,9 +629,9 @@\n \r\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n \r\n-\r\n+            console.log('===== gameFoodData ====');\r\n             console.log(state.gameFoodData);\r\n             // this.foodDropAnimate(state);\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n \r\n@@ -840,844 +840,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: [],\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-            this._foodTag++;\r\n-            state.gameFoodData.push(temp);\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any) {\r\n-\r\n-        let foodData = state.gameFoodData;\r\n-        for (let i = 0; i < foodData.length; i++) {\r\n-\r\n-            let isHave = false;\r\n-            let food = null;\r\n-            console.log(this.myFoodPools);\r\n-            console.log('===== 测试  ====');\r\n-            console.log(foodData[i])\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n-                    isHave = true;\r\n-                    food = this.myFoodPools[i];\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (!isHave) {\r\n-                food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i].index]).asButton;\r\n-                food.data = foodData[i];\r\n-                food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-                this._view.addChild(food);\r\n-                this.myFoodPools.push(food);\r\n-            }\r\n-\r\n-            food.x = food.data.x;\r\n-            food.y = 100;\r\n-            food.visible = true;\r\n-            cc.tween(food)\r\n-                .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-                .call(() => {\r\n-                    console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-                    food.y = 100;\r\n-                    food.visible = true;\r\n-                    food.data.isShow = false;\r\n-\r\n-                })\r\n-                .start();\r\n-\r\n-            let isFlag = false;\r\n-            for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-                if (this._rightIndexs[i] === foodData[i].index) {\r\n-\r\n-                    isFlag = true;\r\n-                    state.rigthTotal[foodData[i].index].showTotal++;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            setTimeout(() => {\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                if (isFlag) {\r\n-                    state1.rigthTotal = state.rigthTotal;\r\n-                }\r\n-                this.updateState(state1);\r\n-\r\n-            }, 0.02)\r\n-\r\n-        }\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData.push(temp);\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-            this.foodDropAnimate(state);\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-\r\n-        }\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624009402870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,843 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: [],\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+            this._foodTag++;\r\n+            state.gameFoodData.push(temp);\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any) {\r\n+\r\n+        let foodData = state.gameFoodData;\r\n+        for (let i = 0; i < foodData.length; i++) {\r\n+\r\n+            let isHave = false;\r\n+            let food = null;\r\n+            console.log(this.myFoodPools);\r\n+            console.log('===== 测试  ====');\r\n+            console.log(foodData[i])\r\n+            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n+                    isHave = true;\r\n+                    food = this.myFoodPools[i];\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (!isHave) {\r\n+                food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i].index]).asButton;\r\n+                food.data = foodData[i];\r\n+                food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+                this._view.addChild(food);\r\n+                this.myFoodPools.push(food);\r\n+            }\r\n+\r\n+            food.x = food.data.x;\r\n+            food.y = 100;\r\n+            food.visible = true;\r\n+            cc.tween(food)\r\n+                .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+                .call(() => {\r\n+                    console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+                    food.y = 100;\r\n+                    food.visible = true;\r\n+                    food.data.isShow = false;\r\n+\r\n+                })\r\n+                .start();\r\n+\r\n+            let isFlag = false;\r\n+            for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+                if (this._rightIndexs[i] === foodData[i].index) {\r\n+\r\n+                    isFlag = true;\r\n+                    state.rigthTotal[foodData[i].index].showTotal++;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            setTimeout(() => {\r\n+                let state1: any = globalThis._.cloneDeep(this._state);\r\n+                if (isFlag) {\r\n+                    state1.rigthTotal = state.rigthTotal;\r\n+                }\r\n+                this.updateState(state1);\r\n+\r\n+            }, 0.02)\r\n+\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData.push(temp);\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            console.log('===== gameFoodData ====');\r\n+            console.log(state.gameFoodData);\r\n+            // this.foodDropAnimate(state);\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+\r\n+        }\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624009409628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -633,853 +633,11 @@\n             console.log('===== gameFoodData ====');\r\n             console.log(state.gameFoodData);\r\n             // this.foodDropAnimate(state);\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-\r\n         }\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n \r\n-    }\r\n \r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: [],\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-            this._foodTag++;\r\n-            state.gameFoodData.push(temp);\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any) {\r\n-\r\n-        let foodData = state.gameFoodData;\r\n-        for (let i = 0; i < foodData.length; i++) {\r\n-\r\n-            let isHave = false;\r\n-            let food = null;\r\n-            console.log(this.myFoodPools);\r\n-            console.log('===== 测试  ====');\r\n-            console.log(foodData[i])\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n-                    isHave = true;\r\n-                    food = this.myFoodPools[i];\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (!isHave) {\r\n-                food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i].index]).asButton;\r\n-                food.data = foodData[i];\r\n-                food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-                this._view.addChild(food);\r\n-                this.myFoodPools.push(food);\r\n-            }\r\n-\r\n-            food.x = food.data.x;\r\n-            food.y = 100;\r\n-            food.visible = true;\r\n-            cc.tween(food)\r\n-                .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-                .call(() => {\r\n-                    console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-                    food.y = 100;\r\n-                    food.visible = true;\r\n-                    food.data.isShow = false;\r\n-\r\n-                })\r\n-                .start();\r\n-\r\n-            let isFlag = false;\r\n-            for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-                if (this._rightIndexs[i] === foodData[i].index) {\r\n-\r\n-                    isFlag = true;\r\n-                    state.rigthTotal[foodData[i].index].showTotal++;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            setTimeout(() => {\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                if (isFlag) {\r\n-                    state1.rigthTotal = state.rigthTotal;\r\n-                }\r\n-                this.updateState(state1);\r\n-\r\n-            }, 0.02)\r\n-\r\n-        }\r\n-\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData.push(temp);\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            console.log('===== gameFoodData ====');\r\n-            console.log(state.gameFoodData);\r\n-            // this.foodDropAnimate(state);\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-\r\n-        }\r\n         if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n             this.playTitle(state.title);\r\n         }\r\n \r\n"
                },
                {
                    "date": 1624009426400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -636,8 +636,9 @@\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n         }\r\n \r\n \r\n+\r\n         if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n             this.playTitle(state.title);\r\n         }\r\n \r\n"
                },
                {
                    "date": 1624009492536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -630,8 +630,9 @@\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n \r\n             console.log('===== gameFoodData ====');\r\n+\r\n             console.log(state.gameFoodData);\r\n             // this.foodDropAnimate(state);\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n         }\r\n"
                },
                {
                    "date": 1624009511869,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -632,9 +632,12 @@\n \r\n             console.log('===== gameFoodData ====');\r\n \r\n             console.log(state.gameFoodData);\r\n-            // this.foodDropAnimate(state);\r\n+            if () {\r\n+\r\n+            }\r\n+            this.foodDropAnimate(state);\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n         }\r\n \r\n \r\n"
                },
                {
                    "date": 1624009595573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -632,9 +632,9 @@\n \r\n             console.log('===== gameFoodData ====');\r\n \r\n             console.log(state.gameFoodData);\r\n-            if () {\r\n+            for (let i = this._gameFood.length; i < ) {\r\n \r\n             }\r\n             this.foodDropAnimate(state);\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n"
                },
                {
                    "date": 1624009604399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -632,9 +632,9 @@\n \r\n             console.log('===== gameFoodData ====');\r\n \r\n             console.log(state.gameFoodData);\r\n-            for (let i = this._gameFood.length; i < ) {\r\n+            for (let i = this._gameFood.length; i < state.gameFoodData) {\r\n \r\n             }\r\n             this.foodDropAnimate(state);\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n"
                },
                {
                    "date": 1624009685087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -632,9 +632,9 @@\n \r\n             console.log('===== gameFoodData ====');\r\n \r\n             console.log(state.gameFoodData);\r\n-            for (let i = this._gameFood.length; i < state.gameFoodData) {\r\n+            for (let i = this._gameFood.length; i < state.gameFoodData.length; i++) {\r\n \r\n             }\r\n             this.foodDropAnimate(state);\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n"
                },
                {
                    "date": 1624009779457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -634,10 +634,12 @@\n \r\n             console.log(state.gameFoodData);\r\n             for (let i = this._gameFood.length; i < state.gameFoodData.length; i++) {\r\n \r\n+                this.foodDropAnimate(state);\r\n+\r\n             }\r\n-            this.foodDropAnimate(state);\r\n+\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n         }\r\n \r\n \r\n"
                },
                {
                    "date": 1624009808444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -635,9 +635,8 @@\n             console.log(state.gameFoodData);\r\n             for (let i = this._gameFood.length; i < state.gameFoodData.length; i++) {\r\n \r\n                 this.foodDropAnimate(state);\r\n-\r\n             }\r\n \r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n         }\r\n"
                },
                {
                    "date": 1624009825081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -634,9 +634,9 @@\n \r\n             console.log(state.gameFoodData);\r\n             for (let i = this._gameFood.length; i < state.gameFoodData.length; i++) {\r\n \r\n-                this.foodDropAnimate(state);\r\n+                this.foodDropAnimate(state, state.gameFoodData[i]);\r\n             }\r\n \r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n         }\r\n"
                },
                {
                    "date": 1624009844156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,9 +308,9 @@\n             this.updateState(state);\r\n         }\r\n     }\r\n \r\n-    private foodDropAnimate(state: any) {\r\n+    private foodDropAnimate(state: any, gameFoodData) {\r\n \r\n         let foodData = state.gameFoodData;\r\n         for (let i = 0; i < foodData.length; i++) {\r\n \r\n"
                },
                {
                    "date": 1624009865092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -308,11 +308,10 @@\n             this.updateState(state);\r\n         }\r\n     }\r\n \r\n-    private foodDropAnimate(state: any, gameFoodData) {\r\n+    private foodDropAnimate(state: any, foodData) {\r\n \r\n-        let foodData = state.gameFoodData;\r\n         for (let i = 0; i < foodData.length; i++) {\r\n \r\n             let isHave = false;\r\n             let food = null;\r\n"
                },
                {
                    "date": 1624009887542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -310,68 +310,64 @@\n     }\r\n \r\n     private foodDropAnimate(state: any, foodData) {\r\n \r\n-        for (let i = 0; i < foodData.length; i++) {\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        console.log(this.myFoodPools);\r\n+        console.log('===== 测试  ====');\r\n+        console.log(foodData[i])\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n-            let isHave = false;\r\n-            let food = null;\r\n-            console.log(this.myFoodPools);\r\n-            console.log('===== 测试  ====');\r\n-            console.log(foodData[i])\r\n-            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n-                    isHave = true;\r\n-                    food = this.myFoodPools[i];\r\n-                    break;\r\n-                }\r\n+            if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n             }\r\n+        }\r\n \r\n-            if (!isHave) {\r\n-                food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i].index]).asButton;\r\n-                food.data = foodData[i];\r\n-                food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-                this._view.addChild(food);\r\n-                this.myFoodPools.push(food);\r\n-            }\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i].index]).asButton;\r\n+            food.data = foodData[i];\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n \r\n-            food.x = food.data.x;\r\n-            food.y = 100;\r\n-            food.visible = true;\r\n-            cc.tween(food)\r\n-                .to(this._dropSpeed, { x: food.x, y: 970 })\r\n-                .call(() => {\r\n-                    console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n-                    food.y = 100;\r\n-                    food.visible = true;\r\n-                    food.data.isShow = false;\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .call(() => {\r\n+                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n+                food.y = 100;\r\n+                food.visible = true;\r\n+                food.data.isShow = false;\r\n \r\n-                })\r\n-                .start();\r\n+            })\r\n+            .start();\r\n \r\n-            let isFlag = false;\r\n-            for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n-                if (this._rightIndexs[i] === foodData[i].index) {\r\n+            if (this._rightIndexs[i] === foodData[i].index) {\r\n \r\n-                    isFlag = true;\r\n-                    state.rigthTotal[foodData[i].index].showTotal++;\r\n-                    break;\r\n-                }\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData[i].index].showTotal++;\r\n+                break;\r\n             }\r\n+        }\r\n \r\n-            setTimeout(() => {\r\n-                let state1: any = globalThis._.cloneDeep(this._state);\r\n-                if (isFlag) {\r\n-                    state1.rigthTotal = state.rigthTotal;\r\n-                }\r\n-                this.updateState(state1);\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n \r\n-            }, 0.02)\r\n+        }, 0.02)\r\n \r\n-        }\r\n-\r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n \r\n"
                },
                {
                    "date": 1624009903495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,9 +314,9 @@\n         let isHave = false;\r\n         let food = null;\r\n         console.log(this.myFoodPools);\r\n         console.log('===== 测试  ====');\r\n-        console.log(foodData[i])\r\n+        console.log(foodData)\r\n         for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n             if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n                 isHave = true;\r\n"
                },
                {
                    "date": 1624009996850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,23 +312,20 @@\n     private foodDropAnimate(state: any, foodData) {\r\n \r\n         let isHave = false;\r\n         let food = null;\r\n-        console.log(this.myFoodPools);\r\n-        console.log('===== 测试  ====');\r\n-        console.log(foodData)\r\n         for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n-            if (this.myFoodPools[i].data.index === foodData[i].index && !this.myFoodPools[i].data.isShow) {\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n                 isHave = true;\r\n                 food = this.myFoodPools[i];\r\n                 break;\r\n             }\r\n         }\r\n \r\n         if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData[i].index]).asButton;\r\n-            food.data = foodData[i];\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n+            food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n"
                },
                {
                    "date": 1624010016461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -361,10 +361,9 @@\n                 state1.rigthTotal = state.rigthTotal;\r\n             }\r\n             this.updateState(state1);\r\n \r\n-        }, 0.02)\r\n-\r\n+        }, 0.01)\r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n \r\n"
                },
                {
                    "date": 1624010049096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -621,10 +621,10 @@\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n \r\n             console.log('===== gameFoodData ====');\r\n+            console.log(state.gameFoodData);\r\n \r\n-            console.log(state.gameFoodData);\r\n             for (let i = this._gameFood.length; i < state.gameFoodData.length; i++) {\r\n \r\n                 this.foodDropAnimate(state, state.gameFoodData[i]);\r\n             }\r\n"
                },
                {
                    "date": 1624010195741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -337,21 +337,21 @@\n             .to(this._dropSpeed, { x: food.x, y: 970 })\r\n             .call(() => {\r\n                 console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n                 food.y = 100;\r\n-                food.visible = true;\r\n+                food.visible = false;\r\n                 food.data.isShow = false;\r\n \r\n             })\r\n             .start();\r\n \r\n         let isFlag = false;\r\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n-            if (this._rightIndexs[i] === foodData[i].index) {\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n \r\n                 isFlag = true;\r\n-                state.rigthTotal[foodData[i].index].showTotal++;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n                 break;\r\n             }\r\n         }\r\n \r\n"
                },
                {
                    "date": 1624010278816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,9 +335,8 @@\n         food.visible = true;\r\n         cc.tween(food)\r\n             .to(this._dropSpeed, { x: food.x, y: 970 })\r\n             .call(() => {\r\n-                console.log('222 ==== index ====' + food.data.tag + '=== yy ===' + food.x);\r\n                 food.y = 100;\r\n                 food.visible = false;\r\n                 food.data.isShow = false;\r\n \r\n"
                },
                {
                    "date": 1624010407145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -621,8 +621,10 @@\n             // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n \r\n             console.log('===== gameFoodData ====');\r\n             console.log(state.gameFoodData);\r\n+            console.log('===== gameFoodData ====');\r\n+            console.log(state.gameFoodData);\r\n \r\n             for (let i = this._gameFood.length; i < state.gameFoodData.length; i++) {\r\n \r\n                 this.foodDropAnimate(state, state.gameFoodData[i]);\r\n"
                },
                {
                    "date": 1624010453102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -624,9 +624,9 @@\n             console.log(state.gameFoodData);\r\n             console.log('===== gameFoodData ====');\r\n             console.log(state.gameFoodData);\r\n \r\n-            for (let i = this._gameFood.length; i < state.gameFoodData.length; i++) {\r\n+            for (let i = this.myFoodPools.length; i < state.gameFoodData.length; i++) {\r\n \r\n                 this.foodDropAnimate(state, state.gameFoodData[i]);\r\n             }\r\n \r\n"
                },
                {
                    "date": 1624010464931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -622,9 +622,9 @@\n \r\n             console.log('===== gameFoodData ====');\r\n             console.log(state.gameFoodData);\r\n             console.log('===== gameFoodData ====');\r\n-            console.log(state.gameFoodData);\r\n+            console.log(this._myFoodPools);\r\n \r\n             for (let i = this.myFoodPools.length; i < state.gameFoodData.length; i++) {\r\n \r\n                 this.foodDropAnimate(state, state.gameFoodData[i]);\r\n"
                },
                {
                    "date": 1624010470873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -622,9 +622,9 @@\n \r\n             console.log('===== gameFoodData ====');\r\n             console.log(state.gameFoodData);\r\n             console.log('===== gameFoodData ====');\r\n-            console.log(this._myFoodPools);\r\n+            console.log(this.myFoodPools);\r\n \r\n             for (let i = this.myFoodPools.length; i < state.gameFoodData.length; i++) {\r\n \r\n                 this.foodDropAnimate(state, state.gameFoodData[i]);\r\n"
                },
                {
                    "date": 1624010611362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,10 @@\n \r\n     /** 我自己的对象池 */\r\n     private myFoodPools: any = [];\r\n \r\n+    private _curDropLength: number = 0;\r\n+\r\n     private _foodTag: number = 1;\r\n \r\n     private _rightIndexs: any = [];\r\n \r\n@@ -621,9 +623,9 @@\n             // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n \r\n             console.log('===== gameFoodData ====');\r\n             console.log(state.gameFoodData);\r\n-            console.log('===== gameFoodData ====');\r\n+            console.log('===== myFoodPools ====');\r\n             console.log(this.myFoodPools);\r\n \r\n             for (let i = this.myFoodPools.length; i < state.gameFoodData.length; i++) {\r\n \r\n"
                },
                {
                    "date": 1624010674273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -626,9 +626,9 @@\n             console.log(state.gameFoodData);\r\n             console.log('===== myFoodPools ====');\r\n             console.log(this.myFoodPools);\r\n \r\n-            for (let i = this.myFoodPools.length; i < state.gameFoodData.length; i++) {\r\n+            for (let i = this._curDropLength; i < state.gameFoodData.length; i++) {\r\n \r\n                 this.foodDropAnimate(state, state.gameFoodData[i]);\r\n             }\r\n \r\n"
                },
                {
                    "date": 1624010706445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -626,8 +626,11 @@\n             console.log(state.gameFoodData);\r\n             console.log('===== myFoodPools ====');\r\n             console.log(this.myFoodPools);\r\n \r\n+            while (this._curDropLength >= ) {\r\n+\r\n+            }\r\n             for (let i = this._curDropLength; i < state.gameFoodData.length; i++) {\r\n \r\n                 this.foodDropAnimate(state, state.gameFoodData[i]);\r\n             }\r\n"
                },
                {
                    "date": 1624010716723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -626,14 +626,16 @@\n             console.log(state.gameFoodData);\r\n             console.log('===== myFoodPools ====');\r\n             console.log(this.myFoodPools);\r\n \r\n-            while (this._curDropLength >= ) {\r\n+            while (this._curDropLength >= state.gameFoodData.length) {\r\n \r\n+                this.foodDropAnimate(state, state.gameFoodData[i]);\r\n+\r\n             }\r\n             for (let i = this._curDropLength; i < state.gameFoodData.length; i++) {\r\n \r\n-                this.foodDropAnimate(state, state.gameFoodData[i]);\r\n+\r\n             }\r\n \r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n         }\r\n"
                },
                {
                    "date": 1624010738824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -628,9 +628,9 @@\n             console.log(this.myFoodPools);\r\n \r\n             while (this._curDropLength >= state.gameFoodData.length) {\r\n \r\n-                this.foodDropAnimate(state, state.gameFoodData[i]);\r\n+                this.foodDropAnimate(state, state.gameFoodData[this._curDropLength]);\r\n \r\n             }\r\n             for (let i = this._curDropLength; i < state.gameFoodData.length; i++) {\r\n \r\n"
                },
                {
                    "date": 1624010800967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -363,8 +363,10 @@\n             }\r\n             this.updateState(state1);\r\n \r\n         }, 0.01)\r\n+\r\n+        this._curDropLength++;\r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n \r\n"
                },
                {
                    "date": 1624010826151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -633,13 +633,8 @@\n \r\n                 this.foodDropAnimate(state, state.gameFoodData[this._curDropLength]);\r\n \r\n             }\r\n-            for (let i = this._curDropLength; i < state.gameFoodData.length; i++) {\r\n-\r\n-\r\n-            }\r\n-\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n         }\r\n \r\n \r\n"
                },
                {
                    "date": 1624011134585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -301,10 +301,10 @@\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n             this._foodTag++;\r\n-            state.gameFoodData.push(temp);\r\n-            state.dropSpeed = this._dropSpeed;\r\n+            state.gameFoodData =\r\n+                state.dropSpeed = this._dropSpeed;\r\n             state.interTimeLimit = this._interTimeLimit;\r\n             state.foodTag = this._foodTag;\r\n             state.gameTime = this._gameTime;\r\n             this.updateState(state);\r\n"
                },
                {
                    "date": 1624011139778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -301,10 +301,10 @@\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n             let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n             this._foodTag++;\r\n-            state.gameFoodData =\r\n-                state.dropSpeed = this._dropSpeed;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n             state.interTimeLimit = this._interTimeLimit;\r\n             state.foodTag = this._foodTag;\r\n             state.gameTime = this._gameTime;\r\n             this.updateState(state);\r\n"
                },
                {
                    "date": 1624011161980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -450,10 +450,10 @@\n                     let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n                     let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n                     this._foodTag++;\r\n-                    state1.gameFoodData.push(temp);\r\n-                    state1.foodTag = this._foodTag;\r\n+                    state1.gameFoodData =\r\n+                        state1.foodTag = this._foodTag;\r\n                     this.updateState(state1);\r\n \r\n                 }, 0.02);\r\n \r\n"
                },
                {
                    "date": 1624011193461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -450,10 +450,10 @@\n                     let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n                     let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n                     this._foodTag++;\r\n-                    state1.gameFoodData =\r\n-                        state1.foodTag = this._foodTag;\r\n+                    state1.gameFoodData = temp\r\n+                    state1.foodTag = this._foodTag;\r\n                     this.updateState(state1);\r\n \r\n                 }, 0.02);\r\n \r\n"
                },
                {
                    "date": 1624011206035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -450,9 +450,9 @@\n                     let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n                     let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n                     this._foodTag++;\r\n-                    state1.gameFoodData = temp\r\n+                    state1.gameFoodData = temp;\r\n                     state1.foodTag = this._foodTag;\r\n                     this.updateState(state1);\r\n \r\n                 }, 0.02);\r\n@@ -628,13 +628,9 @@\n             console.log(state.gameFoodData);\r\n             console.log('===== myFoodPools ====');\r\n             console.log(this.myFoodPools);\r\n \r\n-            while (this._curDropLength >= state.gameFoodData.length) {\r\n-\r\n-                this.foodDropAnimate(state, state.gameFoodData[this._curDropLength]);\r\n-\r\n-            }\r\n+            this.foodDropAnimate(state, state.gameFoodData[this._curDropLength]);\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n         }\r\n \r\n \r\n"
                },
                {
                    "date": 1624011212713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -628,9 +628,10 @@\n             console.log(state.gameFoodData);\r\n             console.log('===== myFoodPools ====');\r\n             console.log(this.myFoodPools);\r\n \r\n-            this.foodDropAnimate(state, state.gameFoodData[this._curDropLength]);\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n         }\r\n \r\n \r\n"
                },
                {
                    "date": 1624011304722,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,9 +335,9 @@\n         food.x = food.data.x;\r\n         food.y = 100;\r\n         food.visible = true;\r\n         cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n+            .to(this._dropSpeed, { x: food.data.x, y: 970 })\r\n             .call(() => {\r\n                 food.y = 100;\r\n                 food.visible = false;\r\n                 food.data.isShow = false;\r\n"
                },
                {
                    "date": 1624011337827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -363,10 +363,8 @@\n             }\r\n             this.updateState(state1);\r\n \r\n         }, 0.01)\r\n-\r\n-        this._curDropLength++;\r\n     }\r\n \r\n     private _clickDropFood(evt: any) {\r\n \r\n"
                },
                {
                    "date": 1624011391931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,841 @@\n+import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 2.5;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: [],\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 2.3;\r\n+                //2.0 ----> 60 * 0.6\r\n+                this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+                this._interTimeLimit = this._framesSecond * 0.3;\r\n+            }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n+            food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(this._dropSpeed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            console.log('===== gameFoodData ====');\r\n+            console.log(state.gameFoodData);\r\n+            console.log('===== myFoodPools ====');\r\n+            console.log(this.myFoodPools);\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624011398845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -621,13 +621,8 @@\n \r\n             // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n             // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n \r\n-            console.log('===== gameFoodData ====');\r\n-            console.log(state.gameFoodData);\r\n-            console.log('===== myFoodPools ====');\r\n-            console.log(this.myFoodPools);\r\n-\r\n             this.foodDropAnimate(state, state.gameFoodData);\r\n \r\n             this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n         }\r\n@@ -838,845 +833,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 2.5;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: [],\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n-            food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            console.log('===== gameFoodData ====');\r\n-            console.log(state.gameFoodData);\r\n-            console.log('===== myFoodPools ====');\r\n-            console.log(this.myFoodPools);\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624011529881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -183,9 +183,9 @@\n             submitFeedback: this.feedbackType.No,\r\n             gameTime: 0,\r\n             clickFoodTag: -1,\r\n             rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: [],\r\n+            gameFoodData: {},\r\n             dropSpeed: this._dropSpeed,\r\n             interTimeLimit: this._interTimeLimit,\r\n             foodTag: this._foodTag\r\n         }\r\n@@ -299,9 +299,9 @@\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n             let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n             this._foodTag++;\r\n             state.gameFoodData = temp;\r\n             state.dropSpeed = this._dropSpeed;\r\n             state.interTimeLimit = this._interTimeLimit;\r\n"
                },
                {
                    "date": 1624011552502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,9 +335,9 @@\n         food.x = food.data.x;\r\n         food.y = 100;\r\n         food.visible = true;\r\n         cc.tween(food)\r\n-            .to(this._dropSpeed, { x: food.data.x, y: 970 })\r\n+            .to(this.food.data.speed, { x: food.data.x, y: 970 })\r\n             .call(() => {\r\n                 food.y = 100;\r\n                 food.visible = false;\r\n                 food.data.isShow = false;\r\n"
                },
                {
                    "date": 1624011558099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -335,9 +335,9 @@\n         food.x = food.data.x;\r\n         food.y = 100;\r\n         food.visible = true;\r\n         cc.tween(food)\r\n-            .to(this.food.data.speed, { x: food.data.x, y: 970 })\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n             .call(() => {\r\n                 food.y = 100;\r\n                 food.visible = false;\r\n                 food.data.isShow = false;\r\n"
                },
                {
                    "date": 1624011756218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     private _gameTime: number = 0;\r\n \r\n     private _interTime: number = 0;\r\n \r\n-    private _interTimeLimit: number = 0;\r\n+    private _interTimeLimit: number = 60 * 1.5;\r\n \r\n     /** 我自己的对象池 */\r\n     private myFoodPools: any = [];\r\n \r\n@@ -43,9 +43,9 @@\n     private _foodTag: number = 1;\r\n \r\n     private _rightIndexs: any = [];\r\n \r\n-    private _dropSpeed: number = 2.5;\r\n+    private _dropSpeed: number = 3.0;\r\n \r\n     private _playBtn: fgui.GButton;\r\n \r\n     private _package: any;\r\n"
                },
                {
                    "date": 1624011775383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n     private _gameTime: number = 0;\r\n \r\n     private _interTime: number = 0;\r\n \r\n-    private _interTimeLimit: number = 60 * 1.5;\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n \r\n     /** 我自己的对象池 */\r\n     private myFoodPools: any = [];\r\n \r\n@@ -271,30 +271,30 @@\n \r\n         this._interTime++;\r\n \r\n         if (this._interTime >= this._interTimeLimit) {\r\n-            if (this._gameTime <= 5 * this._framesSecond) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n \r\n-                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                this._interTimeLimit = this._framesSecond * 1.2;\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n \r\n-            } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n \r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n \r\n-                this._dropSpeed = 2.3;\r\n-                //2.0 ----> 60 * 0.6\r\n-                this._interTimeLimit = this._framesSecond * 0.5;\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n \r\n-            } else if (this._gameTime > 10 * this._framesSecond) {\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n \r\n-                // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-                // this._interTimeLimit = this._framesSecond * 1.2;\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n \r\n-                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-                this._interTimeLimit = this._framesSecond * 0.3;\r\n-            }\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n \r\n             this._interTime = 0;\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n"
                },
                {
                    "date": 1624011828665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-import inputAnswer_model0404_v2 from '../numberPatterns/inputAnswer-model0404-v2';\r\n \r\n /*\r\n  * @Descripttion: \r\n  * @version: \r\n"
                },
                {
                    "date": 1624011851499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -832,4 +832,841 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n+\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n+            food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624011868272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -834,18 +834,8 @@\n     }\r\n }\r\n \r\n \r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n \r\n @ccclass\r\n export default class choose_model03_v2 extends cc.Component {\r\n     private _worldRoot: cc.Node;\r\n"
                },
                {
                    "date": 1624011876577,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -836,9 +836,9 @@\n \r\n \r\n \r\n @ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n+export default class food extends cc.Component {\r\n     private _worldRoot: cc.Node;\r\n     private _view: fgui.GComponent;\r\n     private _c1: fgui.Controller;\r\n     private _c2: fgui.Controller;\r\n"
                },
                {
                    "date": 1624011894479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -836,9 +836,9 @@\n \r\n \r\n \r\n @ccclass\r\n-export default class food extends cc.Component {\r\n+class food extends cc.Component {\r\n     private _worldRoot: cc.Node;\r\n     private _view: fgui.GComponent;\r\n     private _c1: fgui.Controller;\r\n     private _c2: fgui.Controller;\r\n"
                },
                {
                    "date": 1624011914809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -836,90 +836,11 @@\n \r\n \r\n \r\n @ccclass\r\n+\r\n class food extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n \r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n     async onLoad() {\r\n         this._worldRoot = cc.find(\"Canvas\").parent;\r\n \r\n         this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n"
                },
                {
                    "date": 1624011921681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -839,9 +839,9 @@\n @ccclass\r\n \r\n class food extends cc.Component {\r\n \r\n-    async onLoad() {\r\n+    onLoad() {\r\n         this._worldRoot = cc.find(\"Canvas\").parent;\r\n \r\n         this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n         this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n"
                },
                {
                    "date": 1624011952667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -840,141 +840,13 @@\n \r\n class food extends cc.Component {\r\n \r\n     onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n \r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n     }\r\n \r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n+    init(data: any) {\r\n \r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n     }\r\n \r\n     protected updateAdd(dt: number): void {\r\n \r\n"
                },
                {
                    "date": 1624011980490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -847,609 +847,6 @@\n     init(data: any) {\r\n \r\n     }\r\n \r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n-            food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n }\r\n \r\n"
                },
                {
                    "date": 1624012022691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -837,9 +837,9 @@\n \r\n \r\n @ccclass\r\n \r\n-class food extends cc.Component {\r\n+class Food extends cc.Component {\r\n \r\n     onLoad() {\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624012028951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -837,9 +837,9 @@\n \r\n \r\n @ccclass\r\n \r\n-class Food extends cc.Component {\r\n+class MyFood extends cc.Component {\r\n \r\n     onLoad() {\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624012034289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -841,8 +841,9 @@\n class MyFood extends cc.Component {\r\n \r\n     onLoad() {\r\n \r\n+\r\n     }\r\n \r\n     init(data: any) {\r\n \r\n"
                },
                {
                    "date": 1624012046408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -844,10 +844,11 @@\n \r\n \r\n     }\r\n \r\n-    init(data: any) {\r\n+    init() {\r\n \r\n+\r\n     }\r\n \r\n }\r\n \r\n"
                },
                {
                    "date": 1624012052030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -842,8 +842,9 @@\n \r\n     onLoad() {\r\n \r\n \r\n+\r\n     }\r\n \r\n     init() {\r\n \r\n"
                },
                {
                    "date": 1624012067280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -842,8 +842,9 @@\n \r\n     onLoad() {\r\n \r\n \r\n+        console.log('==== myFood  ====');\r\n \r\n     }\r\n \r\n     init() {\r\n"
                },
                {
                    "date": 1624012074075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -842,9 +842,9 @@\n \r\n     onLoad() {\r\n \r\n \r\n-        console.log('==== myFood  ====');\r\n+        console.log('==== myFood ====');\r\n \r\n     }\r\n \r\n     init() {\r\n"
                },
                {
                    "date": 1624012225781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,8 +197,10 @@\n         let GComponent = model.uiPath;\r\n         let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n         this._package = Package;\r\n \r\n+        let food = new MyFood();\r\n+\r\n         this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n \r\n         if (gameFood) this._gameFood = gameFood;\r\n         if (rightIndexs) this._rightIndexs = rightIndexs;\r\n"
                },
                {
                    "date": 1624012272102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -836,11 +836,8 @@\n     }\r\n }\r\n \r\n \r\n-\r\n-@ccclass\r\n-\r\n class MyFood extends cc.Component {\r\n \r\n     onLoad() {\r\n \r\n"
                },
                {
                    "date": 1624012468850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,8 +199,10 @@\n         this._package = Package;\r\n \r\n         let food = new MyFood();\r\n \r\n+        this._view.addChild();\r\n+\r\n         this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n \r\n         if (gameFood) this._gameFood = gameFood;\r\n         if (rightIndexs) this._rightIndexs = rightIndexs;\r\n"
                },
                {
                    "date": 1624012474011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n         this._package = Package;\r\n \r\n         let food = new MyFood();\r\n \r\n-        this._view.addChild();\r\n+        this._view.addChild(food);\r\n \r\n         this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n \r\n         if (gameFood) this._gameFood = gameFood;\r\n"
                },
                {
                    "date": 1624012654806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -838,9 +838,9 @@\n     }\r\n }\r\n \r\n \r\n-class MyFood extends cc.Component {\r\n+class MyFood extends fgui.GObject {\r\n \r\n     onLoad() {\r\n \r\n \r\n"
                },
                {
                    "date": 1624012678972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -843,9 +843,9 @@\n \r\n     onLoad() {\r\n \r\n \r\n-        console.log('==== myFood ====');\r\n+        console.log('==== 111111 myFood 2222222====');\r\n \r\n     }\r\n \r\n     init() {\r\n"
                },
                {
                    "date": 1624012711083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,14 +197,14 @@\n         let GComponent = model.uiPath;\r\n         let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n         this._package = Package;\r\n \r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n         let food = new MyFood();\r\n \r\n         this._view.addChild(food);\r\n \r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n         if (gameFood) this._gameFood = gameFood;\r\n         if (rightIndexs) this._rightIndexs = rightIndexs;\r\n \r\n         let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n"
                },
                {
                    "date": 1624012748495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,857 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        let food = new MyFood();\r\n+\r\n+        this._view.addChild(food);\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n+            food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyFood extends fgui.GObject {\r\n+\r\n+    onLoad() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624012757534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -854,861 +854,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        let food = new MyFood();\r\n-\r\n-        this._view.addChild(food);\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n-            food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyFood extends fgui.GObject {\r\n-\r\n-    onLoad() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624012805957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -843,15 +843,18 @@\n \r\n     onLoad() {\r\n \r\n \r\n-        console.log('==== 111111 myFood 2222222====');\r\n \r\n+\r\n     }\r\n \r\n     init() {\r\n \r\n \r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n     }\r\n \r\n }\r\n \r\n"
                },
                {
                    "date": 1624012811567,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,855 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        let food = new MyFood();\r\n+\r\n+        this._view.addChild(food);\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+            food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n+            food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyFood extends fgui.GObject {\r\n+\r\n+    onLoad() {\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624012825756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -200,9 +200,9 @@\n \r\n         this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n \r\n         let food = new MyFood();\r\n-\r\n+        food.init();\r\n         this._view.addChild(food);\r\n \r\n         if (gameFood) this._gameFood = gameFood;\r\n         if (rightIndexs) this._rightIndexs = rightIndexs;\r\n@@ -852,864 +852,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        let food = new MyFood();\r\n-\r\n-        this._view.addChild(food);\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n-            food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyFood extends fgui.GObject {\r\n-\r\n-    onLoad() {\r\n-\r\n-\r\n-\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624012853497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -840,12 +840,8 @@\n \r\n \r\n class MyFood extends fgui.GObject {\r\n \r\n-    onLoad() {\r\n-\r\n-    }\r\n-\r\n     init() {\r\n \r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n"
                },
                {
                    "date": 1624012962631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -840,8 +840,11 @@\n \r\n \r\n class MyFood extends fgui.GObject {\r\n \r\n+    protected onUpdate(): void;\r\n+    protected onDestroy(): void;\r\n+\r\n     init() {\r\n \r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n"
                },
                {
                    "date": 1624012977256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -840,11 +840,16 @@\n \r\n \r\n class MyFood extends fgui.GObject {\r\n \r\n-    protected onUpdate(): void;\r\n-    protected onDestroy(): void;\r\n+    protected onUpdate() {\r\n \r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+    }\r\n+\r\n     init() {\r\n \r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n"
                },
                {
                    "date": 1624012986714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -842,8 +842,10 @@\n class MyFood extends fgui.GObject {\r\n \r\n     protected onUpdate() {\r\n \r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n     }\r\n \r\n     protected onDestroy() {\r\n \r\n"
                },
                {
                    "date": 1624012993402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -842,9 +842,9 @@\n class MyFood extends fgui.GObject {\r\n \r\n     protected onUpdate() {\r\n \r\n-        console.log('==== 111111 myFood 2222222====');\r\n+        console.log('==== onUpdate====');\r\n \r\n     }\r\n \r\n     protected onDestroy() {\r\n"
                },
                {
                    "date": 1624013000177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -842,14 +842,16 @@\n class MyFood extends fgui.GObject {\r\n \r\n     protected onUpdate() {\r\n \r\n-        console.log('==== onUpdate====');\r\n+        console.log('==== onUpdate ====');\r\n \r\n     }\r\n \r\n     protected onDestroy() {\r\n \r\n+        console.log('==== onUpdate ====');\r\n+\r\n     }\r\n \r\n     init() {\r\n \r\n"
                },
                {
                    "date": 1624013005539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -848,9 +848,9 @@\n     }\r\n \r\n     protected onDestroy() {\r\n \r\n-        console.log('==== onUpdate ====');\r\n+        console.log('==== onDestroy ====');\r\n \r\n     }\r\n \r\n     init() {\r\n"
                },
                {
                    "date": 1624013194155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,12 +199,8 @@\n         this._package = Package;\r\n \r\n         this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n \r\n-        let food = new MyFood();\r\n-        food.init();\r\n-        this._view.addChild(food);\r\n-\r\n         if (gameFood) this._gameFood = gameFood;\r\n         if (rightIndexs) this._rightIndexs = rightIndexs;\r\n \r\n         let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n@@ -327,9 +323,11 @@\n             }\r\n         }\r\n \r\n         if (!isHave) {\r\n-            food = fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n+\r\n+            food = new MyDropFood();\r\n+            fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n@@ -838,9 +836,9 @@\n     }\r\n }\r\n \r\n \r\n-class MyFood extends fgui.GObject {\r\n+class MyDropFood extends fgui.GObject {\r\n \r\n     protected onUpdate() {\r\n \r\n         console.log('==== onUpdate ====');\r\n"
                },
                {
                    "date": 1624013200530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,861 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package,);\r\n+            fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n+            food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624013217792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -858,865 +858,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood();\r\n-            fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n-            food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624013416956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,10 @@\n         }\r\n \r\n         if (!isHave) {\r\n \r\n-            food = new MyDropFood(this._package,);\r\n+            food = new MyDropFood();\r\n+\r\n             fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n@@ -838,8 +839,10 @@\n \r\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n+\r\n+\r\n     protected onUpdate() {\r\n \r\n         console.log('==== onUpdate ====');\r\n \r\n"
                },
                {
                    "date": 1624013422304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -840,9 +840,8 @@\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n \r\n-\r\n     protected onUpdate() {\r\n \r\n         console.log('==== onUpdate ====');\r\n \r\n"
                },
                {
                    "date": 1624013434782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,9 +325,9 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood();\r\n-\r\n+            food.init();\r\n             fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624013496332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,9 +325,9 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood();\r\n-            food.init();\r\n+            food.init(this._package,);\r\n             fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624013501933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,9 +325,8 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood();\r\n-            food.init(this._package,);\r\n             fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624013683948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,8 +325,9 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood();\r\n+\r\n             fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n@@ -838,8 +839,11 @@\n \r\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n+    public constructor() {\r\n+        super();\r\n+    }\r\n \r\n     protected onUpdate() {\r\n \r\n         console.log('==== onUpdate ====');\r\n"
                },
                {
                    "date": 1624013690181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -840,8 +840,9 @@\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n     public constructor() {\r\n+\r\n         super();\r\n     }\r\n \r\n     protected onUpdate() {\r\n"
                },
                {
                    "date": 1624013769400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,9 +325,9 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood();\r\n-\r\n+            food.init(this._package,);\r\n             fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624013787277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,9 +325,9 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood();\r\n-            food.init(this._package,);\r\n+            food.init(this._package, this._gameFood[foodData.index]);\r\n             fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624013802792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -856,9 +856,9 @@\n         console.log('==== onDestroy ====');\r\n \r\n     }\r\n \r\n-    init() {\r\n+    init(pkgName: string, resName: string) {\r\n \r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624013821067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,9 +326,8 @@\n         if (!isHave) {\r\n \r\n             food = new MyDropFood();\r\n             food.init(this._package, this._gameFood[foodData.index]);\r\n-            fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n@@ -858,8 +857,9 @@\n     }\r\n \r\n     init(pkgName: string, resName: string) {\r\n \r\n+        fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n     }\r\n \r\n"
                },
                {
                    "date": 1624013830839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -857,9 +857,9 @@\n     }\r\n \r\n     init(pkgName: string, resName: string) {\r\n \r\n-        fgui.UIPackage.createObject(this._package, this._gameFood[foodData.index]).asButton;\r\n+        fgui.UIPackage.createObject(pkgName, this._gameFood[foodData.index]).asButton;\r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n     }\r\n \r\n"
                },
                {
                    "date": 1624013840464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -857,9 +857,9 @@\n     }\r\n \r\n     init(pkgName: string, resName: string) {\r\n \r\n-        fgui.UIPackage.createObject(pkgName, this._gameFood[foodData.index]).asButton;\r\n+        fgui.UIPackage.createObject(pkgName, resName])\r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n     }\r\n \r\n"
                },
                {
                    "date": 1624013845741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -857,9 +857,9 @@\n     }\r\n \r\n     init(pkgName: string, resName: string) {\r\n \r\n-        fgui.UIPackage.createObject(pkgName, resName])\r\n+        fgui.UIPackage.createObject(pkgName, resName);\r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n     }\r\n \r\n"
                },
                {
                    "date": 1624013895870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -858,8 +858,10 @@\n \r\n     init(pkgName: string, resName: string) {\r\n \r\n         fgui.UIPackage.createObject(pkgName, resName);\r\n+\r\n+\r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n     }\r\n \r\n"
                },
                {
                    "date": 1624014180968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -838,9 +838,9 @@\n \r\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n-    public constructor() {\r\n+    public constructor(pkgName: string, resName: string) {\r\n \r\n         super();\r\n     }\r\n \r\n@@ -859,9 +859,8 @@\n     init(pkgName: string, resName: string) {\r\n \r\n         fgui.UIPackage.createObject(pkgName, resName);\r\n \r\n-\r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n     }\r\n \r\n"
                },
                {
                    "date": 1624014191382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -839,10 +839,10 @@\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n     public constructor(pkgName: string, resName: string) {\r\n+        super();\r\n \r\n-        super();\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624014199413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,10 +324,10 @@\n         }\r\n \r\n         if (!isHave) {\r\n \r\n-            food = new MyDropFood();\r\n-            food.init(this._package, this._gameFood[foodData.index]);\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n+            food.init();\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n"
                },
                {
                    "date": 1624014210898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -839,10 +839,11 @@\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n     public constructor(pkgName: string, resName: string) {\r\n+\r\n+        fgui.UIPackage.createObject(pkgName, resName);\r\n         super();\r\n-\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n@@ -857,10 +858,10 @@\n     }\r\n \r\n     init(pkgName: string, resName: string) {\r\n \r\n-        fgui.UIPackage.createObject(pkgName, resName);\r\n \r\n+\r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n     }\r\n \r\n"
                },
                {
                    "date": 1624014263819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -841,8 +841,9 @@\n \r\n     public constructor(pkgName: string, resName: string) {\r\n \r\n         fgui.UIPackage.createObject(pkgName, resName);\r\n+\r\n         super();\r\n     }\r\n \r\n     protected onUpdate() {\r\n"
                },
                {
                    "date": 1624014840949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,9 +325,8 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n-            food.init();\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n"
                },
                {
                    "date": 1624015421093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import { PrivateNode } from '../../../../creator';\r\n \r\n /*\r\n  * @Descripttion: \r\n  * @version: \r\n@@ -837,15 +838,17 @@\n \r\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n-    public constructor(pkgName: string, resName: string) {\r\n+    private:\r\n \r\n-        fgui.UIPackage.createObject(pkgName, resName);\r\n+        public constructor(pkgName: string, resName: string) {\r\n \r\n-        super();\r\n-    }\r\n+            fgui.UIPackage.createObject(pkgName, resName);\r\n \r\n+            super();\r\n+        }\r\n+\r\n     protected onUpdate() {\r\n \r\n         console.log('==== onUpdate ====');\r\n \r\n"
                },
                {
                    "date": 1624015443581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -838,16 +838,16 @@\n \r\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n-    private:\r\n+    private _item: fgui.GObject;\r\n \r\n-        public constructor(pkgName: string, resName: string) {\r\n+    public constructor(pkgName: string, resName: string) {\r\n \r\n-            fgui.UIPackage.createObject(pkgName, resName);\r\n+        fgui.UIPackage.createObject(pkgName, resName);\r\n \r\n-            super();\r\n-        }\r\n+        super();\r\n+    }\r\n \r\n     protected onUpdate() {\r\n \r\n         console.log('==== onUpdate ====');\r\n"
                },
                {
                    "date": 1624015452410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -842,9 +842,9 @@\n     private _item: fgui.GObject;\r\n \r\n     public constructor(pkgName: string, resName: string) {\r\n \r\n-        fgui.UIPackage.createObject(pkgName, resName);\r\n+        this._item = fgui.UIPackage.createObject(pkgName, resName);\r\n \r\n         super();\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624015461356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -842,11 +842,12 @@\n     private _item: fgui.GObject;\r\n \r\n     public constructor(pkgName: string, resName: string) {\r\n \r\n+        super();\r\n         this._item = fgui.UIPackage.createObject(pkgName, resName);\r\n \r\n-        super();\r\n+\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624015494164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -843,11 +843,11 @@\n \r\n     public constructor(pkgName: string, resName: string) {\r\n \r\n         super();\r\n+\r\n         this._item = fgui.UIPackage.createObject(pkgName, resName);\r\n \r\n-\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624015846863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -844,9 +844,9 @@\n     public constructor(pkgName: string, resName: string) {\r\n \r\n         super();\r\n \r\n-        this._item = fgui.UIPackage.createObject(pkgName, resName);\r\n+        draggingObject = fgui.UIPackage.createObject(pkgName, resName);\r\n \r\n     }\r\n \r\n     protected onUpdate() {\r\n"
                },
                {
                    "date": 1624015864374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -844,9 +844,9 @@\n     public constructor(pkgName: string, resName: string) {\r\n \r\n         super();\r\n \r\n-        draggingObject = fgui.UIPackage.createObject(pkgName, resName);\r\n+        MyDropFood.draggingObject = fgui.UIPackage.createObject(pkgName, resName);\r\n \r\n     }\r\n \r\n     protected onUpdate() {\r\n"
                },
                {
                    "date": 1624015871096,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -838,10 +838,8 @@\n \r\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n-    private _item: fgui.GObject;\r\n-\r\n     public constructor(pkgName: string, resName: string) {\r\n \r\n         super();\r\n \r\n"
                },
                {
                    "date": 1624015954612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-import { PrivateNode } from '../../../../creator';\r\n \r\n /*\r\n  * @Descripttion: \r\n  * @version: \r\n"
                },
                {
                    "date": 1624016413449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,870 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n+            food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+    public constructor(pkgName: string, resName: string) {\r\n+\r\n+        super();\r\n+\r\n+        MyDropFood.draggingObject = fgui.UIPackage.createObject(pkgName, resName);\r\n+\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init(pkgName: string, resName: string) {\r\n+\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624016420316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -867,874 +867,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n-            food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-    public constructor(pkgName: string, resName: string) {\r\n-\r\n-        super();\r\n-\r\n-        MyDropFood.draggingObject = fgui.UIPackage.createObject(pkgName, resName);\r\n-\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init(pkgName: string, resName: string) {\r\n-\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624017130744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,870 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n+            food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+    public constructor(pkgName: string, resName: string) {\r\n+\r\n+        super();\r\n+\r\n+        MyDropFood.draggingObject = fgui.UIPackage.createObject(pkgName, resName);\r\n+\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init(pkgName: string, resName: string) {\r\n+\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624017190111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,9 @@\n         }\r\n \r\n         if (!isHave) {\r\n \r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n+            food = new MyDropFood(this._gameFood[foodData.index]);\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n@@ -837,14 +837,13 @@\n \r\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n-    public constructor(pkgName: string, resName: string) {\r\n+    public constructor(resName: string) {\r\n \r\n         super();\r\n \r\n-        MyDropFood.draggingObject = fgui.UIPackage.createObject(pkgName, resName);\r\n-\r\n+        MyDropFood.packageItem = \r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n@@ -867,874 +866,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n-            food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-    public constructor(pkgName: string, resName: string) {\r\n-\r\n-        super();\r\n-\r\n-        MyDropFood.draggingObject = fgui.UIPackage.createObject(pkgName, resName);\r\n-\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init(pkgName: string, resName: string) {\r\n-\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624017205740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -841,9 +841,9 @@\n     public constructor(resName: string) {\r\n \r\n         super();\r\n \r\n-        MyDropFood.packageItem = \r\n+        MyDropFood.packageItem = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624017211135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -841,9 +841,9 @@\n     public constructor(resName: string) {\r\n \r\n         super();\r\n \r\n-        MyDropFood.packageItem = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        MyDropFood.packageItem = fgui.UIPackage.getItemByURL('resName');\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624017220362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -841,9 +841,9 @@\n     public constructor(resName: string) {\r\n \r\n         super();\r\n \r\n-        MyDropFood.packageItem = fgui.UIPackage.getItemByURL('resName');\r\n+        this.packageItem = fgui.UIPackage.getItemByURL(resName);\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624017225747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -856,9 +856,9 @@\n         console.log('==== onDestroy ====');\r\n \r\n     }\r\n \r\n-    init(pkgName: string, resName: string) {\r\n+    init() {\r\n \r\n \r\n \r\n         console.log('==== 111111 myFood 2222222====');\r\n"
                },
                {
                    "date": 1624017231413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -858,10 +858,8 @@\n     }\r\n \r\n     init() {\r\n \r\n-\r\n-\r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n     }\r\n \r\n"
                },
                {
                    "date": 1624017422580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,8 +324,9 @@\n         }\r\n \r\n         if (!isHave) {\r\n \r\n+\r\n             food = new MyDropFood(this._gameFood[foodData.index]);\r\n             food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624017497254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -327,8 +327,9 @@\n \r\n \r\n             food = new MyDropFood(this._gameFood[foodData.index]);\r\n             food.data = foodData;\r\n+            this.packageItem = fgui.UIPackage.getItemByURL(resName);\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n@@ -842,9 +843,8 @@\n     public constructor(resName: string) {\r\n \r\n         super();\r\n \r\n-        this.packageItem = fgui.UIPackage.getItemByURL(resName);\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624017506499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -327,9 +327,9 @@\n \r\n \r\n             food = new MyDropFood(this._gameFood[foodData.index]);\r\n             food.data = foodData;\r\n-            this.packageItem = fgui.UIPackage.getItemByURL(resName);\r\n+            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n"
                },
                {
                    "date": 1624017576188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,867 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._gameFood[foodData.index]);\r\n+            food.data = foodData;\r\n+            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+    public constructor(resName: string) {\r\n+\r\n+        super();\r\n+\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624017576408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -864,872 +864,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-\r\n-            food = new MyDropFood(this._gameFood[foodData.index]);\r\n-            food.data = foodData;\r\n-            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-    public constructor(resName: string) {\r\n-\r\n-        super();\r\n-\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624018032463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -838,8 +838,12 @@\n \r\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n+    MyDropFood() {\r\n+\r\n+        return this;\r\n+    }\r\n     public constructor(resName: string) {\r\n \r\n         super();\r\n \r\n"
                },
                {
                    "date": 1624018054440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -840,10 +840,12 @@\n class MyDropFood extends fgui.GObject {\r\n \r\n     MyDropFood() {\r\n \r\n+        console.log();\r\n         return this;\r\n     }\r\n+\r\n     public constructor(resName: string) {\r\n \r\n         super();\r\n \r\n"
                },
                {
                    "date": 1624018060669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -840,9 +840,9 @@\n class MyDropFood extends fgui.GObject {\r\n \r\n     MyDropFood() {\r\n \r\n-        console.log();\r\n+        console.log('== ===');\r\n         return this;\r\n     }\r\n \r\n     public constructor(resName: string) {\r\n"
                },
                {
                    "date": 1624018067733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -840,9 +840,9 @@\n class MyDropFood extends fgui.GObject {\r\n \r\n     MyDropFood() {\r\n \r\n-        console.log('== ===');\r\n+        console.log('== MyDropFood  444 ===');\r\n         return this;\r\n     }\r\n \r\n     public constructor(resName: string) {\r\n"
                },
                {
                    "date": 1624018127575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -844,14 +844,9 @@\n         console.log('== MyDropFood  444 ===');\r\n         return this;\r\n     }\r\n \r\n-    public constructor(resName: string) {\r\n \r\n-        super();\r\n-\r\n-    }\r\n-\r\n     protected onUpdate() {\r\n \r\n         console.log('==== onUpdate ====');\r\n \r\n"
                },
                {
                    "date": 1624018139349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,9 @@\n         }\r\n \r\n         if (!isHave) {\r\n \r\n-            food = new MyDropFood(this._gameFood[foodData.index]);\r\n+            food = new MyDropFood();\r\n             food.data = foodData;\r\n             food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624018228638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,869 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood();\r\n+            food.data = foodData;\r\n+            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+    MyDropFood() {\r\n+\r\n+\r\n+        console.log('== MyDropFood  444 ===');\r\n+        return this;\r\n+    }\r\n+\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624018228854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -866,872 +866,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood();\r\n-            food.data = foodData;\r\n-            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-    MyDropFood() {\r\n-\r\n-        console.log('== MyDropFood  444 ===');\r\n-        return this;\r\n-    }\r\n-\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624018234133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,868 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood();\r\n+            food.data = foodData;\r\n+            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+    MyDropFood() {\r\n+\r\n+        console.log('== MyDropFood  444 ===');\r\n+\r\n+    }\r\n+\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624018234355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -865,873 +865,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood();\r\n-            food.data = foodData;\r\n-            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-    MyDropFood() {\r\n-\r\n-\r\n-        console.log('== MyDropFood  444 ===');\r\n-        return this;\r\n-    }\r\n-\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624018240856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -844,9 +844,8 @@\n         console.log('== MyDropFood  444 ===');\r\n \r\n     }\r\n \r\n-\r\n     protected onUpdate() {\r\n \r\n         console.log('==== onUpdate ====');\r\n \r\n"
                },
                {
                    "date": 1624018292220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,9 @@\n         }\r\n \r\n         if (!isHave) {\r\n \r\n-            food = new MyDropFood();\r\n+            food = new MyDropFood(1);\r\n             food.data = foodData;\r\n             food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n@@ -838,11 +838,11 @@\n \r\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n-    MyDropFood() {\r\n+    MyDropFood(t: number) {\r\n \r\n-        console.log('== MyDropFood  444 ===');\r\n+        console.log('== MyDropFood   ===' + t);\r\n \r\n     }\r\n \r\n     protected onUpdate() {\r\n"
                },
                {
                    "date": 1624018304767,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -846,9 +846,9 @@\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n-        console.log('==== onUpdate ====');\r\n+        // console.log('==== onUpdate ====');\r\n \r\n     }\r\n \r\n     protected onDestroy() {\r\n"
                },
                {
                    "date": 1624018345738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,9 @@\n         }\r\n \r\n         if (!isHave) {\r\n \r\n-            food = new MyDropFood(1);\r\n+            food = new MyDropFood();\r\n             food.data = foodData;\r\n             food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624018421131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -838,9 +838,9 @@\n \r\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n-    MyDropFood(t: number) {\r\n+    public MyDropFood(t: number) {\r\n \r\n         console.log('== MyDropFood   ===' + t);\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624018472095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,8 +325,9 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood();\r\n+            food.MyDropFood(1);\r\n             food.data = foodData;\r\n             food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624018513082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -843,8 +843,9 @@\n     public MyDropFood(t: number) {\r\n \r\n         console.log('== MyDropFood   ===' + t);\r\n \r\n+        return this;\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624018528142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -839,13 +839,12 @@\n \r\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n-    public MyDropFood(t: number) {\r\n+    public MyDropFood() {\r\n \r\n         console.log('== MyDropFood   ===' + t);\r\n \r\n-        return this;\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624018538533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,9 +325,8 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood();\r\n-            food.MyDropFood(1);\r\n             food.data = foodData;\r\n             food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n@@ -841,9 +840,9 @@\n class MyDropFood extends fgui.GObject {\r\n \r\n     public MyDropFood() {\r\n \r\n-        console.log('== MyDropFood   ===' + t);\r\n+        console.log('== MyDropFood   ===');\r\n \r\n     }\r\n \r\n     protected onUpdate() {\r\n"
                },
                {
                    "date": 1624018905158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -844,8 +844,9 @@\n         console.log('== MyDropFood   ===');\r\n \r\n     }\r\n \r\n+\r\n     protected onUpdate() {\r\n \r\n         // console.log('==== onUpdate ====');\r\n \r\n"
                },
                {
                    "date": 1624018944377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -844,9 +844,13 @@\n         console.log('== MyDropFood   ===');\r\n \r\n     }\r\n \r\n+    constructor() {\r\n \r\n+        super();\r\n+    }\r\n+\r\n     protected onUpdate() {\r\n \r\n         // console.log('==== onUpdate ====');\r\n \r\n"
                },
                {
                    "date": 1624018950234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -847,8 +847,9 @@\n \r\n     constructor() {\r\n \r\n         super();\r\n+\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624018958026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -848,8 +848,9 @@\n     constructor() {\r\n \r\n         super();\r\n \r\n+        return this;\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624019026414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,874 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood();\r\n+            food.data = foodData;\r\n+            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+    public MyDropFood() {\r\n+\r\n+        console.log('== MyDropFood   ===');\r\n+\r\n+    }\r\n+\r\n+    constructor() {\r\n+\r\n+        super();\r\n+\r\n+        return this;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624019033985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -871,878 +871,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood();\r\n-            food.data = foodData;\r\n-            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-    public MyDropFood() {\r\n-\r\n-        console.log('== MyDropFood   ===');\r\n-\r\n-    }\r\n-\r\n-    constructor() {\r\n-\r\n-        super();\r\n-\r\n-        return this;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624019164487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -838,8 +838,10 @@\n \r\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n+    private _item: MyDropFood;\r\n+\r\n     public MyDropFood() {\r\n \r\n         console.log('== MyDropFood   ===');\r\n \r\n"
                },
                {
                    "date": 1624019239910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,9 @@\n         }\r\n \r\n         if (!isHave) {\r\n \r\n-            food = new MyDropFood();\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n             food.data = foodData;\r\n             food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624019267109,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -840,18 +840,15 @@\n class MyDropFood extends fgui.GObject {\r\n \r\n     private _item: MyDropFood;\r\n \r\n-    public MyDropFood() {\r\n \r\n-        console.log('== MyDropFood   ===');\r\n-\r\n-    }\r\n-\r\n     constructor() {\r\n \r\n         super();\r\n \r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+\r\n         return this;\r\n     }\r\n \r\n     protected onUpdate() {\r\n"
                },
                {
                    "date": 1624019279209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -845,9 +845,9 @@\n     constructor() {\r\n \r\n         super();\r\n \r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._item = fgui.UIPackage.createObject(this._package, 'hand');\r\n \r\n         return this;\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624019312014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -841,13 +841,13 @@\n \r\n     private _item: MyDropFood;\r\n \r\n \r\n-    constructor() {\r\n+    constructor(_package: any, name: any) {\r\n \r\n         super();\r\n \r\n-        this._item = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._item = fgui.UIPackage.createObject(package, name);\r\n \r\n         return this;\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624019353940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -841,9 +841,9 @@\n \r\n     private _item: MyDropFood;\r\n \r\n \r\n-    constructor(_package: any, name: any) {\r\n+    constructor(pkgName: string, resName: string) {\r\n \r\n         super();\r\n \r\n         this._item = fgui.UIPackage.createObject(package, name);\r\n"
                },
                {
                    "date": 1624019359697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,873 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n+            food.data = foodData;\r\n+            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+    private _item: MyDropFood;\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string) {\r\n+\r\n+        super();\r\n+\r\n+        this._item = fgui.UIPackage.createObject(pkgName, resName);\r\n+\r\n+        return this;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624019359917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -870,877 +870,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n-            food.data = foodData;\r\n-            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-    private _item: MyDropFood;\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string) {\r\n-\r\n-        super();\r\n-\r\n-        this._item = fgui.UIPackage.createObject(package, name);\r\n-\r\n-        return this;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624019365779,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,873 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n+            food.data = foodData;\r\n+            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+    private _item: MyDropFood;\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string) {\r\n+\r\n+        super();\r\n+\r\n+        this._item = fgui.UIPackage.createObject(pkgName, resName);\r\n+\r\n+        return this;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624019371370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -847,9 +847,9 @@\n         super();\r\n \r\n         this._item = fgui.UIPackage.createObject(pkgName, resName);\r\n \r\n-        return this;\r\n+        return this._item;\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n@@ -870,877 +870,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n-            food.data = foodData;\r\n-            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-    private _item: MyDropFood;\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string) {\r\n-\r\n-        super();\r\n-\r\n-        this._item = fgui.UIPackage.createObject(pkgName, resName);\r\n-\r\n-        return this;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624019379431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -845,9 +845,9 @@\n     constructor(pkgName: string, resName: string) {\r\n \r\n         super();\r\n \r\n-        this._item = fgui.UIPackage.createObject(pkgName, resName);\r\n+        this._item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n \r\n         return this._item;\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624019393128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,9 +326,8 @@\n         if (!isHave) {\r\n \r\n             food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n             food.data = foodData;\r\n-            food.packageItem = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n"
                },
                {
                    "date": 1624019399894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -839,9 +839,8 @@\n class MyDropFood extends fgui.GObject {\r\n \r\n     private _item: MyDropFood;\r\n \r\n-\r\n     constructor(pkgName: string, resName: string) {\r\n \r\n         super();\r\n \r\n"
                },
                {
                    "date": 1624019545252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -331,21 +331,8 @@\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n \r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n-            .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n         let isFlag = false;\r\n         for (let i = 0; i < this._rightIndexs.length; i++) {\r\n \r\n             if (this._rightIndexs[i] === foodData.index) {\r\n@@ -862,8 +849,21 @@\n     }\r\n \r\n     init() {\r\n \r\n+        food.x = food.data.x;\r\n+        food.y = 100;\r\n+        food.visible = true;\r\n+        cc.tween(food)\r\n+            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+            .call(() => {\r\n+                food.y = 100;\r\n+                food.visible = false;\r\n+                food.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n     }\r\n \r\n"
                },
                {
                    "date": 1624019556533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -832,8 +832,10 @@\n         super();\r\n \r\n         this._item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n \r\n+        this.init();\r\n+\r\n         return this._item;\r\n     }\r\n \r\n     protected onUpdate() {\r\n"
                },
                {
                    "date": 1624019611743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -851,17 +851,17 @@\n     }\r\n \r\n     init() {\r\n \r\n-        food.x = food.data.x;\r\n-        food.y = 100;\r\n-        food.visible = true;\r\n-        cc.tween(food)\r\n-            .to(food.data.speed, { x: food.data.x, y: 970 })\r\n+        this.x = this.data.x;\r\n+        this.y = 100;\r\n+        this.visible = true;\r\n+        cc.tween(this)\r\n+            .to(this.data.speed, { x: this.x, y: 970 })\r\n             .call(() => {\r\n-                food.y = 100;\r\n-                food.visible = false;\r\n-                food.data.isShow = false;\r\n+                this.y = 100;\r\n+                this.visible = false;\r\n+                this.data.isShow = false;\r\n \r\n             })\r\n             .start();\r\n \r\n"
                },
                {
                    "date": 1624019645713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -852,8 +852,9 @@\n \r\n     init() {\r\n \r\n         this.x = this.data.x;\r\n+        let tempX = this.x\r\n         this.y = 100;\r\n         this.visible = true;\r\n         cc.tween(this)\r\n             .to(this.data.speed, { x: this.x, y: 970 })\r\n"
                },
                {
                    "date": 1624019656119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -852,13 +852,13 @@\n \r\n     init() {\r\n \r\n         this.x = this.data.x;\r\n-        let tempX = this.x\r\n+        let tempX = this.x;\r\n         this.y = 100;\r\n         this.visible = true;\r\n         cc.tween(this)\r\n-            .to(this.data.speed, { x: this.x, y: 970 })\r\n+            .to(this.data.speed, { x: tempX, y: 970 })\r\n             .call(() => {\r\n                 this.y = 100;\r\n                 this.visible = false;\r\n                 this.data.isShow = false;\r\n"
                },
                {
                    "date": 1624019672852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -832,10 +832,8 @@\n         super();\r\n \r\n         this._item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n \r\n-        this.init();\r\n-\r\n         return this._item;\r\n     }\r\n \r\n     protected onUpdate() {\r\n"
                },
                {
                    "date": 1624019707640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -326,8 +326,9 @@\n         if (!isHave) {\r\n \r\n             food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n             food.data = foodData;\r\n+            food.init();\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n"
                },
                {
                    "date": 1624019866536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -831,11 +831,11 @@\n     constructor(pkgName: string, resName: string) {\r\n \r\n         super();\r\n \r\n-        this._item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        this._item = ;\r\n \r\n-        return this._item;\r\n+        return fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624019873746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,870 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n+            food.data = foodData;\r\n+            food.init();\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string) {\r\n+\r\n+        super();\r\n+\r\n+        return fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 100;\r\n+        this.visible = true;\r\n+        cc.tween(this)\r\n+            .to(this.data.speed, { x: tempX, y: 970 })\r\n+            .call(() => {\r\n+                this.y = 100;\r\n+                this.visible = false;\r\n+                this.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624019874019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -867,877 +867,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n-            food.data = foodData;\r\n-            food.init();\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-    private _item: MyDropFood;\r\n-\r\n-    constructor(pkgName: string, resName: string) {\r\n-\r\n-        super();\r\n-\r\n-        this._item = ;\r\n-\r\n-        return fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 100;\r\n-        this.visible = true;\r\n-        cc.tween(this)\r\n-            .to(this.data.speed, { x: tempX, y: 970 })\r\n-            .call(() => {\r\n-                this.y = 100;\r\n-                this.visible = false;\r\n-                this.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624019893147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -849,19 +849,19 @@\n     init() {\r\n \r\n         this.x = this.data.x;\r\n         let tempX = this.x;\r\n-        this.y = 100;\r\n+        this.y = 300;\r\n         this.visible = true;\r\n-        cc.tween(this)\r\n-            .to(this.data.speed, { x: tempX, y: 970 })\r\n-            .call(() => {\r\n-                this.y = 100;\r\n-                this.visible = false;\r\n-                this.data.isShow = false;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n \r\n-            })\r\n-            .start();\r\n+        //     })\r\n+        //     .start();\r\n \r\n         console.log('==== 111111 myFood 2222222====');\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624019932666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -845,9 +845,9 @@\n         console.log('==== onDestroy ====');\r\n \r\n     }\r\n \r\n-    init() {\r\n+    protected init() {\r\n \r\n         this.x = this.data.x;\r\n         let tempX = this.x;\r\n         this.y = 300;\r\n"
                },
                {
                    "date": 1624019932894,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,870 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n+            food.data = foodData;\r\n+            food.init();\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string) {\r\n+\r\n+        super();\r\n+\r\n+        return fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    protected init() {\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624019973427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -845,9 +845,9 @@\n         console.log('==== onDestroy ====');\r\n \r\n     }\r\n \r\n-    protected init() {\r\n+    init() {\r\n \r\n         this.x = this.data.x;\r\n         let tempX = this.x;\r\n         this.y = 300;\r\n@@ -867,874 +867,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n-            food.data = foodData;\r\n-            food.init();\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string) {\r\n-\r\n-        super();\r\n-\r\n-        return fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    protected init() {\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624019985494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -847,8 +847,13 @@\n     }\r\n \r\n     init() {\r\n \r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n         this.x = this.data.x;\r\n         let tempX = this.x;\r\n         this.y = 300;\r\n         this.visible = true;\r\n"
                },
                {
                    "date": 1624020026052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,9 +324,9 @@\n         }\r\n \r\n         if (!isHave) {\r\n \r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index]);\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n             food.data = foodData;\r\n             food.init();\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624020046001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -826,13 +826,14 @@\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n \r\n-    constructor(pkgName: string, resName: string) {\r\n+    constructor(pkgName: string, resName: string, foodData) {\r\n \r\n         super();\r\n \r\n-        return fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        return\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624020065222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -831,9 +831,10 @@\n \r\n         super();\r\n \r\n         let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-        return\r\n+        foodData.data = foodData;\r\n+        return item;\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624020071358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -826,9 +826,9 @@\n \r\n class MyDropFood extends fgui.GObject {\r\n \r\n \r\n-    constructor(pkgName: string, resName: string, foodData) {\r\n+    constructor(pkgName: string, resName: string, foodData: any) {\r\n \r\n         super();\r\n \r\n         let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n"
                },
                {
                    "date": 1624020079998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,877 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            food.data = foodData;\r\n+            food.init();\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+        super();\r\n+\r\n+        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        foodData.data = foodData;\r\n+        return item;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624020080268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,877 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            food.data = foodData;\r\n+            food.init();\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+        super();\r\n+\r\n+        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        foodData.data = foodData;\r\n+        return item;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624020089314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,876 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+        super();\r\n+\r\n+        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        foodData.data = foodData;\r\n+        return item;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624020090093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -873,2635 +873,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            food.data = foodData;\r\n-            food.init();\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-        super();\r\n-\r\n-        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-        foodData.data = foodData;\r\n-        return item;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            food.data = foodData;\r\n-            food.init();\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-        super();\r\n-\r\n-        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-        foodData.data = foodData;\r\n-        return item;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            food.data = foodData;\r\n-            food.init();\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-        super();\r\n-\r\n-        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-        foodData.data = foodData;\r\n-        return item;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624020130583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,9 +325,9 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            food.data = foodData;\r\n+            / food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n"
                },
                {
                    "date": 1624020136483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -325,9 +325,9 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            / food.data = foodData;\r\n+            //food.data = foodData;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n"
                },
                {
                    "date": 1624020151211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -831,8 +831,23 @@\n         super();\r\n \r\n         let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n         foodData.data = foodData;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n         return item;\r\n     }\r\n \r\n     protected onUpdate() {\r\n"
                },
                {
                    "date": 1624020157502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -836,17 +836,17 @@\n         this.x = this.data.x;\r\n         let tempX = this.x;\r\n         this.y = 300;\r\n         this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n+        cc.tween(this)\r\n+            .to(this.data.speed, { x: tempX, y: 970 })\r\n+            .call(() => {\r\n+                this.y = 100;\r\n+                this.visible = false;\r\n+                this.data.isShow = false;\r\n \r\n-        //     })\r\n-        //     .start();\r\n+            })\r\n+            .start();\r\n \r\n         return item;\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624020164120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -836,17 +836,17 @@\n         this.x = this.data.x;\r\n         let tempX = this.x;\r\n         this.y = 300;\r\n         this.visible = true;\r\n-        cc.tween(this)\r\n-            .to(this.data.speed, { x: tempX, y: 970 })\r\n-            .call(() => {\r\n-                this.y = 100;\r\n-                this.visible = false;\r\n-                this.data.isShow = false;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n \r\n-            })\r\n-            .start();\r\n+        //     })\r\n+        //     .start();\r\n \r\n         return item;\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624020201069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -830,9 +830,9 @@\n \r\n         super();\r\n \r\n         let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-        foodData.data = foodData;\r\n+        item.data = foodData;\r\n \r\n         this.x = this.data.x;\r\n         let tempX = this.x;\r\n         this.y = 300;\r\n"
                },
                {
                    "date": 1624020216229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -832,12 +832,12 @@\n \r\n         let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n         item.data = foodData;\r\n \r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n+        item.x = item.data.x;\r\n+        let tempX = item.x;\r\n+        item.y = 300;\r\n+        item.visible = true;\r\n         // cc.tween(this)\r\n         //     .to(this.data.speed, { x: tempX, y: 970 })\r\n         //     .call(() => {\r\n         //         this.y = 100;\r\n"
                },
                {
                    "date": 1624020221940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,891 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            //food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+        super();\r\n+\r\n+        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        item.data = foodData;\r\n+\r\n+        item.x = item.data.x;\r\n+        let tempX = item.x;\r\n+        item.y = 300;\r\n+        item.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        return item;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // console.log('==== onUpdate ====');\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624020258027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -836,909 +836,18 @@\n         item.x = item.data.x;\r\n         let tempX = item.x;\r\n         item.y = 300;\r\n         item.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        return item;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // console.log('==== onUpdate ====');\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            //food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n         cc.tween(this)\r\n-            .delay(0.5)\r\n+            .to(this.data.speed, { x: tempX, y: 970 })\r\n             .call(() => {\r\n+                this.y = 100;\r\n+                this.visible = false;\r\n+                this.data.isShow = false;\r\n \r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n             })\r\n             .start();\r\n \r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-        super();\r\n-\r\n-        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-        item.data = foodData;\r\n-\r\n-        item.x = item.data.x;\r\n-        let tempX = item.x;\r\n-        item.y = 300;\r\n-        item.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n         return item;\r\n     }\r\n \r\n     protected onUpdate() {\r\n"
                },
                {
                    "date": 1624020270145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -836,10 +836,10 @@\n         item.x = item.data.x;\r\n         let tempX = item.x;\r\n         item.y = 300;\r\n         item.visible = true;\r\n-        cc.tween(this)\r\n-            .to(this.data.speed, { x: tempX, y: 970 })\r\n+        cc.tween(item)\r\n+            .to(this.data.speed, { x: item.x, y: 970 })\r\n             .call(() => {\r\n                 this.y = 100;\r\n                 this.visible = false;\r\n                 this.data.isShow = false;\r\n"
                },
                {
                    "date": 1624020283332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -834,9 +834,9 @@\n         item.data = foodData;\r\n \r\n         item.x = item.data.x;\r\n         let tempX = item.x;\r\n-        item.y = 300;\r\n+        item.y = 100;\r\n         item.visible = true;\r\n         cc.tween(item)\r\n             .to(this.data.speed, { x: item.x, y: 970 })\r\n             .call(() => {\r\n"
                },
                {
                    "date": 1624020303912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -851,10 +851,10 @@\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n-        // console.log('==== onUpdate ====');\r\n \r\n+\r\n     }\r\n \r\n     protected onDestroy() {\r\n \r\n"
                },
                {
                    "date": 1624020323690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -851,10 +851,10 @@\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n+        this.y--;\r\n \r\n-\r\n     }\r\n \r\n     protected onDestroy() {\r\n \r\n"
                },
                {
                    "date": 1624020330709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -851,9 +851,9 @@\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n-        this.y--;\r\n+        this.y -= ;\r\n \r\n     }\r\n \r\n     protected onDestroy() {\r\n"
                },
                {
                    "date": 1624020338987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -849,11 +849,11 @@\n \r\n         return item;\r\n     }\r\n \r\n-    protected onUpdate() {\r\n+    protected onUpdate(dt) {\r\n \r\n-        this.y -= ;\r\n+        this.y -= 1;\r\n \r\n     }\r\n \r\n     protected onDestroy() {\r\n"
                },
                {
                    "date": 1624020344362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -849,11 +849,11 @@\n \r\n         return item;\r\n     }\r\n \r\n-    protected onUpdate(dt) {\r\n+    protected onUpdate() {\r\n \r\n-        this.y -= 1;\r\n+        this.y -= 0.1;\r\n \r\n     }\r\n \r\n     protected onDestroy() {\r\n"
                },
                {
                    "date": 1624020369619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -851,9 +851,9 @@\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n-        this.y -= 0.1;\r\n+        this.y -= this.data.speed;\r\n \r\n     }\r\n \r\n     protected onDestroy() {\r\n"
                },
                {
                    "date": 1624020383917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -851,9 +851,9 @@\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n-        this.y -= this.data.speed;\r\n+        this.y -= this.data.speed * 0.01;\r\n \r\n     }\r\n \r\n     protected onDestroy() {\r\n"
                },
                {
                    "date": 1624020407738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -852,9 +852,13 @@\n \r\n     protected onUpdate() {\r\n \r\n         this.y -= this.data.speed * 0.01;\r\n+        if (this.y >= 970) {\r\n \r\n+\r\n+        }\r\n+\r\n     }\r\n \r\n     protected onDestroy() {\r\n \r\n"
                },
                {
                    "date": 1624020413383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -854,8 +854,11 @@\n \r\n         this.y -= this.data.speed * 0.01;\r\n         if (this.y >= 970) {\r\n \r\n+            this.y = 100;\r\n+            this.visible = false;\r\n+            this.data.isShow = false;\r\n \r\n         }\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624020436400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,898 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 60 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let isFail = false;\r\n+            for (var key in state.rigthTotal) {\r\n+\r\n+                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+                if (state.rigthTotal[key].percent <= 0.5) {\r\n+                    isFail = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+            if (isFail) {\r\n+\r\n+                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+            } else {\r\n+\r\n+                state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+            }\r\n+            this._gameTime = 0;\r\n+            state.gameTime = this._gameTime;\r\n+            state.gameOver = true;\r\n+            this.updateState(state);\r\n+            return;\r\n+        }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            //food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+        super();\r\n+\r\n+        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        item.data = foodData;\r\n+\r\n+        item.x = item.data.x;\r\n+        let tempX = item.x;\r\n+        item.y = 100;\r\n+        item.visible = true;\r\n+        cc.tween(item)\r\n+            .to(this.data.speed, { x: item.x, y: 970 })\r\n+            .call(() => {\r\n+                this.y = 100;\r\n+                this.visible = false;\r\n+                this.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        return item;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        this.y -= this.data.speed * 0.01;\r\n+        if (this.y >= 970) {\r\n+\r\n+            this.y = 100;\r\n+            this.visible = false;\r\n+            this.data.isShow = false;\r\n+\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624020436681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -895,902 +895,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n-\r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-            if (isFail) {\r\n-\r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-            } else {\r\n-\r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            //food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-        super();\r\n-\r\n-        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-        item.data = foodData;\r\n-\r\n-        item.x = item.data.x;\r\n-        let tempX = item.x;\r\n-        item.y = 100;\r\n-        item.visible = true;\r\n-        cc.tween(item)\r\n-            .to(this.data.speed, { x: item.x, y: 970 })\r\n-            .call(() => {\r\n-                this.y = 100;\r\n-                this.visible = false;\r\n-                this.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        return item;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        this.y -= this.data.speed * 0.01;\r\n-        if (this.y >= 970) {\r\n-\r\n-            this.y = 100;\r\n-            this.visible = false;\r\n-            this.data.isShow = false;\r\n-\r\n-        }\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624020450440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -836,24 +836,24 @@\n         item.x = item.data.x;\r\n         let tempX = item.x;\r\n         item.y = 100;\r\n         item.visible = true;\r\n-        cc.tween(item)\r\n-            .to(this.data.speed, { x: item.x, y: 970 })\r\n-            .call(() => {\r\n-                this.y = 100;\r\n-                this.visible = false;\r\n-                this.data.isShow = false;\r\n+        // cc.tween(item)\r\n+        //     .to(this.data.speed, { x: item.x, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n \r\n-            })\r\n-            .start();\r\n+        //     })\r\n+        //     .start();\r\n \r\n         return item;\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n-        this.y -= this.data.speed * 0.01;\r\n+        this.y += this.data.speed * 0.01;\r\n         if (this.y >= 970) {\r\n \r\n             this.y = 100;\r\n             this.visible = false;\r\n"
                },
                {
                    "date": 1624020495344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -836,31 +836,31 @@\n         item.x = item.data.x;\r\n         let tempX = item.x;\r\n         item.y = 100;\r\n         item.visible = true;\r\n-        // cc.tween(item)\r\n-        //     .to(this.data.speed, { x: item.x, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n+        cc.tween(item)\r\n+            .to(this.data.speed, { x: item.x, y: 970 })\r\n+            .call(() => {\r\n+                this.y = 100;\r\n+                this.visible = false;\r\n+                this.data.isShow = false;\r\n \r\n-        //     })\r\n-        //     .start();\r\n+            })\r\n+            .start();\r\n \r\n         return item;\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n-        this.y += this.data.speed * 0.01;\r\n-        if (this.y >= 970) {\r\n+        // this.y += this.data.speed * 0.01;\r\n+        // if (this.y >= 970) {\r\n \r\n-            this.y = 100;\r\n-            this.visible = false;\r\n-            this.data.isShow = false;\r\n+        //     this.y = 100;\r\n+        //     this.visible = false;\r\n+        //     this.data.isShow = false;\r\n \r\n-        }\r\n+        // }\r\n \r\n     }\r\n \r\n     protected onDestroy() {\r\n"
                },
                {
                    "date": 1624020592439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -433,9 +433,9 @@\n                     let state1: any = globalThis._.cloneDeep(this._state);\r\n                     let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                     let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n \r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX };\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n                     this._foodTag++;\r\n                     state1.gameFoodData = temp;\r\n                     state1.foodTag = this._foodTag;\r\n                     this.updateState(state1);\r\n"
                },
                {
                    "date": 1624020697743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -837,9 +837,9 @@\n         let tempX = item.x;\r\n         item.y = 100;\r\n         item.visible = true;\r\n         cc.tween(item)\r\n-            .to(this.data.speed, { x: item.x, y: 970 })\r\n+            .to(item.data.speed, { x: item.x, y: 970 })\r\n             .call(() => {\r\n                 this.y = 100;\r\n                 this.visible = false;\r\n                 this.data.isShow = false;\r\n"
                },
                {
                    "date": 1624020703274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -839,11 +839,11 @@\n         item.visible = true;\r\n         cc.tween(item)\r\n             .to(item.data.speed, { x: item.x, y: 970 })\r\n             .call(() => {\r\n-                this.y = 100;\r\n-                this.visible = false;\r\n-                this.data.isShow = false;\r\n+                item.y = 100;\r\n+                item.visible = false;\r\n+                item.data.isShow = false;\r\n \r\n             })\r\n             .start();\r\n \r\n"
                },
                {
                    "date": 1624020768069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     private _gameTime: number = 0;\r\n \r\n     private _interTime: number = 0;\r\n \r\n-    private _interTimeLimit: number = 60 * 1.0;\r\n+    private _interTimeLimit: number = 20 * 1.0;\r\n \r\n     /** 我自己的对象池 */\r\n     private myFoodPools: any = [];\r\n \r\n"
                },
                {
                    "date": 1624020875470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n     private _gameTime: number = 0;\r\n \r\n     private _interTime: number = 0;\r\n \r\n-    private _interTimeLimit: number = 20 * 1.0;\r\n+    private _interTimeLimit: number = 10 * 1.0;\r\n \r\n     /** 我自己的对象池 */\r\n     private myFoodPools: any = [];\r\n \r\n"
                },
                {
                    "date": 1624021021775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -359,8 +359,10 @@\n \r\n         let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n         let btn = obj.asButton;\r\n         state.clickFoodTag = btn.data.tag;\r\n+\r\n+        console.log('=== ===' + btn.data.tag);\r\n         this.updateState(state);\r\n \r\n     }\r\n \r\n"
                },
                {
                    "date": 1624021029929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -360,9 +360,9 @@\n         let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n         let btn = obj.asButton;\r\n         state.clickFoodTag = btn.data.tag;\r\n \r\n-        console.log('=== ===' + btn.data.tag);\r\n+        console.log('=== clickFoodTag ===' + btn.data.tag);\r\n         this.updateState(state);\r\n \r\n     }\r\n \r\n"
                },
                {
                    "date": 1624021087452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -236,38 +236,38 @@\n             this.unschedule(this.updateAdd);\r\n             return;\r\n         }\r\n         this._gameTime++;\r\n-        if (this._gameTime >= this._framesSecond * 15) {\r\n+        // if (this._gameTime >= this._framesSecond * 15) {\r\n \r\n-            this.unschedule(this.updateAdd);\r\n+        //     this.unschedule(this.updateAdd);\r\n \r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let isFail = false;\r\n-            for (var key in state.rigthTotal) {\r\n+        //     let state: any = globalThis._.cloneDeep(this._state);\r\n+        //     let isFail = false;\r\n+        //     for (var key in state.rigthTotal) {\r\n \r\n-                state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-                if (state.rigthTotal[key].percent <= 0.5) {\r\n-                    isFail = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n+        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n+        //             isFail = true;\r\n+        //             break;\r\n+        //         }\r\n+        //     }\r\n \r\n-            if (isFail) {\r\n+        //     if (isFail) {\r\n \r\n-                state.submitFeedback = this.feedbackType.WrongFeed;\r\n+        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n \r\n-            } else {\r\n+        //     } else {\r\n \r\n-                state.submitFeedback = this.feedbackType.RightFeed;\r\n+        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n \r\n-            }\r\n-            this._gameTime = 0;\r\n-            state.gameTime = this._gameTime;\r\n-            state.gameOver = true;\r\n-            this.updateState(state);\r\n-            return;\r\n-        }\r\n+        //     }\r\n+        //     this._gameTime = 0;\r\n+        //     state.gameTime = this._gameTime;\r\n+        //     state.gameOver = true;\r\n+        //     this.updateState(state);\r\n+        //     return;\r\n+        // }\r\n \r\n         this._interTime++;\r\n \r\n         if (this._interTime >= this._interTimeLimit) {\r\n"
                },
                {
                    "date": 1624021188452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -360,9 +360,9 @@\n         let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n         let btn = obj.asButton;\r\n         state.clickFoodTag = btn.data.tag;\r\n \r\n-        console.log('=== clickFoodTag ===' + btn.data.tag);\r\n+\r\n         this.updateState(state);\r\n \r\n     }\r\n \r\n@@ -535,8 +535,11 @@\n                             for (let i = 0; i < this.myFoodPools.length; i++) {\r\n                                 if (this.myFoodPools[i] === btn) {\r\n                                     this.myFoodPools.splice(i, 1);\r\n                                     btn.removeFromParent();\r\n+\r\n+                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n+\r\n                                     break;\r\n                                 }\r\n                             }\r\n \r\n"
                },
                {
                    "date": 1624021201285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -538,8 +538,9 @@\n                                     btn.removeFromParent();\r\n \r\n                                     console.log('=== clickFoodTag ===' + btn.data.tag);\r\n \r\n+                                    console.log(this.myFoodPools);\r\n                                     break;\r\n                                 }\r\n                             }\r\n \r\n"
                },
                {
                    "date": 1624021201552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,904 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 10 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        // if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+        //     this.unschedule(this.updateAdd);\r\n+\r\n+        //     let state: any = globalThis._.cloneDeep(this._state);\r\n+        //     let isFail = false;\r\n+        //     for (var key in state.rigthTotal) {\r\n+\r\n+        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n+        //             isFail = true;\r\n+        //             break;\r\n+        //         }\r\n+        //     }\r\n+\r\n+        //     if (isFail) {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+        //     } else {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+        //     }\r\n+        //     this._gameTime = 0;\r\n+        //     state.gameTime = this._gameTime;\r\n+        //     state.gameOver = true;\r\n+        //     this.updateState(state);\r\n+        //     return;\r\n+        // }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            //food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+\r\n+\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+\r\n+                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n+\r\n+                                    console.log(this.myFoodPools);\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+        super();\r\n+\r\n+        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        item.data = foodData;\r\n+\r\n+        item.x = item.data.x;\r\n+        let tempX = item.x;\r\n+        item.y = 100;\r\n+        item.visible = true;\r\n+        cc.tween(item)\r\n+            .to(item.data.speed, { x: item.x, y: 970 })\r\n+            .call(() => {\r\n+                item.y = 100;\r\n+                item.visible = false;\r\n+                item.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        return item;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // this.y += this.data.speed * 0.01;\r\n+        // if (this.y >= 970) {\r\n+\r\n+        //     this.y = 100;\r\n+        //     this.visible = false;\r\n+        //     this.data.isShow = false;\r\n+\r\n+        // }\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624021337520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,8 +311,10 @@\n     }\r\n \r\n     private foodDropAnimate(state: any, foodData) {\r\n \r\n+        console.log('====== ======' + foodData);\r\n+\r\n         let isHave = false;\r\n         let food = null;\r\n         for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n@@ -539,912 +541,9 @@\n \r\n                                     console.log('=== clickFoodTag ===' + btn.data.tag);\r\n \r\n                                     console.log(this.myFoodPools);\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n \r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-        super();\r\n-\r\n-        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-        item.data = foodData;\r\n-\r\n-        item.x = item.data.x;\r\n-        let tempX = item.x;\r\n-        item.y = 100;\r\n-        item.visible = true;\r\n-        cc.tween(item)\r\n-            .to(item.data.speed, { x: item.x, y: 970 })\r\n-            .call(() => {\r\n-                item.y = 100;\r\n-                item.visible = false;\r\n-                item.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        return item;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // this.y += this.data.speed * 0.01;\r\n-        // if (this.y >= 970) {\r\n-\r\n-        //     this.y = 100;\r\n-        //     this.visible = false;\r\n-        //     this.data.isShow = false;\r\n-\r\n-        // }\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 10 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        // if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-        //     this.unschedule(this.updateAdd);\r\n-\r\n-        //     let state: any = globalThis._.cloneDeep(this._state);\r\n-        //     let isFail = false;\r\n-        //     for (var key in state.rigthTotal) {\r\n-\r\n-        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n-        //             isFail = true;\r\n-        //             break;\r\n-        //         }\r\n-        //     }\r\n-\r\n-        //     if (isFail) {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-        //     } else {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-        //     }\r\n-        //     this._gameTime = 0;\r\n-        //     state.gameTime = this._gameTime;\r\n-        //     state.gameOver = true;\r\n-        //     this.updateState(state);\r\n-        //     return;\r\n-        // }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            //food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-\r\n-\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-\r\n-                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n-\r\n-                                    console.log(this.myFoodPools);\r\n                                     break;\r\n                                 }\r\n                             }\r\n \r\n"
                },
                {
                    "date": 1624021350079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,907 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 10 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        // if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+        //     this.unschedule(this.updateAdd);\r\n+\r\n+        //     let state: any = globalThis._.cloneDeep(this._state);\r\n+        //     let isFail = false;\r\n+        //     for (var key in state.rigthTotal) {\r\n+\r\n+        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n+        //             isFail = true;\r\n+        //             break;\r\n+        //         }\r\n+        //     }\r\n+\r\n+        //     if (isFail) {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+        //     } else {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+        //     }\r\n+        //     this._gameTime = 0;\r\n+        //     state.gameTime = this._gameTime;\r\n+        //     state.gameOver = true;\r\n+        //     this.updateState(state);\r\n+        //     return;\r\n+        // }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        console.log('====== foodData ======' + foodData.tag);\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            //food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+\r\n+\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+\r\n+                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n+\r\n+                                    console.log(this.myFoodPools);\r\n+\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+        super();\r\n+\r\n+        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        item.data = foodData;\r\n+\r\n+        item.x = item.data.x;\r\n+        let tempX = item.x;\r\n+        item.y = 100;\r\n+        item.visible = true;\r\n+        cc.tween(item)\r\n+            .to(item.data.speed, { x: item.x, y: 970 })\r\n+            .call(() => {\r\n+                item.y = 100;\r\n+                item.visible = false;\r\n+                item.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        return item;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // this.y += this.data.speed * 0.01;\r\n+        // if (this.y >= 970) {\r\n+\r\n+        //     this.y = 100;\r\n+        //     this.visible = false;\r\n+        //     this.data.isShow = false;\r\n+\r\n+        // }\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624021350354,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -904,911 +904,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 10 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        // if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-        //     this.unschedule(this.updateAdd);\r\n-\r\n-        //     let state: any = globalThis._.cloneDeep(this._state);\r\n-        //     let isFail = false;\r\n-        //     for (var key in state.rigthTotal) {\r\n-\r\n-        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n-        //             isFail = true;\r\n-        //             break;\r\n-        //         }\r\n-        //     }\r\n-\r\n-        //     if (isFail) {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-        //     } else {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-        //     }\r\n-        //     this._gameTime = 0;\r\n-        //     state.gameTime = this._gameTime;\r\n-        //     state.gameOver = true;\r\n-        //     this.updateState(state);\r\n-        //     return;\r\n-        // }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        console.log('====== ======' + foodData);\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            //food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-\r\n-\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-\r\n-                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n-\r\n-                                    console.log(this.myFoodPools);\r\n-\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-        super();\r\n-\r\n-        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-        item.data = foodData;\r\n-\r\n-        item.x = item.data.x;\r\n-        let tempX = item.x;\r\n-        item.y = 100;\r\n-        item.visible = true;\r\n-        cc.tween(item)\r\n-            .to(item.data.speed, { x: item.x, y: 970 })\r\n-            .call(() => {\r\n-                item.y = 100;\r\n-                item.visible = false;\r\n-                item.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        return item;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // this.y += this.data.speed * 0.01;\r\n-        // if (this.y >= 970) {\r\n-\r\n-        //     this.y = 100;\r\n-        //     this.visible = false;\r\n-        //     this.data.isShow = false;\r\n-\r\n-        // }\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624021357886,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,9 +311,9 @@\n     }\r\n \r\n     private foodDropAnimate(state: any, foodData) {\r\n \r\n-        console.log('====== foodData ======' + foodData.tag);\r\n+        console.log('====== foodData tag======' + foodData.tag);\r\n \r\n         let isHave = false;\r\n         let food = null;\r\n         for (let i = 0; i < this.myFoodPools.length; i++) {\r\n"
                },
                {
                    "date": 1624021410086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -311,9 +311,10 @@\n     }\r\n \r\n     private foodDropAnimate(state: any, foodData) {\r\n \r\n-        console.log('====== foodData tag======' + foodData.tag);\r\n+        console.log('====== foodData ======' + foodData.tag);\r\n+        console.log('====== foodData ======' + foodData.tag);\r\n \r\n         let isHave = false;\r\n         let food = null;\r\n         for (let i = 0; i < this.myFoodPools.length; i++) {\r\n"
                },
                {
                    "date": 1624021415875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n \r\n     private foodDropAnimate(state: any, foodData) {\r\n \r\n         console.log('====== foodData ======' + foodData.tag);\r\n-        console.log('====== foodData ======' + foodData.tag);\r\n+        console.log('====== foodData ======' + foodData);\r\n \r\n         let isHave = false;\r\n         let food = null;\r\n         for (let i = 0; i < this.myFoodPools.length; i++) {\r\n"
                },
                {
                    "date": 1624021448191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -312,9 +312,9 @@\n \r\n     private foodDropAnimate(state: any, foodData) {\r\n \r\n         console.log('====== foodData ======' + foodData.tag);\r\n-        console.log('====== foodData ======' + foodData);\r\n+        console.log(foodData);\r\n \r\n         let isHave = false;\r\n         let food = null;\r\n         for (let i = 0; i < this.myFoodPools.length; i++) {\r\n"
                },
                {
                    "date": 1624021562525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -849,8 +849,9 @@\n         item.visible = true;\r\n         cc.tween(item)\r\n             .to(item.data.speed, { x: item.x, y: 970 })\r\n             .call(() => {\r\n+                console.log('==== call ====');\r\n                 item.y = 100;\r\n                 item.visible = false;\r\n                 item.data.isShow = false;\r\n \r\n"
                },
                {
                    "date": 1624021569453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -850,8 +850,9 @@\n         cc.tween(item)\r\n             .to(item.data.speed, { x: item.x, y: 970 })\r\n             .call(() => {\r\n                 console.log('==== call ====');\r\n+                console.log('==== call ====');\r\n                 item.y = 100;\r\n                 item.visible = false;\r\n                 item.data.isShow = false;\r\n \r\n"
                },
                {
                    "date": 1624021575369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,910 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 10 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        // if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+        //     this.unschedule(this.updateAdd);\r\n+\r\n+        //     let state: any = globalThis._.cloneDeep(this._state);\r\n+        //     let isFail = false;\r\n+        //     for (var key in state.rigthTotal) {\r\n+\r\n+        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n+        //             isFail = true;\r\n+        //             break;\r\n+        //         }\r\n+        //     }\r\n+\r\n+        //     if (isFail) {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+        //     } else {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+        //     }\r\n+        //     this._gameTime = 0;\r\n+        //     state.gameTime = this._gameTime;\r\n+        //     state.gameOver = true;\r\n+        //     this.updateState(state);\r\n+        //     return;\r\n+        // }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        console.log('====== foodData ======' + foodData.tag);\r\n+        console.log(foodData);\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            //food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+\r\n+\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+\r\n+                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n+\r\n+                                    console.log(this.myFoodPools);\r\n+\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+        super();\r\n+\r\n+        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        item.data = foodData;\r\n+\r\n+        item.x = item.data.x;\r\n+        let tempX = item.x;\r\n+        item.y = 100;\r\n+        item.visible = true;\r\n+        cc.tween(item)\r\n+            .to(item.data.speed, { x: item.x, y: 970 })\r\n+            .call(() => {\r\n+                console.log('==== call ====');\r\n+                console.log(item);\r\n+                item.y = 100;\r\n+                item.visible = false;\r\n+                item.data.isShow = false;\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        return item;\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // this.y += this.data.speed * 0.01;\r\n+        // if (this.y >= 970) {\r\n+\r\n+        //     this.y = 100;\r\n+        //     this.visible = false;\r\n+        //     this.data.isShow = false;\r\n+\r\n+        // }\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624021581050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -907,914 +907,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 10 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        // if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-        //     this.unschedule(this.updateAdd);\r\n-\r\n-        //     let state: any = globalThis._.cloneDeep(this._state);\r\n-        //     let isFail = false;\r\n-        //     for (var key in state.rigthTotal) {\r\n-\r\n-        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n-        //             isFail = true;\r\n-        //             break;\r\n-        //         }\r\n-        //     }\r\n-\r\n-        //     if (isFail) {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-        //     } else {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-        //     }\r\n-        //     this._gameTime = 0;\r\n-        //     state.gameTime = this._gameTime;\r\n-        //     state.gameOver = true;\r\n-        //     this.updateState(state);\r\n-        //     return;\r\n-        // }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        console.log('====== foodData ======' + foodData.tag);\r\n-        console.log(foodData);\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            //food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-\r\n-\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-\r\n-                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n-\r\n-                                    console.log(this.myFoodPools);\r\n-\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-        super();\r\n-\r\n-        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-        item.data = foodData;\r\n-\r\n-        item.x = item.data.x;\r\n-        let tempX = item.x;\r\n-        item.y = 100;\r\n-        item.visible = true;\r\n-        cc.tween(item)\r\n-            .to(item.data.speed, { x: item.x, y: 970 })\r\n-            .call(() => {\r\n-                console.log('==== call ====');\r\n-                console.log('==== call ====');\r\n-                item.y = 100;\r\n-                item.visible = false;\r\n-                item.data.isShow = false;\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        return item;\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // this.y += this.data.speed * 0.01;\r\n-        // if (this.y >= 970) {\r\n-\r\n-        //     this.y = 100;\r\n-        //     this.visible = false;\r\n-        //     this.data.isShow = false;\r\n-\r\n-        // }\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624021762478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -849,13 +849,14 @@\n         item.visible = true;\r\n         cc.tween(item)\r\n             .to(item.data.speed, { x: item.x, y: 970 })\r\n             .call(() => {\r\n-                console.log('==== call ====');\r\n+\r\n                 console.log(item);\r\n                 item.y = 100;\r\n                 item.visible = false;\r\n                 item.data.isShow = false;\r\n+                console.log('==== call ====');\r\n \r\n             })\r\n             .start();\r\n \r\n"
                },
                {
                    "date": 1624021768858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -850,13 +850,14 @@\n         cc.tween(item)\r\n             .to(item.data.speed, { x: item.x, y: 970 })\r\n             .call(() => {\r\n \r\n-                console.log(item);\r\n+\r\n                 item.y = 100;\r\n                 item.visible = false;\r\n                 item.data.isShow = false;\r\n                 console.log('==== call ====');\r\n+                console.log(item);\r\n \r\n             })\r\n             .start();\r\n \r\n"
                },
                {
                    "date": 1624021777717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -850,9 +850,8 @@\n         cc.tween(item)\r\n             .to(item.data.speed, { x: item.x, y: 970 })\r\n             .call(() => {\r\n \r\n-\r\n                 item.y = 100;\r\n                 item.visible = false;\r\n                 item.data.isShow = false;\r\n                 console.log('==== call ====');\r\n"
                },
                {
                    "date": 1624021819261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -851,9 +851,9 @@\n             .to(item.data.speed, { x: item.x, y: 970 })\r\n             .call(() => {\r\n \r\n                 item.y = 100;\r\n-                item.visible = false;\r\n+                // item.visible = false;\r\n                 item.data.isShow = false;\r\n                 console.log('==== call ====');\r\n                 console.log(item);\r\n \r\n"
                },
                {
                    "date": 1624021838745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -850,9 +850,9 @@\n         cc.tween(item)\r\n             .to(item.data.speed, { x: item.x, y: 970 })\r\n             .call(() => {\r\n \r\n-                item.y = 100;\r\n+                item.y = 300;\r\n                 // item.visible = false;\r\n                 item.data.isShow = false;\r\n                 console.log('==== call ====');\r\n                 console.log(item);\r\n"
                },
                {
                    "date": 1624021957009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -862,8 +862,12 @@\n \r\n         return item;\r\n     }\r\n \r\n+    test() {\r\n+\r\n+    }\r\n+\r\n     protected onUpdate() {\r\n \r\n         // this.y += this.data.speed * 0.01;\r\n         // if (this.y >= 970) {\r\n"
                },
                {
                    "date": 1624021965892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -864,8 +864,11 @@\n     }\r\n \r\n     test() {\r\n \r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624021972631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -864,11 +864,10 @@\n     }\r\n \r\n     test() {\r\n \r\n-        console.log('==== 111111 myFood 2222222====');\r\n+        console.log('==== 111111 test 2222222====');\r\n \r\n-\r\n     }\r\n \r\n     protected onUpdate() {\r\n \r\n"
                },
                {
                    "date": 1624022012374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,8 +321,9 @@\n \r\n             if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n                 isHave = true;\r\n                 food = this.myFoodPools[i];\r\n+                food.test();\r\n                 break;\r\n             }\r\n         }\r\n \r\n"
                },
                {
                    "date": 1624022088484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -863,9 +863,9 @@\n \r\n         return item;\r\n     }\r\n \r\n-    test() {\r\n+    private test() {\r\n \r\n         console.log('==== 111111 test 2222222====');\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624022132392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -863,9 +863,9 @@\n \r\n         return item;\r\n     }\r\n \r\n-    private test() {\r\n+    public test() {\r\n \r\n         console.log('==== 111111 test 2222222====');\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624022275902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,918 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 10 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        // if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+        //     this.unschedule(this.updateAdd);\r\n+\r\n+        //     let state: any = globalThis._.cloneDeep(this._state);\r\n+        //     let isFail = false;\r\n+        //     for (var key in state.rigthTotal) {\r\n+\r\n+        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n+        //             isFail = true;\r\n+        //             break;\r\n+        //         }\r\n+        //     }\r\n+\r\n+        //     if (isFail) {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+        //     } else {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+        //     }\r\n+        //     this._gameTime = 0;\r\n+        //     state.gameTime = this._gameTime;\r\n+        //     state.gameOver = true;\r\n+        //     this.updateState(state);\r\n+        //     return;\r\n+        // }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        console.log('====== foodData ======' + foodData.tag);\r\n+        console.log(foodData);\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+                food.test();\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            //food.data = foodData;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+\r\n+\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+\r\n+                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n+\r\n+                                    console.log(this.myFoodPools);\r\n+\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+        super();\r\n+\r\n+        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        item.data = foodData;\r\n+\r\n+        item.x = item.data.x;\r\n+        let tempX = item.x;\r\n+        item.y = 100;\r\n+        item.visible = true;\r\n+        cc.tween(item)\r\n+            .to(item.data.speed, { x: item.x, y: 970 })\r\n+            .call(() => {\r\n+\r\n+                item.y = 300;\r\n+                // item.visible = false;\r\n+                item.data.isShow = false;\r\n+                console.log('==== call ====');\r\n+                console.log(item);\r\n+\r\n+            })\r\n+            .start();\r\n+\r\n+        return item;\r\n+    }\r\n+\r\n+    protected onInit(): void {\r\n+\r\n+        console.log('==== 111111 test 2222222====');\r\n+\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // this.y += this.data.speed * 0.01;\r\n+        // if (this.y >= 970) {\r\n+\r\n+        //     this.y = 100;\r\n+        //     this.visible = false;\r\n+        //     this.data.isShow = false;\r\n+\r\n+        // }\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624022276206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -915,922 +915,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 10 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        // if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-        //     this.unschedule(this.updateAdd);\r\n-\r\n-        //     let state: any = globalThis._.cloneDeep(this._state);\r\n-        //     let isFail = false;\r\n-        //     for (var key in state.rigthTotal) {\r\n-\r\n-        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n-        //             isFail = true;\r\n-        //             break;\r\n-        //         }\r\n-        //     }\r\n-\r\n-        //     if (isFail) {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-        //     } else {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-        //     }\r\n-        //     this._gameTime = 0;\r\n-        //     state.gameTime = this._gameTime;\r\n-        //     state.gameOver = true;\r\n-        //     this.updateState(state);\r\n-        //     return;\r\n-        // }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        console.log('====== foodData ======' + foodData.tag);\r\n-        console.log(foodData);\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-                food.test();\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            //food.data = foodData;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-\r\n-\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-\r\n-                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n-\r\n-                                    console.log(this.myFoodPools);\r\n-\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-        super();\r\n-\r\n-        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-        item.data = foodData;\r\n-\r\n-        item.x = item.data.x;\r\n-        let tempX = item.x;\r\n-        item.y = 100;\r\n-        item.visible = true;\r\n-        cc.tween(item)\r\n-            .to(item.data.speed, { x: item.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                item.y = 300;\r\n-                // item.visible = false;\r\n-                item.data.isShow = false;\r\n-                console.log('==== call ====');\r\n-                console.log(item);\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        return item;\r\n-    }\r\n-\r\n-    public test() {\r\n-\r\n-        console.log('==== 111111 test 2222222====');\r\n-\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // this.y += this.data.speed * 0.01;\r\n-        // if (this.y >= 970) {\r\n-\r\n-        //     this.y = 100;\r\n-        //     this.visible = false;\r\n-        //     this.data.isShow = false;\r\n-\r\n-        // }\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624022284902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -863,9 +863,9 @@\n \r\n         return item;\r\n     }\r\n \r\n-    protected onInit(): void {\r\n+    protected test(): void {\r\n \r\n         console.log('==== 111111 test 2222222====');\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624022324749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -863,9 +863,9 @@\n \r\n         return item;\r\n     }\r\n \r\n-    protected test(): void {\r\n+    public test(): void {\r\n \r\n         console.log('==== 111111 test 2222222====');\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624022570283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,8 +321,9 @@\n \r\n             if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n                 isHave = true;\r\n                 food = this.myFoodPools[i];\r\n+                food = food as MyDropFood;\r\n                 food.test();\r\n                 break;\r\n             }\r\n         }\r\n"
                },
                {
                    "date": 1624022674133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,18 +321,17 @@\n \r\n             if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n                 isHave = true;\r\n                 food = this.myFoodPools[i];\r\n-                food = food as MyDropFood;\r\n-                food.test();\r\n+\r\n                 break;\r\n             }\r\n         }\r\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            //food.data = foodData;\r\n+            food.test();\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n@@ -864,9 +863,9 @@\n \r\n         return item;\r\n     }\r\n \r\n-    public test(): void {\r\n+    public testHHHH(): void {\r\n \r\n         console.log('==== 111111 test 2222222====');\r\n \r\n     }\r\n"
                },
                {
                    "date": 1624022791239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,9 +329,9 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            food.test();\r\n+            food.testHHHH();\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n"
                },
                {
                    "date": 1624022869574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -840,9 +840,9 @@\n     constructor(pkgName: string, resName: string, foodData: any) {\r\n \r\n         super();\r\n \r\n-        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+        let item = fgui.UIPackage.createObject(pkgName, resName);\r\n         item.data = foodData;\r\n \r\n         item.x = item.data.x;\r\n         let tempX = item.x;\r\n"
                },
                {
                    "date": 1624022882525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -840,9 +840,9 @@\n     constructor(pkgName: string, resName: string, foodData: any) {\r\n \r\n         super();\r\n \r\n-        let item = fgui.UIPackage.createObject(pkgName, resName);\r\n+        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n         item.data = foodData;\r\n \r\n         item.x = item.data.x;\r\n         let tempX = item.x;\r\n"
                },
                {
                    "date": 1624023608563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,9 +329,10 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            food.testHHHH();\r\n+            console.log('===== test ===' + );\r\n+            food.data.index;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n"
                },
                {
                    "date": 1624023616625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,10 +329,10 @@\n \r\n         if (!isHave) {\r\n \r\n             food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            console.log('===== test ===' + );\r\n-            food.data.index;\r\n+            console.log('===== test index ===' + food.data.index);\r\n+\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n"
                },
                {
                    "date": 1624023735007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -864,8 +864,12 @@\n \r\n         return item;\r\n     }\r\n \r\n+    protected testHHHH(): void {\r\n+\r\n+    }\r\n+\r\n     public testHHHH(): void {\r\n \r\n         console.log('==== 111111 test 2222222====');\r\n \r\n"
                },
                {
                    "date": 1624023743740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -866,12 +866,8 @@\n     }\r\n \r\n     protected testHHHH(): void {\r\n \r\n-    }\r\n-\r\n-    public testHHHH(): void {\r\n-\r\n         console.log('==== 111111 test 2222222====');\r\n \r\n     }\r\n \r\n"
                },
                {
                    "date": 1624023759906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -331,8 +331,10 @@\n \r\n             food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n             console.log('===== test index ===' + food.data.index);\r\n \r\n+            food.testHHHH();\r\n+\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n"
                },
                {
                    "date": 1624023803852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,922 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 10 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        // if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+        //     this.unschedule(this.updateAdd);\r\n+\r\n+        //     let state: any = globalThis._.cloneDeep(this._state);\r\n+        //     let isFail = false;\r\n+        //     for (var key in state.rigthTotal) {\r\n+\r\n+        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n+        //             isFail = true;\r\n+        //             break;\r\n+        //         }\r\n+        //     }\r\n+\r\n+        //     if (isFail) {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+        //     } else {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+        //     }\r\n+        //     this._gameTime = 0;\r\n+        //     state.gameTime = this._gameTime;\r\n+        //     state.gameOver = true;\r\n+        //     this.updateState(state);\r\n+        //     return;\r\n+        // }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        console.log('====== foodData ======' + foodData.tag);\r\n+        console.log(foodData);\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            console.log('===== test index ===' + food.data.index);\r\n+\r\n+            food.testHHHH();\r\n+\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+\r\n+\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+\r\n+                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n+\r\n+                                    console.log(this.myFoodPools);\r\n+\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    // constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+    //     super();\r\n+\r\n+    //     let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+    //     item.data = foodData;\r\n+\r\n+    //     item.x = item.data.x;\r\n+    //     let tempX = item.x;\r\n+    //     item.y = 100;\r\n+    //     item.visible = true;\r\n+    //     cc.tween(item)\r\n+    //         .to(item.data.speed, { x: item.x, y: 970 })\r\n+    //         .call(() => {\r\n+\r\n+    //             item.y = 300;\r\n+    //             // item.visible = false;\r\n+    //             item.data.isShow = false;\r\n+    //             console.log('==== call ====');\r\n+    //             console.log(item);\r\n+\r\n+    //         })\r\n+    //         .start();\r\n+\r\n+    //     return item;\r\n+    // }\r\n+\r\n+\r\n+    protected testHHHH(): void {\r\n+\r\n+        console.log('==== 111111 test 2222222====');\r\n+\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // this.y += this.data.speed * 0.01;\r\n+        // if (this.y >= 970) {\r\n+\r\n+        //     this.y = 100;\r\n+        //     this.visible = false;\r\n+        //     this.data.isShow = false;\r\n+\r\n+        // }\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624023804153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,922 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 10 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        // if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+        //     this.unschedule(this.updateAdd);\r\n+\r\n+        //     let state: any = globalThis._.cloneDeep(this._state);\r\n+        //     let isFail = false;\r\n+        //     for (var key in state.rigthTotal) {\r\n+\r\n+        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n+        //             isFail = true;\r\n+        //             break;\r\n+        //         }\r\n+        //     }\r\n+\r\n+        //     if (isFail) {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+        //     } else {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+        //     }\r\n+        //     this._gameTime = 0;\r\n+        //     state.gameTime = this._gameTime;\r\n+        //     state.gameOver = true;\r\n+        //     this.updateState(state);\r\n+        //     return;\r\n+        // }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        console.log('====== foodData ======' + foodData.tag);\r\n+        console.log(foodData);\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            console.log('===== test index ===' + food.data.index);\r\n+\r\n+            food.testHHHH();\r\n+\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+\r\n+\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+\r\n+                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n+\r\n+                                    console.log(this.myFoodPools);\r\n+\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    // constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+    //     super();\r\n+\r\n+    //     let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+    //     item.data = foodData;\r\n+\r\n+    //     item.x = item.data.x;\r\n+    //     let tempX = item.x;\r\n+    //     item.y = 100;\r\n+    //     item.visible = true;\r\n+    //     cc.tween(item)\r\n+    //         .to(item.data.speed, { x: item.x, y: 970 })\r\n+    //         .call(() => {\r\n+\r\n+    //             item.y = 300;\r\n+    //             // item.visible = false;\r\n+    //             item.data.isShow = false;\r\n+    //             console.log('==== call ====');\r\n+    //             console.log(item);\r\n+\r\n+    //         })\r\n+    //         .start();\r\n+\r\n+    //     return item;\r\n+    // }\r\n+\r\n+\r\n+    protected testHHHH(): void {\r\n+\r\n+        console.log('==== 111111 test 2222222====');\r\n+\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // this.y += this.data.speed * 0.01;\r\n+        // if (this.y >= 970) {\r\n+\r\n+        //     this.y = 100;\r\n+        //     this.visible = false;\r\n+        //     this.data.isShow = false;\r\n+\r\n+        // }\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624023812671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,924 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 10 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        // if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+        //     this.unschedule(this.updateAdd);\r\n+\r\n+        //     let state: any = globalThis._.cloneDeep(this._state);\r\n+        //     let isFail = false;\r\n+        //     for (var key in state.rigthTotal) {\r\n+\r\n+        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n+        //             isFail = true;\r\n+        //             break;\r\n+        //         }\r\n+        //     }\r\n+\r\n+        //     if (isFail) {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+        //     } else {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+        //     }\r\n+        //     this._gameTime = 0;\r\n+        //     state.gameTime = this._gameTime;\r\n+        //     state.gameOver = true;\r\n+        //     this.updateState(state);\r\n+        //     return;\r\n+        // }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        console.log('====== foodData ======' + foodData.tag);\r\n+        console.log(foodData);\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+                isHave = true;\r\n+                food = this.myFoodPools[i];\r\n+\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            console.log('===== test index ===' + food.data.index);\r\n+\r\n+            food.testHHHH();\r\n+\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+\r\n+\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+\r\n+                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n+\r\n+                                    console.log(this.myFoodPools);\r\n+\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    // constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+    //     super();\r\n+\r\n+    //     let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+    //     item.data = foodData;\r\n+\r\n+    //     item.x = item.data.x;\r\n+    //     let tempX = item.x;\r\n+    //     item.y = 100;\r\n+    //     item.visible = true;\r\n+    //     cc.tween(item)\r\n+    //         .to(item.data.speed, { x: item.x, y: 970 })\r\n+    //         .call(() => {\r\n+\r\n+    //             item.y = 300;\r\n+    //             // item.visible = false;\r\n+    //             item.data.isShow = false;\r\n+    //             console.log('==== call ====');\r\n+    //             console.log(item);\r\n+\r\n+    //         })\r\n+    //         .start();\r\n+\r\n+    //     return item;\r\n+    // }\r\n+\r\n+    constructor() {\r\n+\r\n+    }\r\n+    protected testHHHH(): void {\r\n+\r\n+        console.log('==== 111111 test 2222222====');\r\n+\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // this.y += this.data.speed * 0.01;\r\n+        // if (this.y >= 970) {\r\n+\r\n+        //     this.y = 100;\r\n+        //     this.visible = false;\r\n+        //     this.data.isShow = false;\r\n+\r\n+        // }\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624023813424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -921,2769 +921,4 @@\n     }\r\n \r\n }\r\n \r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 10 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        // if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-        //     this.unschedule(this.updateAdd);\r\n-\r\n-        //     let state: any = globalThis._.cloneDeep(this._state);\r\n-        //     let isFail = false;\r\n-        //     for (var key in state.rigthTotal) {\r\n-\r\n-        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n-        //             isFail = true;\r\n-        //             break;\r\n-        //         }\r\n-        //     }\r\n-\r\n-        //     if (isFail) {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-        //     } else {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-        //     }\r\n-        //     this._gameTime = 0;\r\n-        //     state.gameTime = this._gameTime;\r\n-        //     state.gameOver = true;\r\n-        //     this.updateState(state);\r\n-        //     return;\r\n-        // }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        console.log('====== foodData ======' + foodData.tag);\r\n-        console.log(foodData);\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            console.log('===== test index ===' + food.data.index);\r\n-\r\n-            food.testHHHH();\r\n-\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-\r\n-\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-\r\n-                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n-\r\n-                                    console.log(this.myFoodPools);\r\n-\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    // constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-    //     super();\r\n-\r\n-    //     let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-    //     item.data = foodData;\r\n-\r\n-    //     item.x = item.data.x;\r\n-    //     let tempX = item.x;\r\n-    //     item.y = 100;\r\n-    //     item.visible = true;\r\n-    //     cc.tween(item)\r\n-    //         .to(item.data.speed, { x: item.x, y: 970 })\r\n-    //         .call(() => {\r\n-\r\n-    //             item.y = 300;\r\n-    //             // item.visible = false;\r\n-    //             item.data.isShow = false;\r\n-    //             console.log('==== call ====');\r\n-    //             console.log(item);\r\n-\r\n-    //         })\r\n-    //         .start();\r\n-\r\n-    //     return item;\r\n-    // }\r\n-\r\n-\r\n-    protected testHHHH(): void {\r\n-\r\n-        console.log('==== 111111 test 2222222====');\r\n-\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // this.y += this.data.speed * 0.01;\r\n-        // if (this.y >= 970) {\r\n-\r\n-        //     this.y = 100;\r\n-        //     this.visible = false;\r\n-        //     this.data.isShow = false;\r\n-\r\n-        // }\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 10 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        // if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-        //     this.unschedule(this.updateAdd);\r\n-\r\n-        //     let state: any = globalThis._.cloneDeep(this._state);\r\n-        //     let isFail = false;\r\n-        //     for (var key in state.rigthTotal) {\r\n-\r\n-        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n-        //             isFail = true;\r\n-        //             break;\r\n-        //         }\r\n-        //     }\r\n-\r\n-        //     if (isFail) {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-        //     } else {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-        //     }\r\n-        //     this._gameTime = 0;\r\n-        //     state.gameTime = this._gameTime;\r\n-        //     state.gameOver = true;\r\n-        //     this.updateState(state);\r\n-        //     return;\r\n-        // }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        console.log('====== foodData ======' + foodData.tag);\r\n-        console.log(foodData);\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            console.log('===== test index ===' + food.data.index);\r\n-\r\n-            food.testHHHH();\r\n-\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-\r\n-\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-\r\n-                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n-\r\n-                                    console.log(this.myFoodPools);\r\n-\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    // constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-    //     super();\r\n-\r\n-    //     let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-    //     item.data = foodData;\r\n-\r\n-    //     item.x = item.data.x;\r\n-    //     let tempX = item.x;\r\n-    //     item.y = 100;\r\n-    //     item.visible = true;\r\n-    //     cc.tween(item)\r\n-    //         .to(item.data.speed, { x: item.x, y: 970 })\r\n-    //         .call(() => {\r\n-\r\n-    //             item.y = 300;\r\n-    //             // item.visible = false;\r\n-    //             item.data.isShow = false;\r\n-    //             console.log('==== call ====');\r\n-    //             console.log(item);\r\n-\r\n-    //         })\r\n-    //         .start();\r\n-\r\n-    //     return item;\r\n-    // }\r\n-\r\n-\r\n-    protected testHHHH(): void {\r\n-\r\n-        console.log('==== 111111 test 2222222====');\r\n-\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // this.y += this.data.speed * 0.01;\r\n-        // if (this.y >= 970) {\r\n-\r\n-        //     this.y = 100;\r\n-        //     this.visible = false;\r\n-        //     this.data.isShow = false;\r\n-\r\n-        // }\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 10 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        // if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-        //     this.unschedule(this.updateAdd);\r\n-\r\n-        //     let state: any = globalThis._.cloneDeep(this._state);\r\n-        //     let isFail = false;\r\n-        //     for (var key in state.rigthTotal) {\r\n-\r\n-        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n-        //             isFail = true;\r\n-        //             break;\r\n-        //         }\r\n-        //     }\r\n-\r\n-        //     if (isFail) {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-        //     } else {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-        //     }\r\n-        //     this._gameTime = 0;\r\n-        //     state.gameTime = this._gameTime;\r\n-        //     state.gameOver = true;\r\n-        //     this.updateState(state);\r\n-        //     return;\r\n-        // }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        console.log('====== foodData ======' + foodData.tag);\r\n-        console.log(foodData);\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n-\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            console.log('===== test index ===' + food.data.index);\r\n-\r\n-            food.testHHHH();\r\n-\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-\r\n-\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-\r\n-                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n-\r\n-                                    console.log(this.myFoodPools);\r\n-\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-        super();\r\n-\r\n-        let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-        item.data = foodData;\r\n-\r\n-        item.x = item.data.x;\r\n-        let tempX = item.x;\r\n-        item.y = 100;\r\n-        item.visible = true;\r\n-        cc.tween(item)\r\n-            .to(item.data.speed, { x: item.x, y: 970 })\r\n-            .call(() => {\r\n-\r\n-                item.y = 300;\r\n-                // item.visible = false;\r\n-                item.data.isShow = false;\r\n-                console.log('==== call ====');\r\n-                console.log(item);\r\n-\r\n-            })\r\n-            .start();\r\n-\r\n-        return item;\r\n-    }\r\n-\r\n-    protected testHHHH(): void {\r\n-\r\n-        console.log('==== 111111 test 2222222====');\r\n-\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // this.y += this.data.speed * 0.01;\r\n-        // if (this.y >= 970) {\r\n-\r\n-        //     this.y = 100;\r\n-        //     this.visible = false;\r\n-        //     this.data.isShow = false;\r\n-\r\n-        // }\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624023820635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -867,9 +867,9 @@\n     //     return item;\r\n     // }\r\n \r\n     constructor() {\r\n-\r\n+        super();\r\n     }\r\n     protected testHHHH(): void {\r\n \r\n         console.log('==== 111111 test 2222222====');\r\n"
                },
                {
                    "date": 1624023827750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -867,10 +867,12 @@\n     //     return item;\r\n     // }\r\n \r\n     constructor() {\r\n+\r\n         super();\r\n     }\r\n+\r\n     protected testHHHH(): void {\r\n \r\n         console.log('==== 111111 test 2222222====');\r\n \r\n"
                },
                {
                    "date": 1624023836866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -867,8 +867,9 @@\n     //     return item;\r\n     // }\r\n \r\n     constructor() {\r\n+        console.log('==== 111111 constructor 2222222====');\r\n \r\n         super();\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624023857440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -328,9 +328,10 @@\n         }\r\n \r\n         if (!isHave) {\r\n \r\n-            food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            // food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            food = new MyDropFood();\r\n             console.log('===== test index ===' + food.data.index);\r\n \r\n             food.testHHHH();\r\n \r\n"
                },
                {
                    "date": 1624023870441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,10 +330,10 @@\n         if (!isHave) {\r\n \r\n             // food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n             food = new MyDropFood();\r\n-            console.log('===== test index ===' + food.data.index);\r\n \r\n+\r\n             food.testHHHH();\r\n \r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624023881751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -331,9 +331,8 @@\n \r\n             // food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n             food = new MyDropFood();\r\n \r\n-\r\n             food.testHHHH();\r\n \r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624023921092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -316,17 +316,17 @@\n         console.log(foodData);\r\n \r\n         let isHave = false;\r\n         let food = null;\r\n-        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+        // for (let i = 0; i < this.myFoodPools.length; i++) {\r\n \r\n-            if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-                isHave = true;\r\n-                food = this.myFoodPools[i];\r\n+        //     if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+        //         isHave = true;\r\n+        //         food = this.myFoodPools[i];\r\n \r\n-                break;\r\n-            }\r\n-        }\r\n+        //         break;\r\n+        //     }\r\n+        // }\r\n \r\n         if (!isHave) {\r\n \r\n             // food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n"
                },
                {
                    "date": 1624024093194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,9 +330,9 @@\n         if (!isHave) {\r\n \r\n             // food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n             food = new MyDropFood();\r\n-\r\n+            let item = fgui.UIPackage.getItemByURL();\r\n             food.testHHHH();\r\n \r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624024165038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,9 +330,10 @@\n         if (!isHave) {\r\n \r\n             // food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n             food = new MyDropFood();\r\n-            let item = fgui.UIPackage.getItemByURL();\r\n+            let item = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n+            food.packageItem = item;\r\n             food.testHHHH();\r\n \r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n"
                },
                {
                    "date": 1624024187773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,9 +333,10 @@\n             food = new MyDropFood();\r\n             let item = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n             food.packageItem = item;\r\n             food.testHHHH();\r\n-\r\n+            food.x = 300;\r\n+            food.y = 00\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n"
                },
                {
                    "date": 1624024245830,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import { url } from '../../../../creator';\r\n \r\n /*\r\n  * @Descripttion: \r\n  * @version: \r\n@@ -331,12 +332,13 @@\n \r\n             // food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n             food = new MyDropFood();\r\n             let item = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n+            food.url = this._gameFood[foodData.index];\r\n             food.packageItem = item;\r\n             food.testHHHH();\r\n             food.x = 300;\r\n-            food.y = 00\r\n+            food.y = 300;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n"
                },
                {
                    "date": 1624024281199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -333,9 +333,9 @@\n             // food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n             food = new MyDropFood();\r\n             let item = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n             food.url = this._gameFood[foodData.index];\r\n-            food.packageItem = item;\r\n+            // food.packageItem = item;\r\n             food.testHHHH();\r\n             food.x = 300;\r\n             food.y = 300;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n"
                },
                {
                    "date": 1624024287156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,931 @@\n+import { url } from '../../../../creator';\r\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+    private _view: fgui.GComponent;\r\n+    private _c1: fgui.Controller;\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _boyFood: any = [];\r\n+    private _girlFood: any = [];\r\n+    private _gameFood: any = [];\r\n+\r\n+    private _gameOver: boolean = false;\r\n+    private _gameStart: boolean = false;\r\n+\r\n+    private _title: fgui.GButton;\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    // 1s *60 = 60\r\n+    private _gameTime: number = 0;\r\n+\r\n+    private _interTime: number = 0;\r\n+\r\n+    private _interTimeLimit: number = 10 * 1.0;\r\n+\r\n+    /** 我自己的对象池 */\r\n+    private myFoodPools: any = [];\r\n+\r\n+    private _curDropLength: number = 0;\r\n+\r\n+    private _foodTag: number = 1;\r\n+\r\n+    private _rightIndexs: any = [];\r\n+\r\n+    private _dropSpeed: number = 3.0;\r\n+\r\n+    private _playBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private timeText: fgui.GLabel;\r\n+\r\n+    private _framesSecond: number = 30;\r\n+\r\n+    private _gameMusic: cc.AudioClip;\r\n+    private _wrongSound: cc.AudioClip;\r\n+    private _rightSound: cc.AudioClip;\r\n+    private _readySound: cc.AudioClip;\r\n+\r\n+    private _boySound: string;\r\n+    private _girlSound: string;\r\n+\r\n+    private _boy3D: fgui.GLoader3D;\r\n+\r\n+    private _girl3D: fgui.GLoader3D;\r\n+\r\n+    private _readyGroup: fgui.GGroup;\r\n+    private _ready: fgui.GImage;\r\n+    private _go: fgui.GImage;\r\n+    private _over: fgui.GGroup;\r\n+\r\n+    private feedbackType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this.myFoodPools = [];\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n+        this.timeText.text = this._gameTime + '';\r\n+\r\n+        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n+        this._ready = this._view.getChild('ready').asImage;\r\n+        this._go = this._view.getChild('go').asImage;\r\n+        this._over = this._view.getChild('over').asGroup;\r\n+\r\n+        this._readyGroup.visible = false;\r\n+        this._ready.visible = false;\r\n+        this._go.visible = false;\r\n+        this._over.visible = false;\r\n+\r\n+        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n+        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n+\r\n+        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n+        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n+\r\n+        this._boy3D.animationName = 'b_idle';\r\n+        this._girl3D.animationName = 'g_idle';\r\n+\r\n+        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._playBtn = this._view.getChild(\"play\").asButton;\r\n+        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n+        this._playBtn.enabled = false;\r\n+\r\n+        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._boyFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._girlFood.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let rigthTotalTemp = {};\r\n+        let temp = {};\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n+            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n+        }\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            elvesPlay: false,\r\n+            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n+            gameCanPlay: false,\r\n+            gameOver: false,\r\n+            gameStart: false,\r\n+            submitFeedback: this.feedbackType.No,\r\n+            gameTime: 0,\r\n+            clickFoodTag: -1,\r\n+            rigthTotal: rigthTotalTemp,\r\n+            gameFoodData: {},\r\n+            dropSpeed: this._dropSpeed,\r\n+            interTimeLimit: this._interTimeLimit,\r\n+            foodTag: this._foodTag\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (gameFood) this._gameFood = gameFood;\r\n+        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n+        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n+        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n+        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n+\r\n+        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n+\r\n+        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n+        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    protected updateAdd(dt: number): void {\r\n+\r\n+        if (!this._gameStart || this._gameOver) {\r\n+\r\n+            this.unschedule(this.updateAdd);\r\n+            return;\r\n+        }\r\n+        this._gameTime++;\r\n+        // if (this._gameTime >= this._framesSecond * 15) {\r\n+\r\n+        //     this.unschedule(this.updateAdd);\r\n+\r\n+        //     let state: any = globalThis._.cloneDeep(this._state);\r\n+        //     let isFail = false;\r\n+        //     for (var key in state.rigthTotal) {\r\n+\r\n+        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n+        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n+        //             isFail = true;\r\n+        //             break;\r\n+        //         }\r\n+        //     }\r\n+\r\n+        //     if (isFail) {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n+\r\n+        //     } else {\r\n+\r\n+        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n+\r\n+        //     }\r\n+        //     this._gameTime = 0;\r\n+        //     state.gameTime = this._gameTime;\r\n+        //     state.gameOver = true;\r\n+        //     this.updateState(state);\r\n+        //     return;\r\n+        // }\r\n+\r\n+        this._interTime++;\r\n+\r\n+        if (this._interTime >= this._interTimeLimit) {\r\n+            // if (this._gameTime <= 5 * this._framesSecond) {\r\n+\r\n+            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 2.3;\r\n+            //     //2.0 ----> 60 * 0.6\r\n+            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n+\r\n+            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n+\r\n+            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n+            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n+\r\n+            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n+            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n+            // }\r\n+\r\n+            this._interTime = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+            this._foodTag++;\r\n+            state.gameFoodData = temp;\r\n+            state.dropSpeed = this._dropSpeed;\r\n+            state.interTimeLimit = this._interTimeLimit;\r\n+            state.foodTag = this._foodTag;\r\n+            state.gameTime = this._gameTime;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    private foodDropAnimate(state: any, foodData) {\r\n+\r\n+        console.log('====== foodData ======' + foodData.tag);\r\n+        console.log(foodData);\r\n+\r\n+        let isHave = false;\r\n+        let food = null;\r\n+        // for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+        //     if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n+        //         isHave = true;\r\n+        //         food = this.myFoodPools[i];\r\n+\r\n+        //         break;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (!isHave) {\r\n+\r\n+            // food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n+            food = new MyDropFood();\r\n+            let item = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n+            food.url = this._gameFood[foodData.index];\r\n+            // food.packageItem = item;\r\n+            food.testHHHH();\r\n+            food.x = 300;\r\n+            food.y = 300;\r\n+            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n+            this._view.addChild(food);\r\n+            this.myFoodPools.push(food);\r\n+        }\r\n+\r\n+        let isFlag = false;\r\n+        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+\r\n+            if (this._rightIndexs[i] === foodData.index) {\r\n+\r\n+                isFlag = true;\r\n+                state.rigthTotal[foodData.index].showTotal++;\r\n+                break;\r\n+            }\r\n+        }\r\n+\r\n+        setTimeout(() => {\r\n+            let state1: any = globalThis._.cloneDeep(this._state);\r\n+            if (isFlag) {\r\n+                state1.rigthTotal = state.rigthTotal;\r\n+            }\r\n+            this.updateState(state1);\r\n+\r\n+        }, 0.01)\r\n+    }\r\n+\r\n+    private _clickDropFood(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn = obj.asButton;\r\n+        state.clickFoodTag = btn.data.tag;\r\n+\r\n+\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickElves(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        if (btn.name === 'boy') {\r\n+\r\n+            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n+\r\n+        } else {\r\n+\r\n+            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n+        }\r\n+        state.elvesPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickStartPlay(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.play = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n+            if (state.elvesPlay) {\r\n+                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n+            this._gameStart = state.gameStart;\r\n+            if (state.gameStart && !state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    this.myFoodPools[i].removeFromParent();\r\n+                }\r\n+                this.myFoodPools = [];\r\n+                this._foodTag = 1;\r\n+                cc.audioEngine.playMusic(this._gameMusic, true);\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n+                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n+\r\n+                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n+                    this._foodTag++;\r\n+                    state1.gameFoodData = temp;\r\n+                    state1.foodTag = this._foodTag;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 0.02);\r\n+\r\n+                this.schedule(this.updateAdd, 0.02);\r\n+\r\n+            } else {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = true;\r\n+                girl.touchable = true;\r\n+                cc.audioEngine.stopMusic();\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n+\r\n+            if (state.play) {\r\n+                this._playBtn.visible = false;\r\n+                this._readyGroup.visible = true;\r\n+                this._ready.visible = true;\r\n+                cc.tween(this)\r\n+                    .delay(0.7)\r\n+                    .call(() => {\r\n+                        this._go.visible = true;\r\n+                        this._ready.visible = false;\r\n+                    })\r\n+                    .start();\r\n+\r\n+                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n+                cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+                    this._readyGroup.visible = false;\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.gameStart = true;\r\n+                    this.updateState(state1);\r\n+                });\r\n+\r\n+            } else {\r\n+                this._readyGroup.visible = false;\r\n+                this._playBtn.visible = true;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n+\r\n+            this._gameOver = state.gameOver;\r\n+            if (state.gameOver) {\r\n+                let boy = this._view.getChild(\"boy\").asButton;\r\n+                let girl = this._view.getChild(\"girl\").asButton;\r\n+                boy.touchable = false;\r\n+                girl.touchable = false;\r\n+                this._over.visible = true;\r\n+            } else {\r\n+\r\n+                this._over.visible = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n+\r\n+            if (state.clickFoodTag) {\r\n+\r\n+                let btn = null;\r\n+                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+\r\n+                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n+                        btn = this.myFoodPools[i];\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (btn) {\r\n+\r\n+                    // 是正确的\r\n+                    let isRight = false;\r\n+                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n+                        if (btn.data.index === this._rightIndexs[i]) {\r\n+                            isRight = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                    if (isRight) {\r\n+\r\n+                        //点击正确\r\n+                        btn.icon = 'ui://733aoo45r3753l';\r\n+                        btn.data.isShow = true;\r\n+                        setTimeout(() => {\r\n+\r\n+                            let indexTemp = btn.data.index;\r\n+\r\n+                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n+                                if (this.myFoodPools[i] === btn) {\r\n+                                    this.myFoodPools.splice(i, 1);\r\n+                                    btn.removeFromParent();\r\n+\r\n+                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n+\r\n+                                    console.log(this.myFoodPools);\r\n+\r\n+                                    break;\r\n+                                }\r\n+                            }\r\n+\r\n+                            let state2: any = globalThis._.cloneDeep(this._state);\r\n+                            state2.rigthTotal[indexTemp].clickTotle++;\r\n+                            this.updateState(state2);\r\n+\r\n+                        }, 0.05);\r\n+\r\n+                        cc.audioEngine.playEffect(this._rightSound, false);\r\n+\r\n+                    } else {\r\n+\r\n+                        //点击错误\r\n+                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n+\r\n+                    }\r\n+                }\r\n+\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n+\r\n+            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n+\r\n+            if (state.gameCanPlay) {\r\n+\r\n+                this._playBtn.enabled = true;\r\n+\r\n+            } else {\r\n+\r\n+                this._playBtn.enabled = false;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n+\r\n+            this._dropSpeed = state.dropSpeed;\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n+\r\n+            this._interTimeLimit = state.interTimeLimit;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n+\r\n+            this._foodTag = state.foodTag;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n+\r\n+            this._gameTime = state.gameTime;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n+\r\n+            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n+            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n+\r\n+            this.foodDropAnimate(state, state.gameFoodData);\r\n+\r\n+            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n+        }\r\n+\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playRightSound(0, rightSoundFile);\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n+\r\n+        let foodArr = [];\r\n+        if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+            foodArr = this._boyFood;\r\n+            this._boy3D.animationName = 'b_speak';\r\n+\r\n+        } else {\r\n+            foodArr = this._girlFood;\r\n+            this._girl3D.animationName = 'g_speak';\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n+                this.playFoodShowAnimate(0, foodArr);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n+        let audioId = cc.audioEngine.play(audio, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+\r\n+            if (rightSoundFile[curIndex].sex === 1) {\r\n+\r\n+                this._boy3D.animationName = 'b_idle';\r\n+\r\n+            } else {\r\n+                this._girl3D.animationName = 'g_idle';\r\n+            }\r\n+\r\n+            if (curIndex >= rightSoundFile.length - 1) {\r\n+                this.disableForbidHandle();\r\n+                this._c2.selectedIndex = 0;\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.elvesPlay = false;\r\n+                state.gameCanPlay = true;\r\n+                this.updateState(state);\r\n+                for (let i = 0; i < this._boyFood.length; i++) {\r\n+                    this._boyFood[i].alpha = 0;\r\n+                }\r\n+                for (let i = 0; i < this._girlFood.length; i++) {\r\n+                    this._girlFood[i].alpha = 0;\r\n+                }\r\n+\r\n+            } else {\r\n+\r\n+                curIndex++;\r\n+                this.playRightSound(curIndex, rightSoundFile);\r\n+            }\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playFoodShowAnimate(index: number, foodArr: any) {\r\n+\r\n+        cc.tween(foodArr[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < foodArr.length) {\r\n+                    this.playFoodShowAnimate(index, foodArr);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submitFeedback = this.feedbackType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x + obj.width / 2;\r\n+        let tempY = obj.y + obj.height / 2;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.feedbackType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n+\r\n+\r\n+class MyDropFood extends fgui.GObject {\r\n+\r\n+\r\n+    // constructor(pkgName: string, resName: string, foodData: any) {\r\n+\r\n+    //     super();\r\n+\r\n+    //     let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n+    //     item.data = foodData;\r\n+\r\n+    //     item.x = item.data.x;\r\n+    //     let tempX = item.x;\r\n+    //     item.y = 100;\r\n+    //     item.visible = true;\r\n+    //     cc.tween(item)\r\n+    //         .to(item.data.speed, { x: item.x, y: 970 })\r\n+    //         .call(() => {\r\n+\r\n+    //             item.y = 300;\r\n+    //             // item.visible = false;\r\n+    //             item.data.isShow = false;\r\n+    //             console.log('==== call ====');\r\n+    //             console.log(item);\r\n+\r\n+    //         })\r\n+    //         .start();\r\n+\r\n+    //     return item;\r\n+    // }\r\n+\r\n+    constructor() {\r\n+        console.log('==== 111111 constructor 2222222====');\r\n+\r\n+        super();\r\n+    }\r\n+\r\n+    protected testHHHH(): void {\r\n+\r\n+        console.log('==== 111111 test 2222222====');\r\n+\r\n+    }\r\n+\r\n+    protected onUpdate() {\r\n+\r\n+        // this.y += this.data.speed * 0.01;\r\n+        // if (this.y >= 970) {\r\n+\r\n+        //     this.y = 100;\r\n+        //     this.visible = false;\r\n+        //     this.data.isShow = false;\r\n+\r\n+        // }\r\n+\r\n+    }\r\n+\r\n+    protected onDestroy() {\r\n+\r\n+        console.log('==== onDestroy ====');\r\n+\r\n+    }\r\n+\r\n+    init() {\r\n+\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+        return;\r\n+\r\n+        this.x = this.data.x;\r\n+        let tempX = this.x;\r\n+        this.y = 300;\r\n+        this.visible = true;\r\n+        // cc.tween(this)\r\n+        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n+        //     .call(() => {\r\n+        //         this.y = 100;\r\n+        //         this.visible = false;\r\n+        //         this.data.isShow = false;\r\n+\r\n+        //     })\r\n+        //     .start();\r\n+\r\n+        console.log('==== 111111 myFood 2222222====');\r\n+\r\n+    }\r\n+\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1624024314268,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,9 +336,9 @@\n             food.url = this._gameFood[foodData.index];\r\n             // food.packageItem = item;\r\n             food.testHHHH();\r\n             food.x = 300;\r\n-            food.y = 300;\r\n+            food.y = 500;\r\n             food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n             this._view.addChild(food);\r\n             this.myFoodPools.push(food);\r\n         }\r\n@@ -928,935 +928,4 @@\n     }\r\n \r\n }\r\n \r\n-import { url } from '../../../../creator';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-    private _view: fgui.GComponent;\r\n-    private _c1: fgui.Controller;\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _boyFood: any = [];\r\n-    private _girlFood: any = [];\r\n-    private _gameFood: any = [];\r\n-\r\n-    private _gameOver: boolean = false;\r\n-    private _gameStart: boolean = false;\r\n-\r\n-    private _title: fgui.GButton;\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    // 1s *60 = 60\r\n-    private _gameTime: number = 0;\r\n-\r\n-    private _interTime: number = 0;\r\n-\r\n-    private _interTimeLimit: number = 10 * 1.0;\r\n-\r\n-    /** 我自己的对象池 */\r\n-    private myFoodPools: any = [];\r\n-\r\n-    private _curDropLength: number = 0;\r\n-\r\n-    private _foodTag: number = 1;\r\n-\r\n-    private _rightIndexs: any = [];\r\n-\r\n-    private _dropSpeed: number = 3.0;\r\n-\r\n-    private _playBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private timeText: fgui.GLabel;\r\n-\r\n-    private _framesSecond: number = 30;\r\n-\r\n-    private _gameMusic: cc.AudioClip;\r\n-    private _wrongSound: cc.AudioClip;\r\n-    private _rightSound: cc.AudioClip;\r\n-    private _readySound: cc.AudioClip;\r\n-\r\n-    private _boySound: string;\r\n-    private _girlSound: string;\r\n-\r\n-    private _boy3D: fgui.GLoader3D;\r\n-\r\n-    private _girl3D: fgui.GLoader3D;\r\n-\r\n-    private _readyGroup: fgui.GGroup;\r\n-    private _ready: fgui.GImage;\r\n-    private _go: fgui.GImage;\r\n-    private _over: fgui.GGroup;\r\n-\r\n-    private feedbackType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this.myFoodPools = [];\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n-        this.timeText.text = this._gameTime + '';\r\n-\r\n-        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n-        this._ready = this._view.getChild('ready').asImage;\r\n-        this._go = this._view.getChild('go').asImage;\r\n-        this._over = this._view.getChild('over').asGroup;\r\n-\r\n-        this._readyGroup.visible = false;\r\n-        this._ready.visible = false;\r\n-        this._go.visible = false;\r\n-        this._over.visible = false;\r\n-\r\n-        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n-        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n-\r\n-        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n-        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n-\r\n-        this._boy3D.animationName = 'b_idle';\r\n-        this._girl3D.animationName = 'g_idle';\r\n-\r\n-        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._playBtn = this._view.getChild(\"play\").asButton;\r\n-        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n-        this._playBtn.enabled = false;\r\n-\r\n-        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._boyFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._girlFood.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let rigthTotalTemp = {};\r\n-        let temp = {};\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n-            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n-        }\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            elvesPlay: false,\r\n-            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n-            gameCanPlay: false,\r\n-            gameOver: false,\r\n-            gameStart: false,\r\n-            submitFeedback: this.feedbackType.No,\r\n-            gameTime: 0,\r\n-            clickFoodTag: -1,\r\n-            rigthTotal: rigthTotalTemp,\r\n-            gameFoodData: {},\r\n-            dropSpeed: this._dropSpeed,\r\n-            interTimeLimit: this._interTimeLimit,\r\n-            foodTag: this._foodTag\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (gameFood) this._gameFood = gameFood;\r\n-        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n-        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n-        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n-        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n-\r\n-        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n-\r\n-        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n-        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    protected updateAdd(dt: number): void {\r\n-\r\n-        if (!this._gameStart || this._gameOver) {\r\n-\r\n-            this.unschedule(this.updateAdd);\r\n-            return;\r\n-        }\r\n-        this._gameTime++;\r\n-        // if (this._gameTime >= this._framesSecond * 15) {\r\n-\r\n-        //     this.unschedule(this.updateAdd);\r\n-\r\n-        //     let state: any = globalThis._.cloneDeep(this._state);\r\n-        //     let isFail = false;\r\n-        //     for (var key in state.rigthTotal) {\r\n-\r\n-        //         state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n-        //         if (state.rigthTotal[key].percent <= 0.5) {\r\n-        //             isFail = true;\r\n-        //             break;\r\n-        //         }\r\n-        //     }\r\n-\r\n-        //     if (isFail) {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.WrongFeed;\r\n-\r\n-        //     } else {\r\n-\r\n-        //         state.submitFeedback = this.feedbackType.RightFeed;\r\n-\r\n-        //     }\r\n-        //     this._gameTime = 0;\r\n-        //     state.gameTime = this._gameTime;\r\n-        //     state.gameOver = true;\r\n-        //     this.updateState(state);\r\n-        //     return;\r\n-        // }\r\n-\r\n-        this._interTime++;\r\n-\r\n-        if (this._interTime >= this._interTimeLimit) {\r\n-            // if (this._gameTime <= 5 * this._framesSecond) {\r\n-\r\n-            //     this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            // } else if (this._gameTime > 5 * this._framesSecond && this._gameTime <= 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 2.3;\r\n-            //     //2.0 ----> 60 * 0.6\r\n-            //     this._interTimeLimit = this._framesSecond * 0.5;\r\n-\r\n-            // } else if (this._gameTime > 10 * this._framesSecond) {\r\n-\r\n-            //     // this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n-            //     // this._interTimeLimit = this._framesSecond * 1.2;\r\n-\r\n-            //     this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n-            //     this._interTimeLimit = this._framesSecond * 0.3;\r\n-            // }\r\n-\r\n-            this._interTime = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-            let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-            let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-            this._foodTag++;\r\n-            state.gameFoodData = temp;\r\n-            state.dropSpeed = this._dropSpeed;\r\n-            state.interTimeLimit = this._interTimeLimit;\r\n-            state.foodTag = this._foodTag;\r\n-            state.gameTime = this._gameTime;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    private foodDropAnimate(state: any, foodData) {\r\n-\r\n-        console.log('====== foodData ======' + foodData.tag);\r\n-        console.log(foodData);\r\n-\r\n-        let isHave = false;\r\n-        let food = null;\r\n-        // for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-        //     if (this.myFoodPools[i].data.index === foodData.index && !this.myFoodPools[i].data.isShow) {\r\n-        //         isHave = true;\r\n-        //         food = this.myFoodPools[i];\r\n-\r\n-        //         break;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (!isHave) {\r\n-\r\n-            // food = new MyDropFood(this._package, this._gameFood[foodData.index], foodData);\r\n-            food = new MyDropFood();\r\n-            let item = fgui.UIPackage.getItemByURL(this._gameFood[foodData.index]);\r\n-            food.url = this._gameFood[foodData.index];\r\n-            // food.packageItem = item;\r\n-            food.testHHHH();\r\n-            food.x = 300;\r\n-            food.y = 300;\r\n-            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n-            this._view.addChild(food);\r\n-            this.myFoodPools.push(food);\r\n-        }\r\n-\r\n-        let isFlag = false;\r\n-        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-\r\n-            if (this._rightIndexs[i] === foodData.index) {\r\n-\r\n-                isFlag = true;\r\n-                state.rigthTotal[foodData.index].showTotal++;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        setTimeout(() => {\r\n-            let state1: any = globalThis._.cloneDeep(this._state);\r\n-            if (isFlag) {\r\n-                state1.rigthTotal = state.rigthTotal;\r\n-            }\r\n-            this.updateState(state1);\r\n-\r\n-        }, 0.01)\r\n-    }\r\n-\r\n-    private _clickDropFood(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn = obj.asButton;\r\n-        state.clickFoodTag = btn.data.tag;\r\n-\r\n-\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickElves(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        if (btn.name === 'boy') {\r\n-\r\n-            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n-\r\n-        } else {\r\n-\r\n-            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n-        }\r\n-        state.elvesPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickStartPlay(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.play = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n-            if (state.elvesPlay) {\r\n-                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n-            this._gameStart = state.gameStart;\r\n-            if (state.gameStart && !state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    this.myFoodPools[i].removeFromParent();\r\n-                }\r\n-                this.myFoodPools = [];\r\n-                this._foodTag = 1;\r\n-                cc.audioEngine.playMusic(this._gameMusic, true);\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n-                    let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n-\r\n-                    let temp = { index: randIndex, isShow: true, tag: this._foodTag, x: randPosX, speed: this._dropSpeed };\r\n-                    this._foodTag++;\r\n-                    state1.gameFoodData = temp;\r\n-                    state1.foodTag = this._foodTag;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 0.02);\r\n-\r\n-                this.schedule(this.updateAdd, 0.02);\r\n-\r\n-            } else {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = true;\r\n-                girl.touchable = true;\r\n-                cc.audioEngine.stopMusic();\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n-\r\n-            if (state.play) {\r\n-                this._playBtn.visible = false;\r\n-                this._readyGroup.visible = true;\r\n-                this._ready.visible = true;\r\n-                cc.tween(this)\r\n-                    .delay(0.7)\r\n-                    .call(() => {\r\n-                        this._go.visible = true;\r\n-                        this._ready.visible = false;\r\n-                    })\r\n-                    .start();\r\n-\r\n-                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n-                cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-                    this._readyGroup.visible = false;\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.gameStart = true;\r\n-                    this.updateState(state1);\r\n-                });\r\n-\r\n-            } else {\r\n-                this._readyGroup.visible = false;\r\n-                this._playBtn.visible = true;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n-\r\n-            this._gameOver = state.gameOver;\r\n-            if (state.gameOver) {\r\n-                let boy = this._view.getChild(\"boy\").asButton;\r\n-                let girl = this._view.getChild(\"girl\").asButton;\r\n-                boy.touchable = false;\r\n-                girl.touchable = false;\r\n-                this._over.visible = true;\r\n-            } else {\r\n-\r\n-                this._over.visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n-\r\n-            if (state.clickFoodTag) {\r\n-\r\n-                let btn = null;\r\n-                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-\r\n-                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n-                        btn = this.myFoodPools[i];\r\n-                        break;\r\n-                    }\r\n-                }\r\n-\r\n-                if (btn) {\r\n-\r\n-                    // 是正确的\r\n-                    let isRight = false;\r\n-                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n-                        if (btn.data.index === this._rightIndexs[i]) {\r\n-                            isRight = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                    if (isRight) {\r\n-\r\n-                        //点击正确\r\n-                        btn.icon = 'ui://733aoo45r3753l';\r\n-                        btn.data.isShow = true;\r\n-                        setTimeout(() => {\r\n-\r\n-                            let indexTemp = btn.data.index;\r\n-\r\n-                            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n-                                if (this.myFoodPools[i] === btn) {\r\n-                                    this.myFoodPools.splice(i, 1);\r\n-                                    btn.removeFromParent();\r\n-\r\n-                                    console.log('=== clickFoodTag ===' + btn.data.tag);\r\n-\r\n-                                    console.log(this.myFoodPools);\r\n-\r\n-                                    break;\r\n-                                }\r\n-                            }\r\n-\r\n-                            let state2: any = globalThis._.cloneDeep(this._state);\r\n-                            state2.rigthTotal[indexTemp].clickTotle++;\r\n-                            this.updateState(state2);\r\n-\r\n-                        }, 0.05);\r\n-\r\n-                        cc.audioEngine.playEffect(this._rightSound, false);\r\n-\r\n-                    } else {\r\n-\r\n-                        //点击错误\r\n-                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n-\r\n-                    }\r\n-                }\r\n-\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n-\r\n-            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n-\r\n-            if (state.gameCanPlay) {\r\n-\r\n-                this._playBtn.enabled = true;\r\n-\r\n-            } else {\r\n-\r\n-                this._playBtn.enabled = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.dropSpeed, state.dropSpeed)) {\r\n-\r\n-            this._dropSpeed = state.dropSpeed;\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.interTimeLimit, state.interTimeLimit)) {\r\n-\r\n-            this._interTimeLimit = state.interTimeLimit;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.foodTag, state.foodTag)) {\r\n-\r\n-            this._foodTag = state.foodTag;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n-\r\n-            this._gameTime = state.gameTime;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.gameFoodData, state.gameFoodData)) {\r\n-\r\n-            // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n-            // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n-\r\n-            this.foodDropAnimate(state, state.gameFoodData);\r\n-\r\n-            this.timeText.text = parseInt(state.gameTime / this._framesSecond + '') + 's';\r\n-        }\r\n-\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playRightSound(0, rightSoundFile);\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n-\r\n-        let foodArr = [];\r\n-        if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-            foodArr = this._boyFood;\r\n-            this._boy3D.animationName = 'b_speak';\r\n-\r\n-        } else {\r\n-            foodArr = this._girlFood;\r\n-            this._girl3D.animationName = 'g_speak';\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n-                this.playFoodShowAnimate(0, foodArr);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n-        let audioId = cc.audioEngine.play(audio, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-\r\n-            if (rightSoundFile[curIndex].sex === 1) {\r\n-\r\n-                this._boy3D.animationName = 'b_idle';\r\n-\r\n-            } else {\r\n-                this._girl3D.animationName = 'g_idle';\r\n-            }\r\n-\r\n-            if (curIndex >= rightSoundFile.length - 1) {\r\n-                this.disableForbidHandle();\r\n-                this._c2.selectedIndex = 0;\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.elvesPlay = false;\r\n-                state.gameCanPlay = true;\r\n-                this.updateState(state);\r\n-                for (let i = 0; i < this._boyFood.length; i++) {\r\n-                    this._boyFood[i].alpha = 0;\r\n-                }\r\n-                for (let i = 0; i < this._girlFood.length; i++) {\r\n-                    this._girlFood[i].alpha = 0;\r\n-                }\r\n-\r\n-            } else {\r\n-\r\n-                curIndex++;\r\n-                this.playRightSound(curIndex, rightSoundFile);\r\n-            }\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playFoodShowAnimate(index: number, foodArr: any) {\r\n-\r\n-        cc.tween(foodArr[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < foodArr.length) {\r\n-                    this.playFoodShowAnimate(index, foodArr);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submitFeedback = this.feedbackType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x + obj.width / 2;\r\n-        let tempY = obj.y + obj.height / 2;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.feedbackType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-\r\n-class MyDropFood extends fgui.GObject {\r\n-\r\n-\r\n-    // constructor(pkgName: string, resName: string, foodData: any) {\r\n-\r\n-    //     super();\r\n-\r\n-    //     let item = fgui.UIPackage.createObject(pkgName, resName) as MyDropFood;\r\n-    //     item.data = foodData;\r\n-\r\n-    //     item.x = item.data.x;\r\n-    //     let tempX = item.x;\r\n-    //     item.y = 100;\r\n-    //     item.visible = true;\r\n-    //     cc.tween(item)\r\n-    //         .to(item.data.speed, { x: item.x, y: 970 })\r\n-    //         .call(() => {\r\n-\r\n-    //             item.y = 300;\r\n-    //             // item.visible = false;\r\n-    //             item.data.isShow = false;\r\n-    //             console.log('==== call ====');\r\n-    //             console.log(item);\r\n-\r\n-    //         })\r\n-    //         .start();\r\n-\r\n-    //     return item;\r\n-    // }\r\n-\r\n-    constructor() {\r\n-        console.log('==== 111111 constructor 2222222====');\r\n-\r\n-        super();\r\n-    }\r\n-\r\n-    protected testHHHH(): void {\r\n-\r\n-        console.log('==== 111111 test 2222222====');\r\n-\r\n-    }\r\n-\r\n-    protected onUpdate() {\r\n-\r\n-        // this.y += this.data.speed * 0.01;\r\n-        // if (this.y >= 970) {\r\n-\r\n-        //     this.y = 100;\r\n-        //     this.visible = false;\r\n-        //     this.data.isShow = false;\r\n-\r\n-        // }\r\n-\r\n-    }\r\n-\r\n-    protected onDestroy() {\r\n-\r\n-        console.log('==== onDestroy ====');\r\n-\r\n-    }\r\n-\r\n-    init() {\r\n-\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-        return;\r\n-\r\n-        this.x = this.data.x;\r\n-        let tempX = this.x;\r\n-        this.y = 300;\r\n-        this.visible = true;\r\n-        // cc.tween(this)\r\n-        //     .to(this.data.speed, { x: tempX, y: 970 })\r\n-        //     .call(() => {\r\n-        //         this.y = 100;\r\n-        //         this.visible = false;\r\n-        //         this.data.isShow = false;\r\n-\r\n-        //     })\r\n-        //     .start();\r\n-\r\n-        console.log('==== 111111 myFood 2222222====');\r\n-\r\n-    }\r\n-\r\n-}\r\n-\r\n"
                },
                {
                    "date": 1624024398542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -876,8 +876,10 @@\n \r\n         super();\r\n     }\r\n \r\n+    MyDropFood\r\n+\r\n     protected testHHHH(): void {\r\n \r\n         console.log('==== 111111 test 2222222====');\r\n \r\n"
                },
                {
                    "date": 1624024404557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -876,10 +876,8 @@\n \r\n         super();\r\n     }\r\n \r\n-    MyDropFood\r\n-\r\n     protected testHHHH(): void {\r\n \r\n         console.log('==== 111111 test 2222222====');\r\n \r\n"
                },
                {
                    "date": 1624024559532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n-import { url } from '../../../../creator';\r\n \r\n+\r\n /*\r\n  * @Descripttion: \r\n  * @version: \r\n  * @Author: ruzhuan\r\n"
                }
            ],
            "date": 1623993702957,
            "name": "Commit-0",
            "content": "\r\n/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: ruzhuan\r\n * @Date: 2021-06-08 18:00:00\r\n * @LastEditors: ruzhuan\r\n * @LastEditTime: 2021-06-08 18:00:00\r\n */\r\nconst { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class choose_model03_v2 extends cc.Component {\r\n    private _worldRoot: cc.Node;\r\n    private _view: fgui.GComponent;\r\n    private _c1: fgui.Controller;\r\n    private _c2: fgui.Controller;\r\n\r\n    private _boyFood: any = [];\r\n    private _girlFood: any = [];\r\n    private _gameFood: any = [];\r\n\r\n    private _gameOver: boolean = false;\r\n    private _gameStart: boolean = false;\r\n\r\n    private _title: fgui.GButton;\r\n    private _titleTrigger: fgui.GLoader;\r\n\r\n    // 1s *60 = 60\r\n    private _gameTime: number = 0;\r\n\r\n    private _interTime: number = 0;\r\n\r\n    private _interTimeLimit: number = 0;\r\n\r\n    /** 我自己的对象池 */\r\n    private myFoodPools: any = [];\r\n\r\n    private _foodTag: number = 1;\r\n\r\n    private _rightIndexs: any = [];\r\n\r\n    private _dropSpeed: number = 2.5;\r\n\r\n    private _playBtn: fgui.GButton;\r\n\r\n    private _package: any;\r\n\r\n    private timeText: fgui.GLabel;\r\n\r\n    private _gameMusic: cc.AudioClip;\r\n    private _wrongSound: cc.AudioClip;\r\n    private _rightSound: cc.AudioClip;\r\n    private _readySound: cc.AudioClip;\r\n\r\n    private _boySound: string;\r\n    private _girlSound: string;\r\n\r\n    private _boy3D: fgui.GLoader3D;\r\n\r\n    private _girl3D: fgui.GLoader3D;\r\n\r\n    private _readyGroup: fgui.GGroup;\r\n    private _ready: fgui.GImage;\r\n    private _go: fgui.GImage;\r\n    private _over: fgui.GGroup;\r\n\r\n    private _clickTotalLimit: number = 0.5;\r\n\r\n    private feedbackType: any = cc.Enum({\r\n\r\n        No: 0,\r\n        GuideShow: 1,\r\n        WrongFeed: 2,\r\n        RightFeed: 3\r\n    });\r\n\r\n    // 远程动态组件\r\n    private feedback: any;\r\n\r\n    private _state = {};\r\n\r\n    get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    set state(v: any) {\r\n        this.updateUi(this._state, v);\r\n        this._state = v;\r\n        this.mergeState();\r\n    }\r\n\r\n    async onLoad() {\r\n        this._worldRoot = cc.find(\"Canvas\").parent;\r\n\r\n        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n\r\n        fgui.GRoot.inst.addChild(this._view);\r\n\r\n        this.myFoodPools = [];\r\n\r\n        this._c1 = this._view.getController(\"c1\");\r\n        this._c2 = this._view.getController(\"c2\");\r\n\r\n        // 臨時\r\n        // bug 初始设置不播放不生效\r\n        if (this._c1) {\r\n            this._c1.selectedIndex = 1;\r\n            this._c1.selectedIndex = 0;\r\n        }\r\n\r\n        this.timeText = this._view.getChild(\"n32\").asLabel;\r\n        this.timeText.text = this._gameTime + '';\r\n\r\n        this._readyGroup = this._view.getChild('readyGroup').asGroup;\r\n        this._ready = this._view.getChild('ready').asImage;\r\n        this._go = this._view.getChild('go').asImage;\r\n        this._over = this._view.getChild('over').asGroup;\r\n\r\n        this._readyGroup.visible = false;\r\n        this._ready.visible = false;\r\n        this._go.visible = false;\r\n        this._over.visible = false;\r\n\r\n        this._boy3D = this._view.getChild('boy') as fgui.GLoader3D;\r\n        this._girl3D = this._view.getChild('girl') as fgui.GLoader3D;\r\n\r\n        this._boy3D.url = \"ui://733aoo45gzaz6z\";\r\n        this._girl3D.url = \"ui://733aoo45gzaz6z\";\r\n\r\n        this._boy3D.animationName = 'b_idle';\r\n        this._girl3D.animationName = 'g_idle';\r\n\r\n        this._boy3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n        this._girl3D.on(fgui.Event.CLICK, this._clickElves, this);\r\n\r\n        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n\r\n        this._title = this._view.getChild(\"title\").asButton;\r\n\r\n        this._playBtn = this._view.getChild(\"play\").asButton;\r\n        if (this._playBtn) this._playBtn.on(fgui.Event.CLICK, this._clickStartPlay, this);\r\n        this._playBtn.enabled = false;\r\n\r\n        let boyFoodGroup = this._view.getChild(\"boyFood\").asGroup;\r\n        for (let i = 0; i < this._view.numChildren; i++) {\r\n            if (this._view.getChildAt(i).group == boyFoodGroup) {\r\n                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n                btn.alpha = 0;\r\n                this._boyFood.push(btn);\r\n            }\r\n        }\r\n\r\n        let girlFoodGroup = this._view.getChild(\"girlFood\").asGroup;\r\n        for (let i = 0; i < this._view.numChildren; i++) {\r\n            if (this._view.getChildAt(i).group == girlFoodGroup) {\r\n                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n                btn.alpha = 0;\r\n                this._girlFood.push(btn);\r\n            }\r\n        }\r\n\r\n        let rigthTotalTemp = {};\r\n        let temp = {};\r\n        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n            temp = { 'clickTotle': 0, 'showTotal': 0, 'percent': 0 };\r\n            rigthTotalTemp[this._rightIndexs[i]] = temp;\r\n        }\r\n        // 初始化state\r\n        this._state = {\r\n            title: false,\r\n            elvesPlay: false,\r\n            rightSoundFile: [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }],\r\n            gameCanPlay: false,\r\n            gameOver: false,\r\n            gameStart: false,\r\n            submitFeedback: this.feedbackType.No,\r\n            gameTime: 0,\r\n            clickFoodTag: -1,\r\n            rigthTotal: rigthTotalTemp,\r\n        }\r\n    }\r\n\r\n    async init(data: any) {\r\n        // 临时 model component json 配置加载\r\n        let { pathConfig, model, components } = data;\r\n        let Package = pathConfig.packageName;\r\n        let GComponent = model.uiPath;\r\n        let { gameFood, rightIndexs, boySoundPath, girlSoundPath } = model.config;\r\n        this._package = Package;\r\n\r\n        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n\r\n        if (gameFood) this._gameFood = gameFood;\r\n        if (rightIndexs) this._rightIndexs = rightIndexs;\r\n\r\n        let item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754m');\r\n        this._gameMusic = await loadResource(item.file, cc.AudioClip);\r\n\r\n        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754p');\r\n        this._wrongSound = await loadResource(item.file, cc.AudioClip);\r\n\r\n        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754o');\r\n        this._rightSound = await loadResource(item.file, cc.AudioClip);\r\n\r\n        this._boySound = fgui.UIPackage.getItemByURL(boySoundPath).file;\r\n\r\n        this._girlSound = fgui.UIPackage.getItemByURL(girlSoundPath).file;\r\n\r\n        item = fgui.UIPackage.getItemByURL('ui://733aoo45r3754n');\r\n        this._readySound = await loadResource(item.file, cc.AudioClip);\r\n\r\n        if (components) {\r\n            for (const key in components) {\r\n                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n                let componentBundle: any = await loadBundle(componentPath);\r\n                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n                this[key] = componentPrefab;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n\r\n        if (!this._gameStart || this._gameOver) {\r\n\r\n            return;\r\n        }\r\n        this._gameTime++;\r\n\r\n        if (this._gameTime === 2) {\r\n            this._gameTime = 0;\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.gameTime++;\r\n            this.updateState(state);\r\n        }\r\n    }\r\n\r\n    private foodDropAnimate(index: number, state: any) {\r\n\r\n        let isHave = false;\r\n        let food = null;\r\n        for (let i = 0; i < this.myFoodPools.length; i++) {\r\n\r\n            if (this.myFoodPools[i].data.index === index && !this.myFoodPools[i].data.isShow) {\r\n                isHave = true;\r\n                food = this.myFoodPools[i];\r\n                let temp111 = { index: food.data.index, isShow: true, total: food.data.total + 1, tag: food.data.tag };\r\n                food.data = temp111;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!isHave) {\r\n            food = fgui.UIPackage.createObject(this._package, this._gameFood[index]).asButton;\r\n            food.on(fgui.Event.CLICK, this._clickDropFood, this);\r\n            let totalInit = 1;\r\n            let isHa = false;\r\n            for (let i = 0; i < this.myFoodPools.length; i++) {\r\n\r\n                if (this.myFoodPools[i].data.index === index) {\r\n                    isHa = true;\r\n                    totalInit = this.myFoodPools[i].data.total + 1;\r\n                    break;\r\n                }\r\n\r\n            }\r\n            let temp = { index: index, isShow: true, total: totalInit, tag: this._foodTag };\r\n            food.data = temp;\r\n            this._view.addChild(food);\r\n            this.myFoodPools.push(food);\r\n            this._foodTag++;\r\n        }\r\n\r\n        // 1058 ----1693 Math.floor(Math.random()*(max-min+1)+min)\r\n        let randPosX: number = Math.floor(Math.random() * (1685 - 1065 + 1) + 1065);\r\n        food.x = randPosX;\r\n        food.y = 100;\r\n        food.visible = true;\r\n\r\n        cc.tween(food)\r\n            .to(this._dropSpeed, { x: food.x, y: 970 })\r\n            .call(() => {\r\n                food.y = 100;\r\n                food.visible = false;\r\n                food.data.isShow = false;\r\n\r\n            })\r\n            .start();\r\n\r\n\r\n        for (let i = 0; i < this._rightIndexs.length; i++) {\r\n\r\n            if (this._rightIndexs[i] === index) {\r\n\r\n                let state1: any = globalThis._.cloneDeep(this._state);\r\n                state1.rigthTotal[index].showTotal = food.data.total;\r\n                console.log('==== AAAAAAAA ===' + state1.rigthTotal[index].showTotal + '== index ==' + index);\r\n                this.updateState(state1);\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private _clickDropFood(evt: any) {\r\n\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n\r\n        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n        let btn = obj.asButton;\r\n        state.clickFoodTag = btn.data.tag;\r\n        this.updateState(state);\r\n\r\n    }\r\n\r\n    private _clickElves(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n        if (btn.name === 'boy') {\r\n\r\n            state.rightSoundFile = [{ sex: 1, file: this._boySound }, { sex: 2, file: this._girlSound }];\r\n\r\n        } else {\r\n\r\n            state.rightSoundFile = [{ sex: 2, file: this._girlSound }, { sex: 1, file: this._boySound }];\r\n        }\r\n        state.elvesPlay = true;\r\n        this.updateState(state);\r\n    }\r\n\r\n    private _clickStartPlay(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        state.play = true;\r\n        this.updateState(state);\r\n    }\r\n\r\n    private _clickTitle(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        state.title = true;\r\n        this.updateState(state);\r\n    }\r\n\r\n\r\n    // 获取状态\r\n    getState(data: any) {\r\n        this.updateState(data);\r\n    }\r\n\r\n    // 更新状态层\r\n    updateState(curState: any) {\r\n        if (globalThis._.isEqual(this._state, curState)) return;\r\n        this.state = curState;\r\n    }\r\n\r\n    // 更新ui层\r\n    updateUi(oldState: any, state: any) {\r\n\r\n        if (!globalThis._.isEqual(oldState.elvesPlay, state.elvesPlay)) {\r\n            if (state.elvesPlay) {\r\n                this.playElvesSpeak(state.elvesPlay, state.rightSoundFile);\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.maskOver, state.maskOver)) {\r\n\r\n            this._maskOver.visible = state.maskOver;\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.gameStart, state.gameStart)) {\r\n            this._gameStart = state.gameStart;\r\n            if (state.gameStart && !state.gameOver) {\r\n                let boy = this._view.getChild(\"boy\").asButton;\r\n                let girl = this._view.getChild(\"girl\").asButton;\r\n                boy.touchable = false;\r\n                girl.touchable = false;\r\n\r\n                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n\r\n                    this.myFoodPools[i].removeFromParent();\r\n                }\r\n                this.myFoodPools = [];\r\n                this._foodTag = 1;\r\n                cc.audioEngine.playMusic(this._gameMusic, true);\r\n\r\n                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                this.foodDropAnimate(randIndex, state);\r\n\r\n            } else {\r\n                let boy = this._view.getChild(\"boy\").asButton;\r\n                let girl = this._view.getChild(\"girl\").asButton;\r\n                boy.touchable = true;\r\n                girl.touchable = true;\r\n                cc.audioEngine.stopMusic();\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.play, state.play)) {\r\n\r\n            if (state.play) {\r\n                this._playBtn.visible = false;\r\n                this._readyGroup.visible = true;\r\n                this._ready.visible = true;\r\n                cc.tween(this)\r\n                    .delay(0.7)\r\n                    .call(() => {\r\n                        this._go.visible = true;\r\n                        this._ready.visible = false;\r\n                    })\r\n                    .start();\r\n\r\n                let audioId = cc.audioEngine.play(this._readySound, false, 1);\r\n                cc.audioEngine.setFinishCallback(audioId, () => {\r\n\r\n                    this._readyGroup.visible = false;\r\n\r\n                    let state1: any = globalThis._.cloneDeep(this._state);\r\n                    state1.gameStart = true;\r\n                    this.updateState(state1);\r\n                });\r\n\r\n            } else {\r\n                this._readyGroup.visible = false;\r\n                this._playBtn.visible = true;\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.gameOver, state.gameOver)) {\r\n\r\n            this._gameOver = state.gameOver;\r\n            if (state.gameOver) {\r\n                let boy = this._view.getChild(\"boy\").asButton;\r\n                let girl = this._view.getChild(\"girl\").asButton;\r\n                boy.touchable = false;\r\n                girl.touchable = false;\r\n                this._over.visible = true;\r\n            } else {\r\n\r\n                this._over.visible = false;\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.clickFoodTag, state.clickFoodTag)) {\r\n\r\n            if (state.clickFoodTag) {\r\n\r\n                let btn = null;\r\n                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n\r\n                    if (state.clickFoodTag === this.myFoodPools[i].data.tag) {\r\n                        btn = this.myFoodPools[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (btn) {\r\n\r\n                    // 是正确的\r\n                    let isRight = false;\r\n                    for (let i = 0; i < this._rightIndexs.length; i++) {\r\n                        if (btn.data.index === this._rightIndexs[i]) {\r\n                            isRight = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (isRight) {\r\n\r\n                        //点击正确\r\n                        btn.icon = 'ui://733aoo45r3753l';\r\n                        btn.data.isShow = true;\r\n                        cc.tween(this)\r\n                            .delay(0.15)\r\n                            .call(() => {\r\n\r\n                                let indexTemp = btn.data.index;\r\n\r\n                                for (let i = 0; i < this.myFoodPools.length; i++) {\r\n                                    if (this.myFoodPools[i] === btn) {\r\n                                        this.myFoodPools.splice(i, 1);\r\n                                        btn.removeFromParent();\r\n                                        break;\r\n                                    }\r\n                                }\r\n\r\n                                let state2: any = globalThis._.cloneDeep(this._state);\r\n                                state2.rigthTotal[indexTemp].clickTotle++;\r\n                                this.updateState(state2);\r\n\r\n                            })\r\n                            .start()\r\n                        cc.audioEngine.playEffect(this._rightSound, false);\r\n\r\n\r\n\r\n                    } else {\r\n\r\n                        //点击错误\r\n                        cc.audioEngine.playEffect(this._wrongSound, false);\r\n\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.submitFeedback, state.submitFeedback)) {\r\n\r\n            if (state.submitFeedback === this.feedbackType.RightFeed) {\r\n\r\n                this.answerFeedback(true);\r\n\r\n            } else if (state.submitFeedback === this.feedbackType.WrongFeed) {\r\n\r\n                this.answerFeedback(false);\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.gameCanPlay, state.gameCanPlay)) {\r\n\r\n            if (state.gameCanPlay) {\r\n\r\n                this._playBtn.enabled = true;\r\n\r\n            } else {\r\n\r\n                this._playBtn.enabled = false;\r\n            }\r\n        }\r\n\r\n\r\n        if (!globalThis._.isEqual(oldState.gameTime, state.gameTime)) {\r\n            if (state.gameTime >= 60 * 15) {\r\n\r\n                let state1: any = globalThis._.cloneDeep(this._state);\r\n                let isFail = false;\r\n                for (var key in state.rigthTotal) {\r\n\r\n                    state.rigthTotal[key].percent = state.rigthTotal[key].clickTotle / state.rigthTotal[key].showTotal;\r\n                    if (state.rigthTotal[key].percent <= 0.5) {\r\n                        isFail = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (isFail) {\r\n\r\n                    state1.submitFeedback = this.feedbackType.WrongFeed;\r\n\r\n                } else {\r\n\r\n                    state1.submitFeedback = this.feedbackType.RightFeed;\r\n\r\n                }\r\n\r\n                state1.gameOver = true;\r\n                this.updateState(state1);\r\n                return;\r\n            }\r\n\r\n            this._interTime++;\r\n            if (state.gameTime <= 5 * 60) {\r\n\r\n                this._dropSpeed = 3.0; // 2.5 ----> 60*1.5\r\n                this._interTimeLimit = 60 * 1.5;\r\n\r\n            } else if (state.gameTime > 5 * 60 && state.gameTime <= 10 * 60) {\r\n\r\n                this._dropSpeed = 2.3;\r\n                //2.0 ----> 60 * 0.6\r\n                this._interTimeLimit = 60 * 0.7;\r\n\r\n            } else if (state.gameTime > 10 * 60) {\r\n\r\n                this._dropSpeed = 1.8; // 1.8 ----> 60 * 0.4\r\n                this._interTimeLimit = 60 * 0.5;\r\n            }\r\n            if (this._interTime >= this._interTimeLimit) {\r\n                this._interTime = 0;\r\n                // 获取正确字母数组中的2个字母 可均衡获取0到length的随机整数。\r\n                let randIndex: number = Math.floor(Math.random() * this._gameFood.length);\r\n                this.foodDropAnimate(randIndex, state);\r\n            }\r\n            this.timeText.text = parseInt(state.gameTime / 60 + '') + 's';\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n            this.playTitle(state.title);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async playTitle(bool: boolean) {\r\n        this._c1.selectedIndex = bool ? 1 : 0;\r\n        if (bool) {\r\n            cc.audioEngine.stopAll();\r\n            this.forbidHandle();\r\n            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n            let audioId = cc.audioEngine.play(audio, false, 1);\r\n            cc.audioEngine.setFinishCallback(audioId, () => {\r\n                let state: any = globalThis._.cloneDeep(this._state);\r\n                state.title = false;\r\n                this.updateState(state);\r\n            });\r\n        } else {\r\n            this.disableForbidHandle();\r\n        }\r\n    }\r\n\r\n    playElvesSpeak(bool: boolean, rightSoundFile: any) {\r\n        if (bool) {\r\n            cc.audioEngine.stopAll();\r\n            this.forbidHandle();\r\n            this.playRightSound(0, rightSoundFile);\r\n\r\n        } else {\r\n            this._c2.selectedIndex = 0;\r\n            this.disableForbidHandle();\r\n        }\r\n    }\r\n\r\n    async playRightSound(curIndex: number, rightSoundFile: any) {\r\n\r\n        let foodArr = [];\r\n        if (rightSoundFile[curIndex].sex === 1) {\r\n\r\n            foodArr = this._boyFood;\r\n            this._boy3D.animationName = 'b_speak';\r\n\r\n        } else {\r\n            foodArr = this._girlFood;\r\n            this._girl3D.animationName = 'g_speak';\r\n        }\r\n\r\n        cc.tween(this)\r\n            .delay(0.5)\r\n            .call(() => {\r\n\r\n                this._c2.selectedIndex = rightSoundFile[curIndex].sex;\r\n                this.playFoodShowAnimate(0, foodArr);\r\n            })\r\n            .start();\r\n\r\n        let audio: cc.AudioClip = await loadResource(rightSoundFile[curIndex].file, cc.AudioClip);\r\n        let audioId = cc.audioEngine.play(audio, false, 1);\r\n        cc.audioEngine.setFinishCallback(audioId, () => {\r\n\r\n            if (rightSoundFile[curIndex].sex === 1) {\r\n\r\n                this._boy3D.animationName = 'b_idle';\r\n\r\n            } else {\r\n                this._girl3D.animationName = 'g_idle';\r\n            }\r\n\r\n            if (curIndex >= rightSoundFile.length - 1) {\r\n                this.disableForbidHandle();\r\n                this._c2.selectedIndex = 0;\r\n                let state: any = globalThis._.cloneDeep(this._state);\r\n                state.elvesPlay = false;\r\n                state.gameCanPlay = true;\r\n                this.updateState(state);\r\n                for (let i = 0; i < this._boyFood.length; i++) {\r\n                    this._boyFood[i].alpha = 0;\r\n                }\r\n                for (let i = 0; i < this._girlFood.length; i++) {\r\n                    this._girlFood[i].alpha = 0;\r\n                }\r\n\r\n            } else {\r\n\r\n                curIndex++;\r\n                this.playRightSound(curIndex, rightSoundFile);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    playFoodShowAnimate(index: number, foodArr: any) {\r\n\r\n        cc.tween(foodArr[index])\r\n            .to(1.0, { alpha: 1 })\r\n            .call(() => {\r\n                index++;\r\n                if (index < foodArr.length) {\r\n                    this.playFoodShowAnimate(index, foodArr);\r\n                }\r\n            })\r\n            .start()\r\n\r\n    }\r\n\r\n    answerFeedback(bool: boolean) {\r\n        if (!this.feedback) return;\r\n        let feedback: any = cc.instantiate(this.feedback);\r\n        feedback.x = 960;\r\n        feedback.y = 540;\r\n        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n        feedbackJs.init(bool);\r\n        feedback.parent = cc.find(\"Canvas\").parent;\r\n\r\n        setTimeout(() => {\r\n            feedback.destroy();\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.submitFeedback = this.feedbackType.No;\r\n            this.updateState(state);\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    /**\r\n     * 点击指引\r\n     * @param obj 点击对象\r\n     */\r\n    handTips2(obj: fgui.GObject) {\r\n        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n        this._view.addChild(hand);\r\n        let tempX = obj.x + obj.width / 2;\r\n        let tempY = obj.y + obj.height / 2;\r\n\r\n        hand.x = tempX;\r\n        hand.y = tempY;\r\n\r\n        cc.tween(hand).to(0.3, {\r\n            x: tempX - 30,\r\n            y: tempY - 30\r\n        }).to(0.3, {\r\n            x: tempX,\r\n            y: tempY\r\n        }).to(0.3, {\r\n            x: tempX - 30,\r\n            y: tempY - 30\r\n        }).to(0.3, {\r\n            x: tempX,\r\n            y: tempY\r\n        }).call(() => {\r\n            this._view.removeChild(hand);\r\n            hand = null;\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.submit = this.feedbackType.No;\r\n            this.updateState(state)\r\n        }).start();\r\n    }\r\n\r\n    // 运行时 禁止操作\r\n    forbidHandle() {\r\n        console.log('===  运行时 禁止操作 =====');\r\n        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n        if (!handleMask) {\r\n            let handleMask = new cc.Node('handleMask');\r\n            handleMask.addComponent(cc.BlockInputEvents);\r\n            handleMask.parent = this._worldRoot;\r\n            handleMask.width = 1920;\r\n            handleMask.height = 1080;\r\n            handleMask.x = 960;\r\n            handleMask.y = 540;\r\n        }\r\n    }\r\n\r\n    // 消除禁止\r\n    disableForbidHandle() {\r\n        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n        if (handleMask) handleMask.destroy();\r\n    }\r\n\r\n    // 注册状态，及获取状态的方法\r\n    registerState() {\r\n        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n    }\r\n\r\n    // 解除状态，及获取状态的方法\r\n    relieveState() {\r\n        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n    }\r\n\r\n    // 本组件状态合并到全局\r\n    mergeState() {\r\n        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n    }\r\n\r\n    onEnable() {\r\n        this.registerState();\r\n    }\r\n\r\n    onDisable() {\r\n        this.relieveState();\r\n        cc.audioEngine.stopAll();\r\n    }\r\n}\r\n"
        }
    ]
}