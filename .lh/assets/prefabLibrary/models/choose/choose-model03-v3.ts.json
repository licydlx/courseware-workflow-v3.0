{
    "sourceFile": "assets/prefabLibrary/models/choose/choose-model03-v3.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1623989583823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1623990095661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,479 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v3 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _paoShow: any = [];\r\n+\r\n+    private _chooseBtn: any = [];\r\n+\r\n+    private _selectIcons: any = [];\r\n+\r\n+    private _chooseCach: any = [];\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private _boxSound: cc.AudioClip;\r\n+\r\n+    private _mask: fgui.GGraph;\r\n+\r\n+    private _guidIndex: number = 0;\r\n+\r\n+    private _box3D: fgui.GLoader3D;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+\r\n+        this._mask = this._view.getChild('maskBg').asGraph;\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n+        this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n+        this._box3D.url = \"ui://733aoo45gzaz75\";\r\n+        this._box3D.animationName = 'sjq_idle';\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let paoGroup = this._view.getChild(\"pao\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == paoGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._paoShow.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let chooseGroup = this._view.getChild(\"choose\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == chooseGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.data = { index: this._chooseCach.length };\r\n+                let temp = { index: this._chooseCach.length, selected: false };\r\n+                this._chooseCach.push(temp);\r\n+                this._chooseBtn.push(btn);\r\n+                btn.on(fgui.Event.CLICK, this._clickChoose, this);\r\n+            }\r\n+        }\r\n+\r\n+        let selectedGroup = this._view.getChild(\"select\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == selectedGroup) {\r\n+                let icon: fgui.GImage = this._view.getChildAt(i).asImage;\r\n+                icon.visible = false;\r\n+                this._selectIcons.push(icon);\r\n+            }\r\n+        }\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            boxPlay: false,\r\n+            canChoose: false,\r\n+            chooseCach: this._chooseCach,\r\n+            submit: this.submitType.No,\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n+        this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (guidIndex) this._guidIndex = guidIndex;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    private _clickChoose(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn: fgui.GButton = obj.asButton;\r\n+\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+            state.chooseCach[i].selected = false;\r\n+        }\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+            if (state.chooseCach[i].index === btn.data.index) {\r\n+                state.chooseCach[i].selected = true;\r\n+                break;\r\n+            }\r\n+        }\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let isHave = 0;\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+            if (state.chooseCach[i].selected) {\r\n+                isHave++;\r\n+            }\r\n+        }\r\n+\r\n+        if (isHave === 0) {\r\n+            state.submit = this.submitType.GuideShow;\r\n+        } else if (isHave === 1) {\r\n+\r\n+            state.submit = this.submitType.WrongFeed;\r\n+\r\n+            for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+                if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n+\r\n+                    state.submit = this.submitType.RightFeed;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+        } else {\r\n+            state.submit = this.submitType.WrongFeed;\r\n+        }\r\n+\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickBox(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.boxPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.boxPlay, state.boxPlay)) {\r\n+            if (state.boxPlay) {\r\n+                this.playBoxSpeak(state.boxPlay);\r\n+            } else {\r\n+                this._box3D.animationName = 'sjq_idle';\r\n+                this._c2.selectedIndex = 0;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n+\r\n+            for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+                for (let j = 0; j < this._selectIcons.length; j++) {\r\n+                    if (state.chooseCach[i].index === j) {\r\n+                        this._selectIcons[j].visible = state.chooseCach[i].selected;\r\n+                        break;\r\n+                    }\r\n+                }\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                this.handTips2(this._chooseBtn[this._guidIndex]);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.canChoose, state.canChoose)) {\r\n+            this._mask.visible = !state.canChoose;\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playBoxSpeak(bool: boolean) {\r\n+        if (bool) {\r\n+\r\n+            this._box3D.animationName = 'sjq_idle1to2';\r\n+\r\n+            cc.tween(this._box3D)\r\n+                .delay(0.3)\r\n+                .call(() => {\r\n+                    this._box3D.animationName = 'sjq_idle2';\r\n+                })\r\n+                .start()\r\n+\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playBoxSound();\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playBoxSound() {\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = 1;\r\n+                this.playPaoShowAnimate(0);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audioId = cc.audioEngine.play(this._boxSound, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+            this._box3D.animationName = 'sjq_idle';\r\n+            this.disableForbidHandle();\r\n+            this._c2.selectedIndex = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.boxPlay = false;\r\n+            state.canChoose = true;\r\n+            this.updateState(state);\r\n+            for (let i = 0; i < this._paoShow.length; i++) {\r\n+                this._paoShow[i].alpha = 0;\r\n+            }\r\n+        });\r\n+    }\r\n+\r\n+    playPaoShowAnimate(index: number) {\r\n+\r\n+        cc.tween(this._paoShow[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < this._paoShow.length) {\r\n+                    this.playPaoShowAnimate(index);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1623993713150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -259,487 +259,13 @@\n                 this._c2.selectedIndex = 0;\r\n             }\r\n         }\r\n \r\n-        if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n+        if (!globalThis._.isEqual(oldState.maskOver, state.maskOver)) {\r\n \r\n-            for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-                for (let j = 0; j < this._selectIcons.length; j++) {\r\n-                    if (state.chooseCach[i].index === j) {\r\n-                        this._selectIcons[j].visible = state.chooseCach[i].selected;\r\n-                        break;\r\n-                    }\r\n-                }\r\n-            }\r\n+            this._maskOver.visible = state.maskOver;\r\n         }\r\n \r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                this.handTips2(this._chooseBtn[this._guidIndex]);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.canChoose, state.canChoose)) {\r\n-            this._mask.visible = !state.canChoose;\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playBoxSpeak(bool: boolean) {\r\n-        if (bool) {\r\n-\r\n-            this._box3D.animationName = 'sjq_idle1to2';\r\n-\r\n-            cc.tween(this._box3D)\r\n-                .delay(0.3)\r\n-                .call(() => {\r\n-                    this._box3D.animationName = 'sjq_idle2';\r\n-                })\r\n-                .start()\r\n-\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playBoxSound();\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playBoxSound() {\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = 1;\r\n-                this.playPaoShowAnimate(0);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audioId = cc.audioEngine.play(this._boxSound, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-            this._box3D.animationName = 'sjq_idle';\r\n-            this.disableForbidHandle();\r\n-            this._c2.selectedIndex = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.boxPlay = false;\r\n-            state.canChoose = true;\r\n-            this.updateState(state);\r\n-            for (let i = 0; i < this._paoShow.length; i++) {\r\n-                this._paoShow[i].alpha = 0;\r\n-            }\r\n-        });\r\n-    }\r\n-\r\n-    playPaoShowAnimate(index: number) {\r\n-\r\n-        cc.tween(this._paoShow[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < this._paoShow.length) {\r\n-                    this.playPaoShowAnimate(index);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v3 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _paoShow: any = [];\r\n-\r\n-    private _chooseBtn: any = [];\r\n-\r\n-    private _selectIcons: any = [];\r\n-\r\n-    private _chooseCach: any = [];\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private _boxSound: cc.AudioClip;\r\n-\r\n-    private _mask: fgui.GGraph;\r\n-\r\n-    private _guidIndex: number = 0;\r\n-\r\n-    private _box3D: fgui.GLoader3D;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-\r\n-        this._mask = this._view.getChild('maskBg').asGraph;\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n-        this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n-        this._box3D.url = \"ui://733aoo45gzaz75\";\r\n-        this._box3D.animationName = 'sjq_idle';\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let paoGroup = this._view.getChild(\"pao\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == paoGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._paoShow.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let chooseGroup = this._view.getChild(\"choose\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == chooseGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.data = { index: this._chooseCach.length };\r\n-                let temp = { index: this._chooseCach.length, selected: false };\r\n-                this._chooseCach.push(temp);\r\n-                this._chooseBtn.push(btn);\r\n-                btn.on(fgui.Event.CLICK, this._clickChoose, this);\r\n-            }\r\n-        }\r\n-\r\n-        let selectedGroup = this._view.getChild(\"select\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == selectedGroup) {\r\n-                let icon: fgui.GImage = this._view.getChildAt(i).asImage;\r\n-                icon.visible = false;\r\n-                this._selectIcons.push(icon);\r\n-            }\r\n-        }\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            boxPlay: false,\r\n-            canChoose: false,\r\n-            chooseCach: this._chooseCach,\r\n-            submit: this.submitType.No,\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n-        this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (guidIndex) this._guidIndex = guidIndex;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    private _clickChoose(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn: fgui.GButton = obj.asButton;\r\n-\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-            state.chooseCach[i].selected = false;\r\n-        }\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-            if (state.chooseCach[i].index === btn.data.index) {\r\n-                state.chooseCach[i].selected = true;\r\n-                break;\r\n-            }\r\n-        }\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let isHave = 0;\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-            if (state.chooseCach[i].selected) {\r\n-                isHave++;\r\n-            }\r\n-        }\r\n-\r\n-        if (isHave === 0) {\r\n-            state.submit = this.submitType.GuideShow;\r\n-        } else if (isHave === 1) {\r\n-\r\n-            state.submit = this.submitType.WrongFeed;\r\n-\r\n-            for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-                if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n-\r\n-                    state.submit = this.submitType.RightFeed;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-        } else {\r\n-            state.submit = this.submitType.WrongFeed;\r\n-        }\r\n-\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickBox(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.boxPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.boxPlay, state.boxPlay)) {\r\n-            if (state.boxPlay) {\r\n-                this.playBoxSpeak(state.boxPlay);\r\n-            } else {\r\n-                this._box3D.animationName = 'sjq_idle';\r\n-                this._c2.selectedIndex = 0;\r\n-            }\r\n-        }\r\n-\r\n         if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n \r\n             for (let i = 0; i < state.chooseCach.length; i++) {\r\n \r\n"
                },
                {
                    "date": 1623993841286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,8 +136,9 @@\n             boxPlay: false,\r\n             canChoose: false,\r\n             chooseCach: this._chooseCach,\r\n             submit: this.submitType.No,\r\n+            maskOver: false\r\n         }\r\n     }\r\n \r\n     async init(data: any) {\r\n"
                },
                {
                    "date": 1623993854823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,10 @@\n     private _guidIndex: number = 0;\r\n \r\n     private _box3D: fgui.GLoader3D;\r\n \r\n+    private _maskOver: fgui.GGraph;\r\n+\r\n     private submitType: any = cc.Enum({\r\n \r\n         No: 0,\r\n         GuideShow: 1,\r\n"
                },
                {
                    "date": 1623993886406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,8 +88,11 @@\n             this._c1.selectedIndex = 1;\r\n             this._c1.selectedIndex = 0;\r\n         }\r\n \r\n+        this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n+        this._maskOver.visible = false;\r\n+\r\n         this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n         this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n         this._box3D.url = \"ui://733aoo45gzaz75\";\r\n         this._box3D.animationName = 'sjq_idle';\r\n"
                },
                {
                    "date": 1623993929303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,8 +218,9 @@\n \r\n                 if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n \r\n                     state.submit = this.submitType.RightFeed;\r\n+                    state.maskOver = true;\r\n                     break;\r\n                 }\r\n             }\r\n \r\n"
                },
                {
                    "date": 1623994193306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,491 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v3 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _paoShow: any = [];\r\n+\r\n+    private _chooseBtn: any = [];\r\n+\r\n+    private _selectIcons: any = [];\r\n+\r\n+    private _chooseCach: any = [];\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private _boxSound: cc.AudioClip;\r\n+\r\n+    private _mask: fgui.GGraph;\r\n+\r\n+    private _guidIndex: number = 0;\r\n+\r\n+    private _box3D: fgui.GLoader3D;\r\n+\r\n+    private _maskOver: fgui.GGraph;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+\r\n+        this._mask = this._view.getChild('maskBg').asGraph;\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n+        this._maskOver.visible = false;\r\n+\r\n+        this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n+        this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n+        this._box3D.url = \"ui://733aoo45gzaz75\";\r\n+        this._box3D.animationName = 'sjq_idle';\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let paoGroup = this._view.getChild(\"pao\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == paoGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._paoShow.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let chooseGroup = this._view.getChild(\"choose\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == chooseGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.data = { index: this._chooseCach.length };\r\n+                let temp = { index: this._chooseCach.length, selected: false };\r\n+                this._chooseCach.push(temp);\r\n+                this._chooseBtn.push(btn);\r\n+                btn.on(fgui.Event.CLICK, this._clickChoose, this);\r\n+            }\r\n+        }\r\n+\r\n+        let selectedGroup = this._view.getChild(\"select\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == selectedGroup) {\r\n+                let icon: fgui.GImage = this._view.getChildAt(i).asImage;\r\n+                icon.visible = false;\r\n+                this._selectIcons.push(icon);\r\n+            }\r\n+        }\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            boxPlay: false,\r\n+            canChoose: false,\r\n+            chooseCach: this._chooseCach,\r\n+            submit: this.submitType.No,\r\n+            maskOver: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n+        this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (guidIndex) this._guidIndex = guidIndex;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    private _clickChoose(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn: fgui.GButton = obj.asButton;\r\n+\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+            state.chooseCach[i].selected = false;\r\n+        }\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+            if (state.chooseCach[i].index === btn.data.index) {\r\n+                state.chooseCach[i].selected = true;\r\n+                break;\r\n+            }\r\n+        }\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let isHave = 0;\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+            if (state.chooseCach[i].selected) {\r\n+                isHave++;\r\n+            }\r\n+        }\r\n+\r\n+        if (isHave === 0) {\r\n+            state.submit = this.submitType.GuideShow;\r\n+        } else if (isHave === 1) {\r\n+\r\n+            state.submit = this.submitType.WrongFeed;\r\n+\r\n+            for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+                if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n+\r\n+                    state.submit = this.submitType.RightFeed;\r\n+                    state.maskOver = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+        } else {\r\n+            state.submit = this.submitType.WrongFeed;\r\n+        }\r\n+\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickBox(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.boxPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.boxPlay, state.boxPlay)) {\r\n+            if (state.boxPlay) {\r\n+                this.playBoxSpeak(state.boxPlay);\r\n+            } else {\r\n+                this._box3D.animationName = 'sjq_idle';\r\n+                this._c2.selectedIndex = 0;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.maskOver, state.maskOver)) {\r\n+\r\n+            this._maskOver.visible = state.maskOver;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n+\r\n+            for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+                for (let j = 0; j < this._selectIcons.length; j++) {\r\n+                    if (state.chooseCach[i].index === j) {\r\n+                        this._selectIcons[j].visible = state.chooseCach[i].selected;\r\n+                        break;\r\n+                    }\r\n+                }\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                this.handTips2(this._chooseBtn[this._guidIndex]);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.canChoose, state.canChoose)) {\r\n+            this._mask.visible = !state.canChoose;\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playBoxSpeak(bool: boolean) {\r\n+        if (bool) {\r\n+\r\n+            this._box3D.animationName = 'sjq_idle1to2';\r\n+\r\n+            cc.tween(this._box3D)\r\n+                .delay(0.3)\r\n+                .call(() => {\r\n+                    this._box3D.animationName = 'sjq_idle2';\r\n+                })\r\n+                .start()\r\n+\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playBoxSound();\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playBoxSound() {\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = 1;\r\n+                this.playPaoShowAnimate(0);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audioId = cc.audioEngine.play(this._boxSound, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+            this._box3D.animationName = 'sjq_idle';\r\n+            this.disableForbidHandle();\r\n+            this._c2.selectedIndex = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.boxPlay = false;\r\n+            state.canChoose = true;\r\n+            this.updateState(state);\r\n+            for (let i = 0; i < this._paoShow.length; i++) {\r\n+                this._paoShow[i].alpha = 0;\r\n+            }\r\n+        });\r\n+    }\r\n+\r\n+    playPaoShowAnimate(index: number) {\r\n+\r\n+        cc.tween(this._paoShow[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < this._paoShow.length) {\r\n+                    this.playPaoShowAnimate(index);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1623994252335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -488,495 +488,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v3 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _paoShow: any = [];\r\n-\r\n-    private _chooseBtn: any = [];\r\n-\r\n-    private _selectIcons: any = [];\r\n-\r\n-    private _chooseCach: any = [];\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private _boxSound: cc.AudioClip;\r\n-\r\n-    private _mask: fgui.GGraph;\r\n-\r\n-    private _guidIndex: number = 0;\r\n-\r\n-    private _box3D: fgui.GLoader3D;\r\n-\r\n-    private _maskOver: fgui.GGraph;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-\r\n-        this._mask = this._view.getChild('maskBg').asGraph;\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n-        this._maskOver.visible = false;\r\n-\r\n-        this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n-        this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n-        this._box3D.url = \"ui://733aoo45gzaz75\";\r\n-        this._box3D.animationName = 'sjq_idle';\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let paoGroup = this._view.getChild(\"pao\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == paoGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._paoShow.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let chooseGroup = this._view.getChild(\"choose\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == chooseGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.data = { index: this._chooseCach.length };\r\n-                let temp = { index: this._chooseCach.length, selected: false };\r\n-                this._chooseCach.push(temp);\r\n-                this._chooseBtn.push(btn);\r\n-                btn.on(fgui.Event.CLICK, this._clickChoose, this);\r\n-            }\r\n-        }\r\n-\r\n-        let selectedGroup = this._view.getChild(\"select\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == selectedGroup) {\r\n-                let icon: fgui.GImage = this._view.getChildAt(i).asImage;\r\n-                icon.visible = false;\r\n-                this._selectIcons.push(icon);\r\n-            }\r\n-        }\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            boxPlay: false,\r\n-            canChoose: false,\r\n-            chooseCach: this._chooseCach,\r\n-            submit: this.submitType.No,\r\n-            maskOver: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n-        this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (guidIndex) this._guidIndex = guidIndex;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    private _clickChoose(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn: fgui.GButton = obj.asButton;\r\n-\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-            state.chooseCach[i].selected = false;\r\n-        }\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-            if (state.chooseCach[i].index === btn.data.index) {\r\n-                state.chooseCach[i].selected = true;\r\n-                break;\r\n-            }\r\n-        }\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let isHave = 0;\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-            if (state.chooseCach[i].selected) {\r\n-                isHave++;\r\n-            }\r\n-        }\r\n-\r\n-        if (isHave === 0) {\r\n-            state.submit = this.submitType.GuideShow;\r\n-        } else if (isHave === 1) {\r\n-\r\n-            state.submit = this.submitType.WrongFeed;\r\n-\r\n-            for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-                if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n-\r\n-                    state.submit = this.submitType.RightFeed;\r\n-                    state.maskOver = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-        } else {\r\n-            state.submit = this.submitType.WrongFeed;\r\n-        }\r\n-\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickBox(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.boxPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.boxPlay, state.boxPlay)) {\r\n-            if (state.boxPlay) {\r\n-                this.playBoxSpeak(state.boxPlay);\r\n-            } else {\r\n-                this._box3D.animationName = 'sjq_idle';\r\n-                this._c2.selectedIndex = 0;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.maskOver, state.maskOver)) {\r\n-\r\n-            this._maskOver.visible = state.maskOver;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n-\r\n-            for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-                for (let j = 0; j < this._selectIcons.length; j++) {\r\n-                    if (state.chooseCach[i].index === j) {\r\n-                        this._selectIcons[j].visible = state.chooseCach[i].selected;\r\n-                        break;\r\n-                    }\r\n-                }\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                this.handTips2(this._chooseBtn[this._guidIndex]);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.canChoose, state.canChoose)) {\r\n-            this._mask.visible = !state.canChoose;\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playBoxSpeak(bool: boolean) {\r\n-        if (bool) {\r\n-\r\n-            this._box3D.animationName = 'sjq_idle1to2';\r\n-\r\n-            cc.tween(this._box3D)\r\n-                .delay(0.3)\r\n-                .call(() => {\r\n-                    this._box3D.animationName = 'sjq_idle2';\r\n-                })\r\n-                .start()\r\n-\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playBoxSound();\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playBoxSound() {\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = 1;\r\n-                this.playPaoShowAnimate(0);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audioId = cc.audioEngine.play(this._boxSound, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-            this._box3D.animationName = 'sjq_idle';\r\n-            this.disableForbidHandle();\r\n-            this._c2.selectedIndex = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.boxPlay = false;\r\n-            state.canChoose = true;\r\n-            this.updateState(state);\r\n-            for (let i = 0; i < this._paoShow.length; i++) {\r\n-                this._paoShow[i].alpha = 0;\r\n-            }\r\n-        });\r\n-    }\r\n-\r\n-    playPaoShowAnimate(index: number) {\r\n-\r\n-        cc.tween(this._paoShow[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < this._paoShow.length) {\r\n-                    this.playPaoShowAnimate(index);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1623994328468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,491 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v3 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _paoShow: any = [];\r\n+\r\n+    private _chooseBtn: any = [];\r\n+\r\n+    private _selectIcons: any = [];\r\n+\r\n+    private _chooseCach: any = [];\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private _boxSound: cc.AudioClip;\r\n+\r\n+    private _mask: fgui.GGraph;\r\n+\r\n+    private _guidIndex: number = 0;\r\n+\r\n+    private _box3D: fgui.GLoader3D;\r\n+\r\n+    private _maskOver: fgui.GGraph;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+\r\n+        this._mask = this._view.getChild('maskBg').asGraph;\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n+        this._maskOver.visible = false;\r\n+\r\n+        this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n+        this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n+        this._box3D.url = \"ui://733aoo45gzaz75\";\r\n+        this._box3D.animationName = 'sjq_idle';\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let paoGroup = this._view.getChild(\"pao\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == paoGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._paoShow.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let chooseGroup = this._view.getChild(\"choose\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == chooseGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.data = { index: this._chooseCach.length };\r\n+                let temp = { index: this._chooseCach.length, selected: false };\r\n+                this._chooseCach.push(temp);\r\n+                this._chooseBtn.push(btn);\r\n+                btn.on(fgui.Event.CLICK, this._clickChoose, this);\r\n+            }\r\n+        }\r\n+\r\n+        let selectedGroup = this._view.getChild(\"select\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == selectedGroup) {\r\n+                let icon: fgui.GImage = this._view.getChildAt(i).asImage;\r\n+                icon.visible = false;\r\n+                this._selectIcons.push(icon);\r\n+            }\r\n+        }\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            boxPlay: false,\r\n+            canChoose: false,\r\n+            chooseCach: this._chooseCach,\r\n+            submit: this.submitType.No,\r\n+            maskOver: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n+        this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (guidIndex) this._guidIndex = guidIndex;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    private _clickChoose(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn: fgui.GButton = obj.asButton;\r\n+\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+            state.chooseCach[i].selected = false;\r\n+        }\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+            if (state.chooseCach[i].index === btn.data.index) {\r\n+                state.chooseCach[i].selected = true;\r\n+                break;\r\n+            }\r\n+        }\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let isHave = 0;\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+            if (state.chooseCach[i].selected) {\r\n+                isHave++;\r\n+            }\r\n+        }\r\n+\r\n+        if (isHave === 0) {\r\n+            state.submit = this.submitType.GuideShow;\r\n+        } else if (isHave === 1) {\r\n+\r\n+            state.submit = this.submitType.WrongFeed;\r\n+\r\n+            for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+                if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n+\r\n+                    state.submit = this.submitType.RightFeed;\r\n+                    state.maskOver = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+        } else {\r\n+            state.submit = this.submitType.WrongFeed;\r\n+        }\r\n+\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickBox(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.boxPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.boxPlay, state.boxPlay)) {\r\n+            if (state.boxPlay) {\r\n+                this.playBoxSpeak(state.boxPlay);\r\n+            } else {\r\n+                this._box3D.animationName = 'sjq_idle';\r\n+                this._c2.selectedIndex = 0;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.maskOver, state.maskOver)) {\r\n+\r\n+            this._maskOver.visible = state.maskOver;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n+\r\n+            for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+                for (let j = 0; j < this._selectIcons.length; j++) {\r\n+                    if (state.chooseCach[i].index === j) {\r\n+                        this._selectIcons[j].visible = state.chooseCach[i].selected;\r\n+                        break;\r\n+                    }\r\n+                }\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                this.handTips2(this._chooseBtn[this._guidIndex]);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.canChoose, state.canChoose)) {\r\n+            this._mask.visible = !state.canChoose;\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playBoxSpeak(bool: boolean) {\r\n+        if (bool) {\r\n+\r\n+            this._box3D.animationName = 'sjq_idle1to2';\r\n+\r\n+            cc.tween(this._box3D)\r\n+                .delay(0.3)\r\n+                .call(() => {\r\n+                    this._box3D.animationName = 'sjq_idle2';\r\n+                })\r\n+                .start()\r\n+\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playBoxSound();\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playBoxSound() {\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = 1;\r\n+                this.playPaoShowAnimate(0);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audioId = cc.audioEngine.play(this._boxSound, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+            this._box3D.animationName = 'sjq_idle';\r\n+            this.disableForbidHandle();\r\n+            this._c2.selectedIndex = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.boxPlay = false;\r\n+            state.canChoose = true;\r\n+            this.updateState(state);\r\n+            for (let i = 0; i < this._paoShow.length; i++) {\r\n+                this._paoShow[i].alpha = 0;\r\n+            }\r\n+        });\r\n+    }\r\n+\r\n+    playPaoShowAnimate(index: number) {\r\n+\r\n+        cc.tween(this._paoShow[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < this._paoShow.length) {\r\n+                    this.playPaoShowAnimate(index);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624350074497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -366,507 +366,17 @@\n         let audioId = cc.audioEngine.play(this._boxSound, false, 1);\r\n         cc.audioEngine.setFinishCallback(audioId, () => {\r\n             this._box3D.animationName = 'sjq_idle';\r\n             this.disableForbidHandle();\r\n-            this._c2.selectedIndex = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.boxPlay = false;\r\n-            state.canChoose = true;\r\n-            this.updateState(state);\r\n             for (let i = 0; i < this._paoShow.length; i++) {\r\n                 this._paoShow[i].alpha = 0;\r\n             }\r\n-        });\r\n-    }\r\n-\r\n-    playPaoShowAnimate(index: number) {\r\n-\r\n-        cc.tween(this._paoShow[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < this._paoShow.length) {\r\n-                    this.playPaoShowAnimate(index);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v3 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _paoShow: any = [];\r\n-\r\n-    private _chooseBtn: any = [];\r\n-\r\n-    private _selectIcons: any = [];\r\n-\r\n-    private _chooseCach: any = [];\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private _boxSound: cc.AudioClip;\r\n-\r\n-    private _mask: fgui.GGraph;\r\n-\r\n-    private _guidIndex: number = 0;\r\n-\r\n-    private _box3D: fgui.GLoader3D;\r\n-\r\n-    private _maskOver: fgui.GGraph;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-\r\n-        this._mask = this._view.getChild('maskBg').asGraph;\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n-        this._maskOver.visible = false;\r\n-\r\n-        this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n-        this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n-        this._box3D.url = \"ui://733aoo45gzaz75\";\r\n-        this._box3D.animationName = 'sjq_idle';\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let paoGroup = this._view.getChild(\"pao\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == paoGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._paoShow.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let chooseGroup = this._view.getChild(\"choose\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == chooseGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.data = { index: this._chooseCach.length };\r\n-                let temp = { index: this._chooseCach.length, selected: false };\r\n-                this._chooseCach.push(temp);\r\n-                this._chooseBtn.push(btn);\r\n-                btn.on(fgui.Event.CLICK, this._clickChoose, this);\r\n-            }\r\n-        }\r\n-\r\n-        let selectedGroup = this._view.getChild(\"select\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == selectedGroup) {\r\n-                let icon: fgui.GImage = this._view.getChildAt(i).asImage;\r\n-                icon.visible = false;\r\n-                this._selectIcons.push(icon);\r\n-            }\r\n-        }\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            boxPlay: false,\r\n-            canChoose: false,\r\n-            chooseCach: this._chooseCach,\r\n-            submit: this.submitType.No,\r\n-            maskOver: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n-        this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (guidIndex) this._guidIndex = guidIndex;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    private _clickChoose(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn: fgui.GButton = obj.asButton;\r\n-\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-            state.chooseCach[i].selected = false;\r\n-        }\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-            if (state.chooseCach[i].index === btn.data.index) {\r\n-                state.chooseCach[i].selected = true;\r\n-                break;\r\n-            }\r\n-        }\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let isHave = 0;\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-            if (state.chooseCach[i].selected) {\r\n-                isHave++;\r\n-            }\r\n-        }\r\n-\r\n-        if (isHave === 0) {\r\n-            state.submit = this.submitType.GuideShow;\r\n-        } else if (isHave === 1) {\r\n-\r\n-            state.submit = this.submitType.WrongFeed;\r\n-\r\n-            for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-                if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n-\r\n-                    state.submit = this.submitType.RightFeed;\r\n-                    state.maskOver = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-        } else {\r\n-            state.submit = this.submitType.WrongFeed;\r\n-        }\r\n-\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickBox(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.boxPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.boxPlay, state.boxPlay)) {\r\n-            if (state.boxPlay) {\r\n-                this.playBoxSpeak(state.boxPlay);\r\n-            } else {\r\n-                this._box3D.animationName = 'sjq_idle';\r\n-                this._c2.selectedIndex = 0;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.maskOver, state.maskOver)) {\r\n-\r\n-            this._maskOver.visible = state.maskOver;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n-\r\n-            for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-                for (let j = 0; j < this._selectIcons.length; j++) {\r\n-                    if (state.chooseCach[i].index === j) {\r\n-                        this._selectIcons[j].visible = state.chooseCach[i].selected;\r\n-                        break;\r\n-                    }\r\n-                }\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                this.handTips2(this._chooseBtn[this._guidIndex]);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.canChoose, state.canChoose)) {\r\n-            this._mask.visible = !state.canChoose;\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playBoxSpeak(bool: boolean) {\r\n-        if (bool) {\r\n-\r\n-            this._box3D.animationName = 'sjq_idle1to2';\r\n-\r\n-            cc.tween(this._box3D)\r\n-                .delay(0.3)\r\n-                .call(() => {\r\n-                    this._box3D.animationName = 'sjq_idle2';\r\n-                })\r\n-                .start()\r\n-\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playBoxSound();\r\n-\r\n-        } else {\r\n             this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playBoxSound() {\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = 1;\r\n-                this.playPaoShowAnimate(0);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audioId = cc.audioEngine.play(this._boxSound, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-            this._box3D.animationName = 'sjq_idle';\r\n-            this.disableForbidHandle();\r\n-            this._c2.selectedIndex = 0;\r\n             let state: any = globalThis._.cloneDeep(this._state);\r\n             state.boxPlay = false;\r\n             state.canChoose = true;\r\n             this.updateState(state);\r\n-            for (let i = 0; i < this._paoShow.length; i++) {\r\n-                this._paoShow[i].alpha = 0;\r\n-            }\r\n+\r\n         });\r\n     }\r\n \r\n     playPaoShowAnimate(index: number) {\r\n"
                },
                {
                    "date": 1624350089531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,496 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v3 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _paoShow: any = [];\r\n+\r\n+    private _chooseBtn: any = [];\r\n+\r\n+    private _selectIcons: any = [];\r\n+\r\n+    private _chooseCach: any = [];\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private _boxSound: cc.AudioClip;\r\n+\r\n+    private _mask: fgui.GGraph;\r\n+\r\n+    private _guidIndex: number = 0;\r\n+\r\n+    private _box3D: fgui.GLoader3D;\r\n+\r\n+    private _maskOver: fgui.GGraph;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+\r\n+        this._mask = this._view.getChild('maskBg').asGraph;\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n+        this._maskOver.visible = false;\r\n+\r\n+        this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n+        this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n+        this._box3D.url = \"ui://733aoo45gzaz75\";\r\n+        this._box3D.animationName = 'sjq_idle';\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let paoGroup = this._view.getChild(\"pao\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == paoGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._paoShow.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let chooseGroup = this._view.getChild(\"choose\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == chooseGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.data = { index: this._chooseCach.length };\r\n+                let temp = { index: this._chooseCach.length, selected: false };\r\n+                this._chooseCach.push(temp);\r\n+                this._chooseBtn.push(btn);\r\n+                btn.on(fgui.Event.CLICK, this._clickChoose, this);\r\n+            }\r\n+        }\r\n+\r\n+        let selectedGroup = this._view.getChild(\"select\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == selectedGroup) {\r\n+                let icon: fgui.GImage = this._view.getChildAt(i).asImage;\r\n+                icon.visible = false;\r\n+                this._selectIcons.push(icon);\r\n+            }\r\n+        }\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            boxPlay: false,\r\n+            canChoose: false,\r\n+            chooseCach: this._chooseCach,\r\n+            submit: this.submitType.No,\r\n+            maskOver: false\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n+        this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (guidIndex) this._guidIndex = guidIndex;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    private _clickChoose(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn: fgui.GButton = obj.asButton;\r\n+\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+            state.chooseCach[i].selected = false;\r\n+        }\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+            if (state.chooseCach[i].index === btn.data.index) {\r\n+                state.chooseCach[i].selected = true;\r\n+                break;\r\n+            }\r\n+        }\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let isHave = 0;\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+            if (state.chooseCach[i].selected) {\r\n+                isHave++;\r\n+            }\r\n+        }\r\n+\r\n+        if (isHave === 0) {\r\n+            state.submit = this.submitType.GuideShow;\r\n+        } else if (isHave === 1) {\r\n+\r\n+            state.submit = this.submitType.WrongFeed;\r\n+\r\n+            for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+                if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n+\r\n+                    state.submit = this.submitType.RightFeed;\r\n+                    state.maskOver = true;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+        } else {\r\n+            state.submit = this.submitType.WrongFeed;\r\n+        }\r\n+\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickBox(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.boxPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.boxPlay, state.boxPlay)) {\r\n+            if (state.boxPlay) {\r\n+                this.playBoxSpeak(state.boxPlay);\r\n+            } else {\r\n+                this._box3D.animationName = 'sjq_idle';\r\n+                this._c2.selectedIndex = 0;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.maskOver, state.maskOver)) {\r\n+\r\n+            this._maskOver.visible = state.maskOver;\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n+\r\n+            for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+                for (let j = 0; j < this._selectIcons.length; j++) {\r\n+                    if (state.chooseCach[i].index === j) {\r\n+                        this._selectIcons[j].visible = state.chooseCach[i].selected;\r\n+                        break;\r\n+                    }\r\n+                }\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                this.handTips2(this._chooseBtn[this._guidIndex]);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.canChoose, state.canChoose)) {\r\n+            this._mask.visible = !state.canChoose;\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playBoxSpeak(bool: boolean) {\r\n+        if (bool) {\r\n+\r\n+            this._box3D.animationName = 'sjq_idle1to2';\r\n+\r\n+            cc.tween(this._box3D)\r\n+                .delay(0.3)\r\n+                .call(() => {\r\n+                    this._box3D.animationName = 'sjq_idle2';\r\n+                })\r\n+                .start()\r\n+\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playBoxSound();\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playBoxSound() {\r\n+\r\n+        for (let i = 0; i < this._paoShow.length; i++) {\r\n+            this._paoShow[i].alpha = 0;\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = 1;\r\n+                this.playPaoShowAnimate(0);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audioId = cc.audioEngine.play(this._boxSound, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+            this._box3D.animationName = 'sjq_idle';\r\n+            this.disableForbidHandle();\r\n+            for (let i = 0; i < this._paoShow.length; i++) {\r\n+                this._paoShow[i].alpha = 0;\r\n+            }\r\n+            this._c2.selectedIndex = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.boxPlay = false;\r\n+            state.canChoose = true;\r\n+            this.updateState(state);\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playPaoShowAnimate(index: number) {\r\n+\r\n+        cc.tween(this._paoShow[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < this._paoShow.length) {\r\n+                    this.playPaoShowAnimate(index);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624350108121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -493,496 +493,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v3 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _paoShow: any = [];\r\n-\r\n-    private _chooseBtn: any = [];\r\n-\r\n-    private _selectIcons: any = [];\r\n-\r\n-    private _chooseCach: any = [];\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private _boxSound: cc.AudioClip;\r\n-\r\n-    private _mask: fgui.GGraph;\r\n-\r\n-    private _guidIndex: number = 0;\r\n-\r\n-    private _box3D: fgui.GLoader3D;\r\n-\r\n-    private _maskOver: fgui.GGraph;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-\r\n-        this._mask = this._view.getChild('maskBg').asGraph;\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n-        this._maskOver.visible = false;\r\n-\r\n-        this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n-        this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n-        this._box3D.url = \"ui://733aoo45gzaz75\";\r\n-        this._box3D.animationName = 'sjq_idle';\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let paoGroup = this._view.getChild(\"pao\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == paoGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._paoShow.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let chooseGroup = this._view.getChild(\"choose\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == chooseGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.data = { index: this._chooseCach.length };\r\n-                let temp = { index: this._chooseCach.length, selected: false };\r\n-                this._chooseCach.push(temp);\r\n-                this._chooseBtn.push(btn);\r\n-                btn.on(fgui.Event.CLICK, this._clickChoose, this);\r\n-            }\r\n-        }\r\n-\r\n-        let selectedGroup = this._view.getChild(\"select\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == selectedGroup) {\r\n-                let icon: fgui.GImage = this._view.getChildAt(i).asImage;\r\n-                icon.visible = false;\r\n-                this._selectIcons.push(icon);\r\n-            }\r\n-        }\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            boxPlay: false,\r\n-            canChoose: false,\r\n-            chooseCach: this._chooseCach,\r\n-            submit: this.submitType.No,\r\n-            maskOver: false\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n-        this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (guidIndex) this._guidIndex = guidIndex;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    private _clickChoose(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn: fgui.GButton = obj.asButton;\r\n-\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-            state.chooseCach[i].selected = false;\r\n-        }\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-            if (state.chooseCach[i].index === btn.data.index) {\r\n-                state.chooseCach[i].selected = true;\r\n-                break;\r\n-            }\r\n-        }\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let isHave = 0;\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-            if (state.chooseCach[i].selected) {\r\n-                isHave++;\r\n-            }\r\n-        }\r\n-\r\n-        if (isHave === 0) {\r\n-            state.submit = this.submitType.GuideShow;\r\n-        } else if (isHave === 1) {\r\n-\r\n-            state.submit = this.submitType.WrongFeed;\r\n-\r\n-            for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-                if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n-\r\n-                    state.submit = this.submitType.RightFeed;\r\n-                    state.maskOver = true;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-        } else {\r\n-            state.submit = this.submitType.WrongFeed;\r\n-        }\r\n-\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickBox(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.boxPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.boxPlay, state.boxPlay)) {\r\n-            if (state.boxPlay) {\r\n-                this.playBoxSpeak(state.boxPlay);\r\n-            } else {\r\n-                this._box3D.animationName = 'sjq_idle';\r\n-                this._c2.selectedIndex = 0;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.maskOver, state.maskOver)) {\r\n-\r\n-            this._maskOver.visible = state.maskOver;\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n-\r\n-            for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-                for (let j = 0; j < this._selectIcons.length; j++) {\r\n-                    if (state.chooseCach[i].index === j) {\r\n-                        this._selectIcons[j].visible = state.chooseCach[i].selected;\r\n-                        break;\r\n-                    }\r\n-                }\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                this.handTips2(this._chooseBtn[this._guidIndex]);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.canChoose, state.canChoose)) {\r\n-            this._mask.visible = !state.canChoose;\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playBoxSpeak(bool: boolean) {\r\n-        if (bool) {\r\n-\r\n-            this._box3D.animationName = 'sjq_idle1to2';\r\n-\r\n-            cc.tween(this._box3D)\r\n-                .delay(0.3)\r\n-                .call(() => {\r\n-                    this._box3D.animationName = 'sjq_idle2';\r\n-                })\r\n-                .start()\r\n-\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playBoxSound();\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playBoxSound() {\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = 1;\r\n-                this.playPaoShowAnimate(0);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audioId = cc.audioEngine.play(this._boxSound, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-            this._box3D.animationName = 'sjq_idle';\r\n-            this.disableForbidHandle();\r\n-            for (let i = 0; i < this._paoShow.length; i++) {\r\n-                this._paoShow[i].alpha = 0;\r\n-            }\r\n-            this._c2.selectedIndex = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.boxPlay = false;\r\n-            state.canChoose = true;\r\n-            this.updateState(state);\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playPaoShowAnimate(index: number) {\r\n-\r\n-        cc.tween(this._paoShow[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < this._paoShow.length) {\r\n-                    this.playPaoShowAnimate(index);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624354094324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,10 +43,8 @@\n     private _guidIndex: number = 0;\r\n \r\n     private _box3D: fgui.GLoader3D;\r\n \r\n-    private _maskOver: fgui.GGraph;\r\n-\r\n     private submitType: any = cc.Enum({\r\n \r\n         No: 0,\r\n         GuideShow: 1,\r\n@@ -88,11 +86,8 @@\n             this._c1.selectedIndex = 1;\r\n             this._c1.selectedIndex = 0;\r\n         }\r\n \r\n-        this._maskOver = this._view.getChild(\"maskOver\").asGraph;\r\n-        this._maskOver.visible = false;\r\n-\r\n         this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n         this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n         this._box3D.url = \"ui://733aoo45gzaz75\";\r\n         this._box3D.animationName = 'sjq_idle';\r\n@@ -141,9 +136,8 @@\n             boxPlay: false,\r\n             canChoose: false,\r\n             chooseCach: this._chooseCach,\r\n             submit: this.submitType.No,\r\n-            maskOver: false\r\n         }\r\n     }\r\n \r\n     async init(data: any) {\r\n@@ -218,9 +212,8 @@\n \r\n                 if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n \r\n                     state.submit = this.submitType.RightFeed;\r\n-                    state.maskOver = true;\r\n                     break;\r\n                 }\r\n             }\r\n \r\n@@ -266,13 +259,8 @@\n                 this._c2.selectedIndex = 0;\r\n             }\r\n         }\r\n \r\n-        if (!globalThis._.isEqual(oldState.maskOver, state.maskOver)) {\r\n-\r\n-            this._maskOver.visible = state.maskOver;\r\n-        }\r\n-\r\n         if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n \r\n             for (let i = 0; i < state.chooseCach.length; i++) {\r\n \r\n"
                },
                {
                    "date": 1624440752085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -477,8 +477,9 @@\n         this.registerState();\r\n     }\r\n \r\n     onDisable() {\r\n+        cc.tween(this).stop();\r\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1624440760843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -477,8 +477,9 @@\n         this.registerState();\r\n     }\r\n \r\n     onDisable() {\r\n+        cc.tween(this._box3D).stop();\r\n         cc.tween(this).stop();\r\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n"
                },
                {
                    "date": 1624440767809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,486 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class choose_model03_v3 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _c2: fgui.Controller;\r\n+\r\n+    private _paoShow: any = [];\r\n+\r\n+    private _chooseBtn: any = [];\r\n+\r\n+    private _selectIcons: any = [];\r\n+\r\n+    private _chooseCach: any = [];\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private _boxSound: cc.AudioClip;\r\n+\r\n+    private _mask: fgui.GGraph;\r\n+\r\n+    private _guidIndex: number = 0;\r\n+\r\n+    private _box3D: fgui.GLoader3D;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+\r\n+        this._mask = this._view.getChild('maskBg').asGraph;\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+        this._c2 = this._view.getController(\"c2\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n+        this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n+        this._box3D.url = \"ui://733aoo45gzaz75\";\r\n+        this._box3D.animationName = 'sjq_idle';\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let paoGroup = this._view.getChild(\"pao\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == paoGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.alpha = 0;\r\n+                this._paoShow.push(btn);\r\n+            }\r\n+        }\r\n+\r\n+        let chooseGroup = this._view.getChild(\"choose\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == chooseGroup) {\r\n+                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n+                btn.data = { index: this._chooseCach.length };\r\n+                let temp = { index: this._chooseCach.length, selected: false };\r\n+                this._chooseCach.push(temp);\r\n+                this._chooseBtn.push(btn);\r\n+                btn.on(fgui.Event.CLICK, this._clickChoose, this);\r\n+            }\r\n+        }\r\n+\r\n+        let selectedGroup = this._view.getChild(\"select\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == selectedGroup) {\r\n+                let icon: fgui.GImage = this._view.getChildAt(i).asImage;\r\n+                icon.visible = false;\r\n+                this._selectIcons.push(icon);\r\n+            }\r\n+        }\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            boxPlay: false,\r\n+            canChoose: false,\r\n+            chooseCach: this._chooseCach,\r\n+            submit: this.submitType.No,\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n+        this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+        if (guidIndex) this._guidIndex = guidIndex;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    private _clickChoose(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n+        let btn: fgui.GButton = obj.asButton;\r\n+\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+            state.chooseCach[i].selected = false;\r\n+        }\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+            if (state.chooseCach[i].index === btn.data.index) {\r\n+                state.chooseCach[i].selected = true;\r\n+                break;\r\n+            }\r\n+        }\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        let isHave = 0;\r\n+        for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+            if (state.chooseCach[i].selected) {\r\n+                isHave++;\r\n+            }\r\n+        }\r\n+\r\n+        if (isHave === 0) {\r\n+            state.submit = this.submitType.GuideShow;\r\n+        } else if (isHave === 1) {\r\n+\r\n+            state.submit = this.submitType.WrongFeed;\r\n+\r\n+            for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+                if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n+\r\n+                    state.submit = this.submitType.RightFeed;\r\n+                    break;\r\n+                }\r\n+            }\r\n+\r\n+        } else {\r\n+            state.submit = this.submitType.WrongFeed;\r\n+        }\r\n+\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickBox(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.boxPlay = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.boxPlay, state.boxPlay)) {\r\n+            if (state.boxPlay) {\r\n+                this.playBoxSpeak(state.boxPlay);\r\n+            } else {\r\n+                this._box3D.animationName = 'sjq_idle';\r\n+                this._c2.selectedIndex = 0;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n+\r\n+            for (let i = 0; i < state.chooseCach.length; i++) {\r\n+\r\n+                for (let j = 0; j < this._selectIcons.length; j++) {\r\n+                    if (state.chooseCach[i].index === j) {\r\n+                        this._selectIcons[j].visible = state.chooseCach[i].selected;\r\n+                        break;\r\n+                    }\r\n+                }\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                this.handTips2(this._chooseBtn[this._guidIndex]);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.canChoose, state.canChoose)) {\r\n+            this._mask.visible = !state.canChoose;\r\n+        }\r\n+\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    playBoxSpeak(bool: boolean) {\r\n+        if (bool) {\r\n+\r\n+            this._box3D.animationName = 'sjq_idle1to2';\r\n+\r\n+            cc.tween(this._box3D)\r\n+                .delay(0.3)\r\n+                .call(() => {\r\n+                    this._box3D.animationName = 'sjq_idle2';\r\n+                })\r\n+                .start()\r\n+\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            this.playBoxSound();\r\n+\r\n+        } else {\r\n+            this._c2.selectedIndex = 0;\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    async playBoxSound() {\r\n+\r\n+        for (let i = 0; i < this._paoShow.length; i++) {\r\n+            this._paoShow[i].alpha = 0;\r\n+        }\r\n+\r\n+        cc.tween(this)\r\n+            .delay(0.5)\r\n+            .call(() => {\r\n+\r\n+                this._c2.selectedIndex = 1;\r\n+                this.playPaoShowAnimate(0);\r\n+            })\r\n+            .start();\r\n+\r\n+        let audioId = cc.audioEngine.play(this._boxSound, false, 1);\r\n+        cc.audioEngine.setFinishCallback(audioId, () => {\r\n+            this._box3D.animationName = 'sjq_idle';\r\n+            this.disableForbidHandle();\r\n+            for (let i = 0; i < this._paoShow.length; i++) {\r\n+                this._paoShow[i].alpha = 0;\r\n+            }\r\n+            this._c2.selectedIndex = 0;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.boxPlay = false;\r\n+            state.canChoose = true;\r\n+            this.updateState(state);\r\n+\r\n+        });\r\n+    }\r\n+\r\n+    playPaoShowAnimate(index: number) {\r\n+\r\n+        cc.tween(this._paoShow[index])\r\n+            .to(1.0, { alpha: 1 })\r\n+            .call(() => {\r\n+                index++;\r\n+                if (index < this._paoShow.length) {\r\n+                    this.playPaoShowAnimate(index);\r\n+                }\r\n+            })\r\n+            .start()\r\n+\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        cc.tween(this._box3D).stop();\r\n+        cc.tween(this).stop();\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624440773457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -483,490 +483,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class choose_model03_v3 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _c2: fgui.Controller;\r\n-\r\n-    private _paoShow: any = [];\r\n-\r\n-    private _chooseBtn: any = [];\r\n-\r\n-    private _selectIcons: any = [];\r\n-\r\n-    private _chooseCach: any = [];\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private _boxSound: cc.AudioClip;\r\n-\r\n-    private _mask: fgui.GGraph;\r\n-\r\n-    private _guidIndex: number = 0;\r\n-\r\n-    private _box3D: fgui.GLoader3D;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-\r\n-        this._mask = this._view.getChild('maskBg').asGraph;\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-        this._c2 = this._view.getController(\"c2\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n-        this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n-        this._box3D.url = \"ui://733aoo45gzaz75\";\r\n-        this._box3D.animationName = 'sjq_idle';\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let paoGroup = this._view.getChild(\"pao\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == paoGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.alpha = 0;\r\n-                this._paoShow.push(btn);\r\n-            }\r\n-        }\r\n-\r\n-        let chooseGroup = this._view.getChild(\"choose\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == chooseGroup) {\r\n-                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n-                btn.data = { index: this._chooseCach.length };\r\n-                let temp = { index: this._chooseCach.length, selected: false };\r\n-                this._chooseCach.push(temp);\r\n-                this._chooseBtn.push(btn);\r\n-                btn.on(fgui.Event.CLICK, this._clickChoose, this);\r\n-            }\r\n-        }\r\n-\r\n-        let selectedGroup = this._view.getChild(\"select\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == selectedGroup) {\r\n-                let icon: fgui.GImage = this._view.getChildAt(i).asImage;\r\n-                icon.visible = false;\r\n-                this._selectIcons.push(icon);\r\n-            }\r\n-        }\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            boxPlay: false,\r\n-            canChoose: false,\r\n-            chooseCach: this._chooseCach,\r\n-            submit: this.submitType.No,\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n-        this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-        if (guidIndex) this._guidIndex = guidIndex;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    private _clickChoose(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let btn: fgui.GButton = obj.asButton;\r\n-\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-            state.chooseCach[i].selected = false;\r\n-        }\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-            if (state.chooseCach[i].index === btn.data.index) {\r\n-                state.chooseCach[i].selected = true;\r\n-                break;\r\n-            }\r\n-        }\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        let isHave = 0;\r\n-        for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-            if (state.chooseCach[i].selected) {\r\n-                isHave++;\r\n-            }\r\n-        }\r\n-\r\n-        if (isHave === 0) {\r\n-            state.submit = this.submitType.GuideShow;\r\n-        } else if (isHave === 1) {\r\n-\r\n-            state.submit = this.submitType.WrongFeed;\r\n-\r\n-            for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-                if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n-\r\n-                    state.submit = this.submitType.RightFeed;\r\n-                    break;\r\n-                }\r\n-            }\r\n-\r\n-        } else {\r\n-            state.submit = this.submitType.WrongFeed;\r\n-        }\r\n-\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickBox(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.boxPlay = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.boxPlay, state.boxPlay)) {\r\n-            if (state.boxPlay) {\r\n-                this.playBoxSpeak(state.boxPlay);\r\n-            } else {\r\n-                this._box3D.animationName = 'sjq_idle';\r\n-                this._c2.selectedIndex = 0;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n-\r\n-            for (let i = 0; i < state.chooseCach.length; i++) {\r\n-\r\n-                for (let j = 0; j < this._selectIcons.length; j++) {\r\n-                    if (state.chooseCach[i].index === j) {\r\n-                        this._selectIcons[j].visible = state.chooseCach[i].selected;\r\n-                        break;\r\n-                    }\r\n-                }\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                this.handTips2(this._chooseBtn[this._guidIndex]);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.canChoose, state.canChoose)) {\r\n-            this._mask.visible = !state.canChoose;\r\n-        }\r\n-\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    playBoxSpeak(bool: boolean) {\r\n-        if (bool) {\r\n-\r\n-            this._box3D.animationName = 'sjq_idle1to2';\r\n-\r\n-            cc.tween(this._box3D)\r\n-                .delay(0.3)\r\n-                .call(() => {\r\n-                    this._box3D.animationName = 'sjq_idle2';\r\n-                })\r\n-                .start()\r\n-\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            this.playBoxSound();\r\n-\r\n-        } else {\r\n-            this._c2.selectedIndex = 0;\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    async playBoxSound() {\r\n-\r\n-        for (let i = 0; i < this._paoShow.length; i++) {\r\n-            this._paoShow[i].alpha = 0;\r\n-        }\r\n-\r\n-        cc.tween(this)\r\n-            .delay(0.5)\r\n-            .call(() => {\r\n-\r\n-                this._c2.selectedIndex = 1;\r\n-                this.playPaoShowAnimate(0);\r\n-            })\r\n-            .start();\r\n-\r\n-        let audioId = cc.audioEngine.play(this._boxSound, false, 1);\r\n-        cc.audioEngine.setFinishCallback(audioId, () => {\r\n-            this._box3D.animationName = 'sjq_idle';\r\n-            this.disableForbidHandle();\r\n-            for (let i = 0; i < this._paoShow.length; i++) {\r\n-                this._paoShow[i].alpha = 0;\r\n-            }\r\n-            this._c2.selectedIndex = 0;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.boxPlay = false;\r\n-            state.canChoose = true;\r\n-            this.updateState(state);\r\n-\r\n-        });\r\n-    }\r\n-\r\n-    playPaoShowAnimate(index: number) {\r\n-\r\n-        cc.tween(this._paoShow[index])\r\n-            .to(1.0, { alpha: 1 })\r\n-            .call(() => {\r\n-                index++;\r\n-                if (index < this._paoShow.length) {\r\n-                    this.playPaoShowAnimate(index);\r\n-                }\r\n-            })\r\n-            .start()\r\n-\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        cc.tween(this._box3D).stop();\r\n-        cc.tween(this).stop();\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                }
            ],
            "date": 1623989583823,
            "name": "Commit-0",
            "content": "\r\n/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: ruzhuan\r\n * @Date: 2021-06-08 18:00:00\r\n * @LastEditors: ruzhuan\r\n * @LastEditTime: 2021-06-08 18:00:00\r\n */\r\nconst { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class choose_model03_v3 extends cc.Component {\r\n    private _worldRoot: cc.Node;\r\n\r\n    private _view: fgui.GComponent;\r\n\r\n    private _c1: fgui.Controller;\r\n\r\n    private _c2: fgui.Controller;\r\n\r\n    private _paoShow: any = [];\r\n\r\n    private _chooseBtn: any = [];\r\n\r\n    private _selectIcons: any = [];\r\n\r\n    private _chooseCach: any = [];\r\n\r\n    private _title: fgui.GButton;\r\n\r\n    private _titleTrigger: fgui.GLoader;\r\n\r\n    private _submitBtn: fgui.GButton;\r\n\r\n    private _package: any;\r\n\r\n    private _boxSound: cc.AudioClip;\r\n\r\n    private _mask: fgui.GGraph;\r\n\r\n    private _guidIndex: number = 0;\r\n\r\n    private _box3D: fgui.GLoader3D;\r\n\r\n    private submitType: any = cc.Enum({\r\n\r\n        No: 0,\r\n        GuideShow: 1,\r\n        WrongFeed: 2,\r\n        RightFeed: 3\r\n    });\r\n\r\n    // 远程动态组件\r\n    private feedback: any;\r\n\r\n    private _state = {};\r\n\r\n    get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    set state(v: any) {\r\n        this.updateUi(this._state, v);\r\n        this._state = v;\r\n        this.mergeState();\r\n    }\r\n\r\n    async onLoad() {\r\n        this._worldRoot = cc.find(\"Canvas\").parent;\r\n\r\n        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n\r\n        fgui.GRoot.inst.addChild(this._view);\r\n\r\n\r\n        this._mask = this._view.getChild('maskBg').asGraph;\r\n        this._c1 = this._view.getController(\"c1\");\r\n        this._c2 = this._view.getController(\"c2\");\r\n\r\n        // 臨時\r\n        // bug 初始设置不播放不生效\r\n        if (this._c1) {\r\n            this._c1.selectedIndex = 1;\r\n            this._c1.selectedIndex = 0;\r\n        }\r\n\r\n        this._box3D = this._view.getChild(\"box\") as fgui.GLoader3D;\r\n        this._box3D.on(fgui.Event.CLICK, this._clickBox, this);\r\n        this._box3D.url = \"ui://733aoo45gzaz75\";\r\n        this._box3D.animationName = 'sjq_idle';\r\n\r\n        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n\r\n        this._title = this._view.getChild(\"title\").asButton;\r\n\r\n        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n\r\n        let paoGroup = this._view.getChild(\"pao\").asGroup;\r\n        for (let i = 0; i < this._view.numChildren; i++) {\r\n            if (this._view.getChildAt(i).group == paoGroup) {\r\n                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n                btn.alpha = 0;\r\n                this._paoShow.push(btn);\r\n            }\r\n        }\r\n\r\n        let chooseGroup = this._view.getChild(\"choose\").asGroup;\r\n        for (let i = 0; i < this._view.numChildren; i++) {\r\n            if (this._view.getChildAt(i).group == chooseGroup) {\r\n                let btn: fgui.GButton = this._view.getChildAt(i).asButton;\r\n                btn.data = { index: this._chooseCach.length };\r\n                let temp = { index: this._chooseCach.length, selected: false };\r\n                this._chooseCach.push(temp);\r\n                this._chooseBtn.push(btn);\r\n                btn.on(fgui.Event.CLICK, this._clickChoose, this);\r\n            }\r\n        }\r\n\r\n        let selectedGroup = this._view.getChild(\"select\").asGroup;\r\n        for (let i = 0; i < this._view.numChildren; i++) {\r\n            if (this._view.getChildAt(i).group == selectedGroup) {\r\n                let icon: fgui.GImage = this._view.getChildAt(i).asImage;\r\n                icon.visible = false;\r\n                this._selectIcons.push(icon);\r\n            }\r\n        }\r\n\r\n        // 初始化state\r\n        this._state = {\r\n            title: false,\r\n            boxPlay: false,\r\n            canChoose: false,\r\n            chooseCach: this._chooseCach,\r\n            submit: this.submitType.No,\r\n        }\r\n    }\r\n\r\n    async init(data: any) {\r\n        // 临时 model component json 配置加载\r\n        let { pathConfig, model, components } = data;\r\n        let Package = pathConfig.packageName;\r\n        let GComponent = model.uiPath;\r\n        let { boxSoundUrl, guidIndex } = model.config;\r\n        this._package = Package;\r\n\r\n        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n\r\n        let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n        this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n\r\n        if (guidIndex) this._guidIndex = guidIndex;\r\n\r\n        // 动效注册\r\n        // for (let v in ae) {\r\n        //     if (ae[v]) {\r\n        //         this[v] = {};\r\n        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n        //     }\r\n        // }\r\n\r\n        if (components) {\r\n            for (const key in components) {\r\n                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n                let componentBundle: any = await loadBundle(componentPath);\r\n                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n                this[key] = componentPrefab;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _clickChoose(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        let obj: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n        let btn: fgui.GButton = obj.asButton;\r\n\r\n        for (let i = 0; i < state.chooseCach.length; i++) {\r\n            state.chooseCach[i].selected = false;\r\n        }\r\n        for (let i = 0; i < state.chooseCach.length; i++) {\r\n            if (state.chooseCach[i].index === btn.data.index) {\r\n                state.chooseCach[i].selected = true;\r\n                break;\r\n            }\r\n        }\r\n        this.updateState(state);\r\n    }\r\n\r\n    private _clickSubmit(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n\r\n        let isHave = 0;\r\n        for (let i = 0; i < state.chooseCach.length; i++) {\r\n\r\n            if (state.chooseCach[i].selected) {\r\n                isHave++;\r\n            }\r\n        }\r\n\r\n        if (isHave === 0) {\r\n            state.submit = this.submitType.GuideShow;\r\n        } else if (isHave === 1) {\r\n\r\n            state.submit = this.submitType.WrongFeed;\r\n\r\n            for (let i = 0; i < state.chooseCach.length; i++) {\r\n\r\n                if (state.chooseCach[i].selected && state.chooseCach[i].index === 0) {\r\n\r\n                    state.submit = this.submitType.RightFeed;\r\n                    break;\r\n                }\r\n            }\r\n\r\n        } else {\r\n            state.submit = this.submitType.WrongFeed;\r\n        }\r\n\r\n        this.updateState(state);\r\n    }\r\n\r\n    private _clickBox(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        state.boxPlay = true;\r\n        this.updateState(state);\r\n    }\r\n\r\n    private _clickTitle(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        state.title = true;\r\n        this.updateState(state);\r\n    }\r\n\r\n\r\n    // 获取状态\r\n    getState(data: any) {\r\n        this.updateState(data);\r\n    }\r\n\r\n    // 更新状态层\r\n    updateState(curState: any) {\r\n        if (globalThis._.isEqual(this._state, curState)) return;\r\n        this.state = curState;\r\n    }\r\n\r\n    // 更新ui层\r\n    updateUi(oldState: any, state: any) {\r\n\r\n        if (!globalThis._.isEqual(oldState.boxPlay, state.boxPlay)) {\r\n            if (state.boxPlay) {\r\n                this.playBoxSpeak(state.boxPlay);\r\n            } else {\r\n                this._box3D.animationName = 'sjq_idle';\r\n                this._c2.selectedIndex = 0;\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.chooseCach, state.chooseCach)) {\r\n\r\n            for (let i = 0; i < state.chooseCach.length; i++) {\r\n\r\n                for (let j = 0; j < this._selectIcons.length; j++) {\r\n                    if (state.chooseCach[i].index === j) {\r\n                        this._selectIcons[j].visible = state.chooseCach[i].selected;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n\r\n            if (state.submit === this.submitType.RightFeed) {\r\n\r\n                this.answerFeedback(true);\r\n\r\n            } else if (state.submit === this.submitType.WrongFeed) {\r\n\r\n                this.answerFeedback(false);\r\n\r\n            } else if (state.submit === this.submitType.GuideShow) {\r\n\r\n                this.handTips2(this._chooseBtn[this._guidIndex]);\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n            this.playTitle(state.title);\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.canChoose, state.canChoose)) {\r\n            this._mask.visible = !state.canChoose;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async playTitle(bool: boolean) {\r\n        this._c1.selectedIndex = bool ? 1 : 0;\r\n        if (bool) {\r\n            cc.audioEngine.stopAll();\r\n            this.forbidHandle();\r\n            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n            let audioId = cc.audioEngine.play(audio, false, 1);\r\n            cc.audioEngine.setFinishCallback(audioId, () => {\r\n                let state: any = globalThis._.cloneDeep(this._state);\r\n                state.title = false;\r\n                this.updateState(state);\r\n            });\r\n        } else {\r\n            this.disableForbidHandle();\r\n        }\r\n    }\r\n\r\n    playBoxSpeak(bool: boolean) {\r\n        if (bool) {\r\n\r\n            this._box3D.animationName = 'sjq_idle1to2';\r\n\r\n            cc.tween(this._box3D)\r\n                .delay(0.3)\r\n                .call(() => {\r\n                    this._box3D.animationName = 'sjq_idle2';\r\n                })\r\n                .start()\r\n\r\n            cc.audioEngine.stopAll();\r\n            this.forbidHandle();\r\n            this.playBoxSound();\r\n\r\n        } else {\r\n            this._c2.selectedIndex = 0;\r\n            this.disableForbidHandle();\r\n        }\r\n    }\r\n\r\n    async playBoxSound() {\r\n\r\n        cc.tween(this)\r\n            .delay(0.5)\r\n            .call(() => {\r\n\r\n                this._c2.selectedIndex = 1;\r\n                this.playPaoShowAnimate(0);\r\n            })\r\n            .start();\r\n\r\n        let audioId = cc.audioEngine.play(this._boxSound, false, 1);\r\n        cc.audioEngine.setFinishCallback(audioId, () => {\r\n            this._box3D.animationName = 'sjq_idle';\r\n            this.disableForbidHandle();\r\n            this._c2.selectedIndex = 0;\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.boxPlay = false;\r\n            state.canChoose = true;\r\n            this.updateState(state);\r\n            for (let i = 0; i < this._paoShow.length; i++) {\r\n                this._paoShow[i].alpha = 0;\r\n            }\r\n        });\r\n    }\r\n\r\n    playPaoShowAnimate(index: number) {\r\n\r\n        cc.tween(this._paoShow[index])\r\n            .to(1.0, { alpha: 1 })\r\n            .call(() => {\r\n                index++;\r\n                if (index < this._paoShow.length) {\r\n                    this.playPaoShowAnimate(index);\r\n                }\r\n            })\r\n            .start()\r\n\r\n    }\r\n\r\n    answerFeedback(bool: boolean) {\r\n        if (!this.feedback) return;\r\n        let feedback: any = cc.instantiate(this.feedback);\r\n        feedback.x = 960;\r\n        feedback.y = 540;\r\n        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n        feedbackJs.init(bool);\r\n        feedback.parent = cc.find(\"Canvas\").parent;\r\n\r\n        setTimeout(() => {\r\n            feedback.destroy();\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.submit = this.submitType.No;\r\n            this.updateState(state);\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    /**\r\n     * 点击指引\r\n     * @param obj 点击对象\r\n     */\r\n    handTips2(obj: fgui.GObject) {\r\n        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n        this._view.addChild(hand);\r\n        let tempX = obj.x;\r\n        let tempY = obj.y;\r\n\r\n        hand.x = tempX;\r\n        hand.y = tempY;\r\n\r\n        cc.tween(hand).to(0.3, {\r\n            x: tempX - 30,\r\n            y: tempY - 30\r\n        }).to(0.3, {\r\n            x: tempX,\r\n            y: tempY\r\n        }).to(0.3, {\r\n            x: tempX - 30,\r\n            y: tempY - 30\r\n        }).to(0.3, {\r\n            x: tempX,\r\n            y: tempY\r\n        }).call(() => {\r\n            this._view.removeChild(hand);\r\n            hand = null;\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.submit = this.submitType.No;\r\n            this.updateState(state)\r\n        }).start();\r\n    }\r\n\r\n    // 运行时 禁止操作\r\n    forbidHandle() {\r\n        console.log('===  运行时 禁止操作 =====');\r\n        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n        if (!handleMask) {\r\n            let handleMask = new cc.Node('handleMask');\r\n            handleMask.addComponent(cc.BlockInputEvents);\r\n            handleMask.parent = this._worldRoot;\r\n            handleMask.width = 1920;\r\n            handleMask.height = 1080;\r\n            handleMask.x = 960;\r\n            handleMask.y = 540;\r\n        }\r\n    }\r\n\r\n    // 消除禁止\r\n    disableForbidHandle() {\r\n        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n        if (handleMask) handleMask.destroy();\r\n    }\r\n\r\n    // 注册状态，及获取状态的方法\r\n    registerState() {\r\n        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n    }\r\n\r\n    // 解除状态，及获取状态的方法\r\n    relieveState() {\r\n        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n    }\r\n\r\n    // 本组件状态合并到全局\r\n    mergeState() {\r\n        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n    }\r\n\r\n    onEnable() {\r\n        this.registerState();\r\n    }\r\n\r\n    onDisable() {\r\n        this.relieveState();\r\n        cc.audioEngine.stopAll();\r\n    }\r\n}\r\n"
        }
    ]
}