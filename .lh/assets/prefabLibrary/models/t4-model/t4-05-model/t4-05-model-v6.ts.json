{
    "sourceFile": "assets/prefabLibrary/models/t4-model/t4-05-model/t4-05-model-v6.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 36,
            "patches": [
                {
                    "date": 1625472376456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1625472398838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n const { ccclass, property } = cc._decorator;\r\n \r\n @ccclass\r\n-export default class t4_05_model_v5 extends cc.Component {\r\n+export default class t4_05_model_v6 extends cc.Component {\r\n     private _worldRoot: cc.Node;\r\n \r\n     private _view: fgui.GComponent;\r\n \r\n"
                },
                {
                    "date": 1625472499640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n         let tt1 = new cc.Vec2(953, 403);\r\n         let tt2 = new cc.Vec2(800, 626);\r\n         console.log('=== mag 66666 DDDD ===' + tt1.sub(tt2).mag());\r\n \r\n-        let pointGroup = this._view.getChild(\"n84\").asGroup;\r\n+        let pointGroup = this._view.getChild(\"n101\").asGroup;\r\n         for (let i = 0; i < this._view.numChildren; i++) {\r\n             if (this._view.getChildAt(i).group == pointGroup) {\r\n                 let img = this._view.getChildAt(i).asImage;\r\n                 let temp = {\r\n"
                },
                {
                    "date": 1625472509910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,12 +84,8 @@\n             this._c1.selectedIndex = 1;\r\n             this._c1.selectedIndex = 0;\r\n         }\r\n \r\n-        let tt1 = new cc.Vec2(953, 403);\r\n-        let tt2 = new cc.Vec2(800, 626);\r\n-        console.log('=== mag 66666 DDDD ===' + tt1.sub(tt2).mag());\r\n-\r\n         let pointGroup = this._view.getChild(\"n101\").asGroup;\r\n         for (let i = 0; i < this._view.numChildren; i++) {\r\n             if (this._view.getChildAt(i).group == pointGroup) {\r\n                 let img = this._view.getChildAt(i).asImage;\r\n"
                },
                {
                    "date": 1625472718782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -338,11 +338,12 @@\n                         pointNums++;\r\n                         continue;\r\n                     }\r\n                 }\r\n+\r\n                 console.log('===== 5555 =====' + pointNums);\r\n \r\n-                if (pointNums >= 3) {\r\n+                if (pointNums >= 2) {\r\n \r\n                     for (let i = 0; i < this._allPointRect.length; i++) {\r\n \r\n                         if (this._allPointRect[i].rect.contains(this._curTouchesPos[0]) ||\r\n"
                },
                {
                    "date": 1625472789945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -368,11 +368,11 @@\n                     console.log(this._allPointRect);\r\n                     console.log(this._curTouchesPos);\r\n \r\n                     let temp = {};\r\n-                    if (this._allPointRect[0].isContains && this._allPointRect[1].isContains && this._allPointRect[2].isContains) {\r\n+                    if (this._allPointRect[0].isContains && this._allPointRect[1].isContains) {\r\n \r\n-                        if (this._allPointRect[0].isPointInner && this._allPointRect[2].isPointInner) {\r\n+                        if (this._allPointRect[0].isPointInner && this._allPointRect[1].isPointInner) {\r\n \r\n                             console.log('===== 线段 =====');\r\n                             //线段\r\n                             let pointMidChang = 753;\r\n"
                },
                {
                    "date": 1625472926999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -374,9 +374,9 @@\n                         if (this._allPointRect[0].isPointInner && this._allPointRect[1].isPointInner) {\r\n \r\n                             console.log('===== 线段 =====');\r\n                             //线段\r\n-                            let pointMidChang = 753;\r\n+                            let pointMidChang = 426;\r\n                             temp['QiX'] = 673;\r\n                             temp['QiY'] = 222;\r\n                             temp['angle'] = 47;\r\n                             temp['chaoInterQiX'] = 0;\r\n"
                },
                {
                    "date": 1625472938746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -375,10 +375,10 @@\n \r\n                             console.log('===== 线段 =====');\r\n                             //线段\r\n                             let pointMidChang = 426;\r\n-                            temp['QiX'] = 673;\r\n-                            temp['QiY'] = 222;\r\n+                            temp['QiX'] = 542;\r\n+                            temp['QiY'] = 647;\r\n                             temp['angle'] = 47;\r\n                             temp['chaoInterQiX'] = 0;\r\n                             temp['chaoInterQiY'] = 0;\r\n                             temp['chang'] = pointMidChang;\r\n"
                },
                {
                    "date": 1625472943892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -377,9 +377,9 @@\n                             //线段\r\n                             let pointMidChang = 426;\r\n                             temp['QiX'] = 542;\r\n                             temp['QiY'] = 647;\r\n-                            temp['angle'] = 47;\r\n+                            temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = 0;\r\n                             temp['chaoInterQiY'] = 0;\r\n                             temp['chang'] = pointMidChang;\r\n                             temp['result'] = false;\r\n"
                },
                {
                    "date": 1625472958734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -384,9 +384,9 @@\n                             temp['chang'] = pointMidChang;\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n-                        } else if (this._allPointRect[0].limitQiMinx && this._allPointRect[2].limitEndMaxx) {\r\n+                        } else if (this._allPointRect[0].limitQiMinx && this._allPointRect[1].limitEndMaxx) {\r\n \r\n \r\n                             console.log('===== 直线 =====' + Math.pow(2, 2));\r\n                             // 直线\r\n"
                },
                {
                    "date": 1625473003847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -384,9 +384,9 @@\n                             temp['chang'] = pointMidChang;\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n-                        } else if (this._allPointRect[0].limitQiMinx && this._allPointRect[1].limitEndMaxx) {\r\n+                        } else if (this._allPointRect[1].limitQiMinx && this._allPointRect[0].limitEndMaxx) {\r\n \r\n \r\n                             console.log('===== 直线 =====' + Math.pow(2, 2));\r\n                             // 直线\r\n"
                },
                {
                    "date": 1625473008986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -387,9 +387,9 @@\n \r\n                         } else if (this._allPointRect[1].limitQiMinx && this._allPointRect[0].limitEndMaxx) {\r\n \r\n \r\n-                            console.log('===== 直线 =====' + Math.pow(2, 2));\r\n+                            console.log('===== 直线 =====');\r\n                             // 直线\r\n                             temp['QiX'] = 673;\r\n                             temp['QiY'] = 222;\r\n                             temp['angle'] = 47;\r\n"
                },
                {
                    "date": 1625473014359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -386,9 +386,8 @@\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n                         } else if (this._allPointRect[1].limitQiMinx && this._allPointRect[0].limitEndMaxx) {\r\n \r\n-\r\n                             console.log('===== 直线 =====');\r\n                             // 直线\r\n                             temp['QiX'] = 673;\r\n                             temp['QiY'] = 222;\r\n"
                },
                {
                    "date": 1625473062378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -388,11 +388,11 @@\n                         } else if (this._allPointRect[1].limitQiMinx && this._allPointRect[0].limitEndMaxx) {\r\n \r\n                             console.log('===== 直线 =====');\r\n                             // 直线\r\n-                            temp['QiX'] = 673;\r\n-                            temp['QiY'] = 222;\r\n-                            temp['angle'] = 47;\r\n+                            temp['QiX'] = 542;\r\n+                            temp['QiY'] = 647;\r\n+                            temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n                             temp['chaoInterQiY'] = Math.tan(temp['angle'] * 3.14 / 180) * temp['chaoInterQiX'];\r\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             temp['result'] = true;\r\n"
                },
                {
                    "date": 1625473083595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -392,9 +392,9 @@\n                             temp['QiX'] = 542;\r\n                             temp['QiY'] = 647;\r\n                             temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n-                            temp['chaoInterQiY'] = Math.tan(temp['angle'] * 3.14 / 180) * temp['chaoInterQiX'];\r\n+                            temp['chaoInterQiY'] = temp['QiY'];\r\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             temp['result'] = true;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n"
                },
                {
                    "date": 1625473095425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -394,9 +394,9 @@\n                             temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n                             temp['chaoInterQiY'] = temp['QiY'];\r\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n-                            temp['result'] = true;\r\n+                            temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n                         } else if (this._allPointRect[0].limitQiMinx && !this._allPointRect[2].limitEndMaxx) {\r\n \r\n"
                },
                {
                    "date": 1625473101743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -402,9 +402,8 @@\n \r\n                             // 左点超出射线\r\n                             let pointMidChang = 753;\r\n \r\n-\r\n                             temp['QiX'] = 673;\r\n                             temp['QiY'] = 222;\r\n                             temp['angle'] = 47;\r\n                             temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n"
                },
                {
                    "date": 1625473109649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -400,9 +400,9 @@\n \r\n                         } else if (this._allPointRect[0].limitQiMinx && !this._allPointRect[2].limitEndMaxx) {\r\n \r\n                             // 左点超出射线\r\n-                            let pointMidChang = 753;\r\n+                            let pointMidChang = 426;\r\n \r\n                             temp['QiX'] = 673;\r\n                             temp['QiY'] = 222;\r\n                             temp['angle'] = 47;\r\n"
                },
                {
                    "date": 1625473115464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -402,11 +402,11 @@\n \r\n                             // 左点超出射线\r\n                             let pointMidChang = 426;\r\n \r\n-                            temp['QiX'] = 673;\r\n-                            temp['QiY'] = 222;\r\n-                            temp['angle'] = 47;\r\n+                            temp['QiX'] = 542;\r\n+                            temp['QiY'] = 647;\r\n+                            temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n                             temp['chaoInterQiY'] = Math.tan(temp['angle'] * 3.14 / 180) * temp['chaoInterQiX'];\r\n                             let jisaun1 = Math.ceil(temp['chaoInterQiX']) * Math.ceil(temp['chaoInterQiX']);\r\n                             let jisaun2 = Math.ceil(temp['chaoInterQiY']) * Math.ceil(temp['chaoInterQiY']);\r\n"
                },
                {
                    "date": 1625473149746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -406,9 +406,9 @@\n                             temp['QiX'] = 542;\r\n                             temp['QiY'] = 647;\r\n                             temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n-                            temp['chaoInterQiY'] = Math.tan(temp['angle'] * 3.14 / 180) * temp['chaoInterQiX'];\r\n+                            temp['chaoInterQiY'] = temp['QiY'] = 647;\r\n                             let jisaun1 = Math.ceil(temp['chaoInterQiX']) * Math.ceil(temp['chaoInterQiX']);\r\n                             let jisaun2 = Math.ceil(temp['chaoInterQiY']) * Math.ceil(temp['chaoInterQiY']);\r\n                             let jisuan3 = Math.sqrt(jisaun1 + jisaun2)\r\n \r\n"
                },
                {
                    "date": 1625473185498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -407,13 +407,10 @@\n                             temp['QiY'] = 647;\r\n                             temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n                             temp['chaoInterQiY'] = temp['QiY'] = 647;\r\n-                            let jisaun1 = Math.ceil(temp['chaoInterQiX']) * Math.ceil(temp['chaoInterQiX']);\r\n-                            let jisaun2 = Math.ceil(temp['chaoInterQiY']) * Math.ceil(temp['chaoInterQiY']);\r\n-                            let jisuan3 = Math.sqrt(jisaun1 + jisaun2)\r\n \r\n-                            temp['chang'] = pointMidChang + jisuan3;\r\n+                            temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             ;\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n"
                },
                {
                    "date": 1625473226059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -399,11 +399,9 @@\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n                         } else if (this._allPointRect[0].limitQiMinx && !this._allPointRect[2].limitEndMaxx) {\r\n \r\n-                            // 左点超出射线\r\n-                            let pointMidChang = 426;\r\n-\r\n+                            // console.log('===== 左点超出射线 =====')\r\n                             temp['QiX'] = 542;\r\n                             temp['QiY'] = 647;\r\n                             temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n@@ -413,10 +411,10 @@\n                             ;\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n-                            console.log('===== 左点超出射线 =====')\r\n \r\n+\r\n                         } else if (!this._allPointRect[0].limitQiMinx && this._allPointRect[2].limitEndMaxx) {\r\n \r\n                             console.log('===== 右点超出的射线 =====');\r\n                             // 右点超出的射线\r\n"
                },
                {
                    "date": 1625473237817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -399,9 +399,10 @@\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n                         } else if (this._allPointRect[0].limitQiMinx && !this._allPointRect[2].limitEndMaxx) {\r\n \r\n-                            // console.log('===== 左点超出射线 =====')\r\n+                            console.log('===== 左点超出射线 =====')\r\n+\r\n                             temp['QiX'] = 542;\r\n                             temp['QiY'] = 647;\r\n                             temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n"
                },
                {
                    "date": 1625473270621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -418,16 +418,12 @@\n                         } else if (!this._allPointRect[0].limitQiMinx && this._allPointRect[2].limitEndMaxx) {\r\n \r\n                             console.log('===== 右点超出的射线 =====');\r\n                             // 右点超出的射线\r\n-                            let pointMaxX = 1199;\r\n-                            let pointMaxY = 804;\r\n \r\n-                            let pointMidChang = 753;\r\n-\r\n-                            temp['QiX'] = 673;\r\n-                            temp['QiY'] = 222;\r\n-                            temp['angle'] = 47;\r\n+                            temp['QiX'] = 542;\r\n+                            temp['QiY'] = 647;\r\n+                            temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = 0;\r\n                             temp['chaoInterQiY'] = 0;\r\n \r\n                             let jisaun1 = Math.ceil(this._curTouchesPos[this._curTouchesPos.length - 1].x - pointMaxX) * Math.ceil(this._curTouchesPos[this._curTouchesPos.length - 1].x - pointMaxX);\r\n"
                },
                {
                    "date": 1625473284884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -425,13 +425,10 @@\n                             temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = 0;\r\n                             temp['chaoInterQiY'] = 0;\r\n \r\n-                            let jisaun1 = Math.ceil(this._curTouchesPos[this._curTouchesPos.length - 1].x - pointMaxX) * Math.ceil(this._curTouchesPos[this._curTouchesPos.length - 1].x - pointMaxX);\r\n-                            let jisaun2 = Math.ceil(this._curTouchesPos[this._curTouchesPos.length - 1].y - pointMaxY) * Math.ceil(this._curTouchesPos[this._curTouchesPos.length - 1].y - pointMaxY);\r\n-                            let jisuan3 = Math.sqrt(jisaun1 + jisaun2);\r\n \r\n-                            temp['chang'] = pointMidChang + jisuan3;\r\n+                            temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n                         }\r\n"
                },
                {
                    "date": 1625473300283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -409,8 +409,11 @@\n                             temp['chaoInterQiY'] = temp['QiY'] = 647;\r\n \r\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             ;\r\n+                            if () {\r\n+\r\n+                            }\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n \r\n@@ -425,9 +428,8 @@\n                             temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = 0;\r\n                             temp['chaoInterQiY'] = 0;\r\n \r\n-\r\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n"
                },
                {
                    "date": 1625473308761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -409,9 +409,9 @@\n                             temp['chaoInterQiY'] = temp['QiY'] = 647;\r\n \r\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             ;\r\n-                            if () {\r\n+                            if (this._allPointRect[2]) {\r\n \r\n                             }\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n"
                },
                {
                    "date": 1625473322848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -409,9 +409,9 @@\n                             temp['chaoInterQiY'] = temp['QiY'] = 647;\r\n \r\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             ;\r\n-                            if (this._allPointRect[2]) {\r\n+                            if (this._allPointRect[2].isPointInner) {\r\n \r\n                             }\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n"
                },
                {
                    "date": 1625473327992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -409,9 +409,9 @@\n                             temp['chaoInterQiY'] = temp['QiY'] = 647;\r\n \r\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             ;\r\n-                            if (this._allPointRect[2].isPointInner) {\r\n+                            if (this._allPointRect[0].isPointInner) {\r\n \r\n                             }\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n"
                },
                {
                    "date": 1625473334835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -411,8 +411,10 @@\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             ;\r\n                             if (this._allPointRect[0].isPointInner) {\r\n \r\n+                            } else {\r\n+\r\n                             }\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n"
                },
                {
                    "date": 1625473348315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -411,12 +411,14 @@\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             ;\r\n                             if (this._allPointRect[0].isPointInner) {\r\n \r\n+                                temp['result'] = false;\r\n+\r\n                             } else {\r\n \r\n                             }\r\n-                            temp['result'] = false;\r\n+\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1625473353978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -411,12 +411,13 @@\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             ;\r\n                             if (this._allPointRect[0].isPointInner) {\r\n \r\n-                                temp['result'] = false;\r\n+                                temp['result'] = true;\r\n \r\n                             } else {\r\n \r\n+                                temp['result'] = false;\r\n                             }\r\n \r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n"
                },
                {
                    "date": 1625473485806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -397,17 +397,17 @@\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n-                        } else if (this._allPointRect[0].limitQiMinx && !this._allPointRect[2].limitEndMaxx) {\r\n+                        } else if (this._allPointRect[1].limitQiMinx && !this._allPointRect[0].limitEndMaxx) {\r\n \r\n                             console.log('===== 左点超出射线 =====')\r\n \r\n                             temp['QiX'] = 542;\r\n                             temp['QiY'] = 647;\r\n                             temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n-                            temp['chaoInterQiY'] = temp['QiY'] = 647;\r\n+                            temp['chaoInterQiY'] = temp['QiY'];\r\n \r\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             ;\r\n                             if (this._allPointRect[0].isPointInner) {\r\n@@ -422,9 +422,9 @@\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n \r\n \r\n-                        } else if (!this._allPointRect[0].limitQiMinx && this._allPointRect[2].limitEndMaxx) {\r\n+                        } else if (!this._allPointRect[1].limitQiMinx && this._allPointRect[0].limitEndMaxx) {\r\n \r\n                             console.log('===== 右点超出的射线 =====');\r\n                             // 右点超出的射线\r\n \r\n"
                },
                {
                    "date": 1625473507258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,652 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v6 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _resetBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private _curTouchesPos: any = [];\r\n+\r\n+    private _moveCurPos: cc.Vec2;\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private _dragging = false;\r\n+\r\n+    private _scheduleTime = 0.08;\r\n+\r\n+    private _allTouchLinesObj = {};\r\n+\r\n+    private _allOtherTouchLinesObj = {};\r\n+\r\n+    private _allPointRect = [];\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        let pointGroup = this._view.getChild(\"n101\").asGroup;\r\n+        for (let i = 0; i < this._view.numChildren; i++) {\r\n+            if (this._view.getChildAt(i).group == pointGroup) {\r\n+                let img = this._view.getChildAt(i).asImage;\r\n+                let temp = {\r\n+                    'rect': new cc.Rect(img.x, img.y, img.width, img.height),\r\n+                    'isContains': false,\r\n+                    'minx': img.x,\r\n+                    'maxx': img.x + img.width,\r\n+                    'miny': img.y,\r\n+                    'maxy': img.y + img.height,\r\n+                    'limitQiMinx': false,\r\n+                    'limitEndMaxx': false,\r\n+                    'isPointInner': false\r\n+                };\r\n+                this._allPointRect.push(temp);\r\n+            }\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        this._resetBtn = this._view.getChild(\"restart\").asButton;\r\n+        this._resetBtn.on(fgui.Event.CLICK, this._clickReset, this);\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        this.graphics = huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No,\r\n+            touch: \"no\",\r\n+            reset: false,\r\n+            curTouchesPos: cc.Vec2,\r\n+            allTouchLinesPos: {},\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        if (state.touch === 'no') {\r\n+            state.touch = 'start';\r\n+            let tempPos = new cc.Vec2(event.touch.getLocation().x, event.touch.getLocation().y);\r\n+            state.curTouchesPos = tempPos;\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        this._dragging = true;\r\n+        this._moveCurPos = new cc.Vec2(event.touch.getLocation().x, event.touch.getLocation().y);\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+        this._dragging = false;\r\n+\r\n+        let tempPos = new cc.Vec2(event.touch.getLocation().x, event.touch.getLocation().y);\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.curTouchesPos = tempPos;\r\n+        state.touch = 'end';\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 排序方法\r\n+    comparePosX() {\r\n+        return function (a, b) {\r\n+            var value1 = a.x;\r\n+            var value2 = b.x;\r\n+            return value1 - value2;\r\n+        }\r\n+    }\r\n+\r\n+    // 排序方法\r\n+    comparePosY() {\r\n+        return function (a, b) {\r\n+            var value1 = a.y;\r\n+            var value2 = b.y;\r\n+            return value1 - value2;\r\n+        }\r\n+    }\r\n+\r\n+    private _clickReset(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.reset = true;\r\n+        this.updateState(state);\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+\r\n+        if (Object.keys(state.allTouchLinesPos).length === 0) {\r\n+\r\n+            state.submit = this.submitType.GuideShow;\r\n+\r\n+        } else {\r\n+\r\n+            let isAllRight = true;\r\n+            for (let key in state.allTouchLinesPos) {\r\n+\r\n+                if (!state.allTouchLinesPos[key].result) {\r\n+                    isAllRight = false;\r\n+                    break;\r\n+                }\r\n+            }\r\n+            if (isAllRight) {\r\n+                state.submit = this.submitType.RightFeed;\r\n+            } else {\r\n+                state.submit = this.submitType.WrongFeed;\r\n+            }\r\n+        }\r\n+\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    // 临时\r\n+    // 拖拽定时器\r\n+    dragSchedule() {\r\n+        if (this._dragging) {\r\n+\r\n+            console.log('==== 3333333 拖拽定时器 ======');\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.curTouchesPos = this._moveCurPos;\r\n+            state.touch = \"move\";\r\n+            this.updateState(state);\r\n+        }\r\n+    }\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (state.touch == \"start\") {\r\n+\r\n+            this._curTouchesPos.length = 0;\r\n+            this._curTouchesPos.push(state.curTouchesPos);\r\n+            this.graphics.clear();\r\n+\r\n+        } else if (state.touch == \"move\") {\r\n+\r\n+            this._curTouchesPos.push(state.curTouchesPos);\r\n+\r\n+            const MIN_POINT_DISTANCE = 4;\r\n+\r\n+            let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n+            this.graphics.moveTo(this._curTouchesPos[0].x - worldPos.x, this._curTouchesPos[0].y - worldPos.y);\r\n+            let lastIndex = 0;\r\n+            for (let i = 1, l = this._curTouchesPos.length; i < l; i++) {\r\n+                if (this._curTouchesPos[i].sub(this._curTouchesPos[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                    continue;\r\n+                }\r\n+                lastIndex = i;\r\n+                this.graphics.lineTo(this._curTouchesPos[i].x - worldPos.x, this._curTouchesPos[i].y - worldPos.y);\r\n+            }\r\n+            this.graphics.stroke();\r\n+\r\n+        } else if (state.touch == \"end\") {\r\n+\r\n+            this._curTouchesPos.push(state.curTouchesPos);\r\n+\r\n+            this.graphics.clear();\r\n+            if (this._curTouchesPos.length > 0) {\r\n+\r\n+                for (let i = 0; i < this._curTouchesPos.length; i++) {\r\n+\r\n+                    this._curTouchesPos[i].y = this._view.height - this._curTouchesPos[i].y;\r\n+                }\r\n+\r\n+                this._curTouchesPos.sort(this.comparePosX());\r\n+\r\n+                for (let i = 0; i < this._allPointRect.length; i++) {\r\n+\r\n+                    this._allPointRect[i].isContains = false;\r\n+                    this._allPointRect[i].limitQiMinx = false;\r\n+                    this._allPointRect[i].limitEndMaxx = false;\r\n+                    this._allPointRect[i].isPointInner = false;\r\n+                }\r\n+\r\n+                let pointNums = 0;\r\n+                for (let i = 0; i < this._curTouchesPos.length; i++) {\r\n+\r\n+                    for (let j = 0; j < this._allPointRect.length; j++) {\r\n+\r\n+                        if (this._allPointRect[j].rect.contains(this._curTouchesPos[i])) {\r\n+                            this._allPointRect[j].isContains = true;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                }\r\n+                for (let i = 0; i < this._allPointRect.length; i++) {\r\n+\r\n+                    if (this._allPointRect[i].isContains) {\r\n+                        pointNums++;\r\n+                        continue;\r\n+                    }\r\n+                }\r\n+\r\n+                console.log('===== 5555 =====' + pointNums);\r\n+\r\n+                if (pointNums >= 2) {\r\n+\r\n+                    for (let i = 0; i < this._allPointRect.length; i++) {\r\n+\r\n+                        if (this._allPointRect[i].rect.contains(this._curTouchesPos[0]) ||\r\n+                            this._allPointRect[i].rect.contains(this._curTouchesPos[this._curTouchesPos.length - 1])) {\r\n+                            this._allPointRect[i].isPointInner = true;\r\n+                        }\r\n+\r\n+                        if (this._allPointRect[i].isContains) {\r\n+\r\n+                            if (this._curTouchesPos[0].x < this._allPointRect[i].minx) {\r\n+\r\n+                                this._allPointRect[i].limitQiMinx = true;\r\n+                            }\r\n+                            if (this._curTouchesPos[this._curTouchesPos.length - 1].x > this._allPointRect[i].maxx) {\r\n+\r\n+                                this._allPointRect[i].limitEndMaxx = true;\r\n+                            }\r\n+                        }\r\n+                    }\r\n+\r\n+                    console.log('===== allPointRect ====');\r\n+                    console.log(this._allPointRect);\r\n+                    console.log(this._curTouchesPos);\r\n+\r\n+                    let temp = {};\r\n+                    if (this._allPointRect[0].isContains && this._allPointRect[1].isContains) {\r\n+\r\n+                        if (this._allPointRect[0].isPointInner && this._allPointRect[1].isPointInner) {\r\n+\r\n+                            console.log('===== 线段 =====');\r\n+                            //线段\r\n+                            let pointMidChang = 426;\r\n+                            temp['QiX'] = 542;\r\n+                            temp['QiY'] = 647;\r\n+                            temp['angle'] = 0;\r\n+                            temp['chaoInterQiX'] = 0;\r\n+                            temp['chaoInterQiY'] = 0;\r\n+                            temp['chang'] = pointMidChang;\r\n+                            temp['result'] = false;\r\n+                            state.allTouchLinesPos['line1'] = temp;\r\n+\r\n+                        } else if (this._allPointRect[1].limitQiMinx && this._allPointRect[0].limitEndMaxx) {\r\n+\r\n+                            console.log('===== 直线 =====');\r\n+                            // 直线\r\n+                            temp['QiX'] = 542;\r\n+                            temp['QiY'] = 647;\r\n+                            temp['angle'] = 0;\r\n+                            temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n+                            temp['chaoInterQiY'] = temp['QiY'];\r\n+                            temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n+                            temp['result'] = false;\r\n+                            state.allTouchLinesPos['line1'] = temp;\r\n+\r\n+                        } else if (this._allPointRect[1].limitQiMinx && !this._allPointRect[0].limitEndMaxx) {\r\n+\r\n+                            console.log('===== 左点超出射线 =====')\r\n+\r\n+                            temp['QiX'] = 542;\r\n+                            temp['QiY'] = 647;\r\n+                            temp['angle'] = 0;\r\n+                            temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n+                            temp['chaoInterQiY'] = temp['QiY'];\r\n+\r\n+                            temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n+                            ;\r\n+                            if (this._allPointRect[0].isPointInner) {\r\n+\r\n+                                temp['result'] = true;\r\n+\r\n+                            } else {\r\n+\r\n+                                temp['result'] = false;\r\n+                            }\r\n+\r\n+                            state.allTouchLinesPos['line1'] = temp;\r\n+\r\n+\r\n+\r\n+                        } else if (!this._allPointRect[1].limitQiMinx && this._allPointRect[0].limitEndMaxx) {\r\n+\r\n+                            console.log('===== 右点超出的射线 =====');\r\n+                            // 右点超出的射线\r\n+\r\n+                            temp['QiX'] = 542;\r\n+                            temp['QiY'] = 647;\r\n+                            temp['angle'] = 0;\r\n+                            temp['chaoInterQiX'] = 0;\r\n+                            temp['chaoInterQiY'] = 0;\r\n+\r\n+                            temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n+                            temp['result'] = false;\r\n+                            state.allTouchLinesPos['line1'] = temp;\r\n+\r\n+                        }\r\n+                    }\r\n+                }\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.touch = 'no';\r\n+                    state1.allTouchLinesPos = state.allTouchLinesPos;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 20);\r\n+            }\r\n+        }\r\n+\r\n+\r\n+        if (!globalThis._.isEqual(oldState.allTouchLinesPos, state.allTouchLinesPos)) {\r\n+\r\n+            for (let key in this._allTouchLinesObj) {\r\n+                this._allTouchLinesObj[key].removeFromParent();\r\n+            }\r\n+\r\n+            for (let key in state.allTouchLinesPos) {\r\n+\r\n+                let temp = state.allTouchLinesPos[key];\r\n+                let zhiLine = fgui.UIPackage.createObjectFromURL('ui://mgpb39d5xdox2a');\r\n+                this._view.addChild(zhiLine);\r\n+                zhiLine.width = temp['chang'];\r\n+\r\n+                zhiLine.x = temp.QiX - temp.chaoInterQiX;\r\n+                zhiLine.y = temp.QiY - temp.chaoInterQiY;\r\n+\r\n+                zhiLine.rotation = temp.angle;\r\n+                this._allTouchLinesObj[key] = zhiLine;\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.reset, state.reset)) {\r\n+\r\n+            if (state.reset) {\r\n+\r\n+                for (let key in state.allTouchLinesPos) {\r\n+                    delete state.allTouchLinesPos[key];\r\n+                }\r\n+\r\n+                for (let key in this._allTouchLinesObj) {\r\n+                    this._allTouchLinesObj[key].removeFromParent();\r\n+                }\r\n+\r\n+                for (let key in this._allOtherTouchLinesObj) {\r\n+                    this._allOtherTouchLinesObj[key].removeFromParent();\r\n+                }\r\n+\r\n+                setTimeout(() => {\r\n+\r\n+                    let state1: any = globalThis._.cloneDeep(this._state);\r\n+                    state1.reset = false;\r\n+                    state1.allTouchLinesPos = state.allTouchLinesPos;\r\n+                    this.updateState(state1);\r\n+\r\n+                }, 10);\r\n+\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                // let keyBtn = this._view.getChild('input1').asButton;\r\n+                // this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+    angle(start, end) {\r\n+        var diff_x = end.x - start.x,\r\n+            diff_y = end.y - start.y;\r\n+        //返回角度,不是弧度\r\n+        return 360 * Math.atan(diff_y / diff_x) / (2 * Math.PI);\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+        this.schedule(this.dragSchedule, this._scheduleTime);\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1625473513359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -649,656 +649,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v6 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _resetBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private _curTouchesPos: any = [];\r\n-\r\n-    private _moveCurPos: cc.Vec2;\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private _dragging = false;\r\n-\r\n-    private _scheduleTime = 0.08;\r\n-\r\n-    private _allTouchLinesObj = {};\r\n-\r\n-    private _allOtherTouchLinesObj = {};\r\n-\r\n-    private _allPointRect = [];\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        let pointGroup = this._view.getChild(\"n101\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == pointGroup) {\r\n-                let img = this._view.getChildAt(i).asImage;\r\n-                let temp = {\r\n-                    'rect': new cc.Rect(img.x, img.y, img.width, img.height),\r\n-                    'isContains': false,\r\n-                    'minx': img.x,\r\n-                    'maxx': img.x + img.width,\r\n-                    'miny': img.y,\r\n-                    'maxy': img.y + img.height,\r\n-                    'limitQiMinx': false,\r\n-                    'limitEndMaxx': false,\r\n-                    'isPointInner': false\r\n-                };\r\n-                this._allPointRect.push(temp);\r\n-            }\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        this._resetBtn = this._view.getChild(\"restart\").asButton;\r\n-        this._resetBtn.on(fgui.Event.CLICK, this._clickReset, this);\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        this.graphics = huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No,\r\n-            touch: \"no\",\r\n-            reset: false,\r\n-            curTouchesPos: cc.Vec2,\r\n-            allTouchLinesPos: {},\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        if (state.touch === 'no') {\r\n-            state.touch = 'start';\r\n-            let tempPos = new cc.Vec2(event.touch.getLocation().x, event.touch.getLocation().y);\r\n-            state.curTouchesPos = tempPos;\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        this._dragging = true;\r\n-        this._moveCurPos = new cc.Vec2(event.touch.getLocation().x, event.touch.getLocation().y);\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-        this._dragging = false;\r\n-\r\n-        let tempPos = new cc.Vec2(event.touch.getLocation().x, event.touch.getLocation().y);\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.curTouchesPos = tempPos;\r\n-        state.touch = 'end';\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 排序方法\r\n-    comparePosX() {\r\n-        return function (a, b) {\r\n-            var value1 = a.x;\r\n-            var value2 = b.x;\r\n-            return value1 - value2;\r\n-        }\r\n-    }\r\n-\r\n-    // 排序方法\r\n-    comparePosY() {\r\n-        return function (a, b) {\r\n-            var value1 = a.y;\r\n-            var value2 = b.y;\r\n-            return value1 - value2;\r\n-        }\r\n-    }\r\n-\r\n-    private _clickReset(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.reset = true;\r\n-        this.updateState(state);\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-        if (Object.keys(state.allTouchLinesPos).length === 0) {\r\n-\r\n-            state.submit = this.submitType.GuideShow;\r\n-\r\n-        } else {\r\n-\r\n-            let isAllRight = true;\r\n-            for (let key in state.allTouchLinesPos) {\r\n-\r\n-                if (!state.allTouchLinesPos[key].result) {\r\n-                    isAllRight = false;\r\n-                    break;\r\n-                }\r\n-            }\r\n-            if (isAllRight) {\r\n-                state.submit = this.submitType.RightFeed;\r\n-            } else {\r\n-                state.submit = this.submitType.WrongFeed;\r\n-            }\r\n-        }\r\n-\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    // 临时\r\n-    // 拖拽定时器\r\n-    dragSchedule() {\r\n-        if (this._dragging) {\r\n-\r\n-            console.log('==== 3333333 拖拽定时器 ======');\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.curTouchesPos = this._moveCurPos;\r\n-            state.touch = \"move\";\r\n-            this.updateState(state);\r\n-        }\r\n-    }\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (state.touch == \"start\") {\r\n-\r\n-            this._curTouchesPos.length = 0;\r\n-            this._curTouchesPos.push(state.curTouchesPos);\r\n-            this.graphics.clear();\r\n-\r\n-        } else if (state.touch == \"move\") {\r\n-\r\n-            this._curTouchesPos.push(state.curTouchesPos);\r\n-\r\n-            const MIN_POINT_DISTANCE = 4;\r\n-\r\n-            let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n-            this.graphics.moveTo(this._curTouchesPos[0].x - worldPos.x, this._curTouchesPos[0].y - worldPos.y);\r\n-            let lastIndex = 0;\r\n-            for (let i = 1, l = this._curTouchesPos.length; i < l; i++) {\r\n-                if (this._curTouchesPos[i].sub(this._curTouchesPos[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                    continue;\r\n-                }\r\n-                lastIndex = i;\r\n-                this.graphics.lineTo(this._curTouchesPos[i].x - worldPos.x, this._curTouchesPos[i].y - worldPos.y);\r\n-            }\r\n-            this.graphics.stroke();\r\n-\r\n-        } else if (state.touch == \"end\") {\r\n-\r\n-            this._curTouchesPos.push(state.curTouchesPos);\r\n-\r\n-            this.graphics.clear();\r\n-            if (this._curTouchesPos.length > 0) {\r\n-\r\n-                for (let i = 0; i < this._curTouchesPos.length; i++) {\r\n-\r\n-                    this._curTouchesPos[i].y = this._view.height - this._curTouchesPos[i].y;\r\n-                }\r\n-\r\n-                this._curTouchesPos.sort(this.comparePosX());\r\n-\r\n-                for (let i = 0; i < this._allPointRect.length; i++) {\r\n-\r\n-                    this._allPointRect[i].isContains = false;\r\n-                    this._allPointRect[i].limitQiMinx = false;\r\n-                    this._allPointRect[i].limitEndMaxx = false;\r\n-                    this._allPointRect[i].isPointInner = false;\r\n-                }\r\n-\r\n-                let pointNums = 0;\r\n-                for (let i = 0; i < this._curTouchesPos.length; i++) {\r\n-\r\n-                    for (let j = 0; j < this._allPointRect.length; j++) {\r\n-\r\n-                        if (this._allPointRect[j].rect.contains(this._curTouchesPos[i])) {\r\n-                            this._allPointRect[j].isContains = true;\r\n-                            break;\r\n-                        }\r\n-                    }\r\n-                }\r\n-                for (let i = 0; i < this._allPointRect.length; i++) {\r\n-\r\n-                    if (this._allPointRect[i].isContains) {\r\n-                        pointNums++;\r\n-                        continue;\r\n-                    }\r\n-                }\r\n-\r\n-                console.log('===== 5555 =====' + pointNums);\r\n-\r\n-                if (pointNums >= 2) {\r\n-\r\n-                    for (let i = 0; i < this._allPointRect.length; i++) {\r\n-\r\n-                        if (this._allPointRect[i].rect.contains(this._curTouchesPos[0]) ||\r\n-                            this._allPointRect[i].rect.contains(this._curTouchesPos[this._curTouchesPos.length - 1])) {\r\n-                            this._allPointRect[i].isPointInner = true;\r\n-                        }\r\n-\r\n-                        if (this._allPointRect[i].isContains) {\r\n-\r\n-                            if (this._curTouchesPos[0].x < this._allPointRect[i].minx) {\r\n-\r\n-                                this._allPointRect[i].limitQiMinx = true;\r\n-                            }\r\n-                            if (this._curTouchesPos[this._curTouchesPos.length - 1].x > this._allPointRect[i].maxx) {\r\n-\r\n-                                this._allPointRect[i].limitEndMaxx = true;\r\n-                            }\r\n-                        }\r\n-                    }\r\n-\r\n-                    console.log('===== allPointRect ====');\r\n-                    console.log(this._allPointRect);\r\n-                    console.log(this._curTouchesPos);\r\n-\r\n-                    let temp = {};\r\n-                    if (this._allPointRect[0].isContains && this._allPointRect[1].isContains) {\r\n-\r\n-                        if (this._allPointRect[0].isPointInner && this._allPointRect[1].isPointInner) {\r\n-\r\n-                            console.log('===== 线段 =====');\r\n-                            //线段\r\n-                            let pointMidChang = 426;\r\n-                            temp['QiX'] = 542;\r\n-                            temp['QiY'] = 647;\r\n-                            temp['angle'] = 0;\r\n-                            temp['chaoInterQiX'] = 0;\r\n-                            temp['chaoInterQiY'] = 0;\r\n-                            temp['chang'] = pointMidChang;\r\n-                            temp['result'] = false;\r\n-                            state.allTouchLinesPos['line1'] = temp;\r\n-\r\n-                        } else if (this._allPointRect[1].limitQiMinx && this._allPointRect[0].limitEndMaxx) {\r\n-\r\n-                            console.log('===== 直线 =====');\r\n-                            // 直线\r\n-                            temp['QiX'] = 542;\r\n-                            temp['QiY'] = 647;\r\n-                            temp['angle'] = 0;\r\n-                            temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n-                            temp['chaoInterQiY'] = temp['QiY'];\r\n-                            temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n-                            temp['result'] = false;\r\n-                            state.allTouchLinesPos['line1'] = temp;\r\n-\r\n-                        } else if (this._allPointRect[1].limitQiMinx && !this._allPointRect[0].limitEndMaxx) {\r\n-\r\n-                            console.log('===== 左点超出射线 =====')\r\n-\r\n-                            temp['QiX'] = 542;\r\n-                            temp['QiY'] = 647;\r\n-                            temp['angle'] = 0;\r\n-                            temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n-                            temp['chaoInterQiY'] = temp['QiY'];\r\n-\r\n-                            temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n-                            ;\r\n-                            if (this._allPointRect[0].isPointInner) {\r\n-\r\n-                                temp['result'] = true;\r\n-\r\n-                            } else {\r\n-\r\n-                                temp['result'] = false;\r\n-                            }\r\n-\r\n-                            state.allTouchLinesPos['line1'] = temp;\r\n-\r\n-\r\n-\r\n-                        } else if (!this._allPointRect[1].limitQiMinx && this._allPointRect[0].limitEndMaxx) {\r\n-\r\n-                            console.log('===== 右点超出的射线 =====');\r\n-                            // 右点超出的射线\r\n-\r\n-                            temp['QiX'] = 542;\r\n-                            temp['QiY'] = 647;\r\n-                            temp['angle'] = 0;\r\n-                            temp['chaoInterQiX'] = 0;\r\n-                            temp['chaoInterQiY'] = 0;\r\n-\r\n-                            temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n-                            temp['result'] = false;\r\n-                            state.allTouchLinesPos['line1'] = temp;\r\n-\r\n-                        }\r\n-                    }\r\n-                }\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.touch = 'no';\r\n-                    state1.allTouchLinesPos = state.allTouchLinesPos;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 20);\r\n-            }\r\n-        }\r\n-\r\n-\r\n-        if (!globalThis._.isEqual(oldState.allTouchLinesPos, state.allTouchLinesPos)) {\r\n-\r\n-            for (let key in this._allTouchLinesObj) {\r\n-                this._allTouchLinesObj[key].removeFromParent();\r\n-            }\r\n-\r\n-            for (let key in state.allTouchLinesPos) {\r\n-\r\n-                let temp = state.allTouchLinesPos[key];\r\n-                let zhiLine = fgui.UIPackage.createObjectFromURL('ui://mgpb39d5xdox2a');\r\n-                this._view.addChild(zhiLine);\r\n-                zhiLine.width = temp['chang'];\r\n-\r\n-                zhiLine.x = temp.QiX - temp.chaoInterQiX;\r\n-                zhiLine.y = temp.QiY - temp.chaoInterQiY;\r\n-\r\n-                zhiLine.rotation = temp.angle;\r\n-                this._allTouchLinesObj[key] = zhiLine;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.reset, state.reset)) {\r\n-\r\n-            if (state.reset) {\r\n-\r\n-                for (let key in state.allTouchLinesPos) {\r\n-                    delete state.allTouchLinesPos[key];\r\n-                }\r\n-\r\n-                for (let key in this._allTouchLinesObj) {\r\n-                    this._allTouchLinesObj[key].removeFromParent();\r\n-                }\r\n-\r\n-                for (let key in this._allOtherTouchLinesObj) {\r\n-                    this._allOtherTouchLinesObj[key].removeFromParent();\r\n-                }\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state1: any = globalThis._.cloneDeep(this._state);\r\n-                    state1.reset = false;\r\n-                    state1.allTouchLinesPos = state.allTouchLinesPos;\r\n-                    this.updateState(state1);\r\n-\r\n-                }, 10);\r\n-\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                // let keyBtn = this._view.getChild('input1').asButton;\r\n-                // this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-    angle(start, end) {\r\n-        var diff_x = end.x - start.x,\r\n-            diff_y = end.y - start.y;\r\n-        //返回角度,不是弧度\r\n-        return 360 * Math.atan(diff_y / diff_x) / (2 * Math.PI);\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-        this.schedule(this.dragSchedule, this._scheduleTime);\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1625473574254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -405,9 +405,9 @@\n                             temp['QiX'] = 542;\r\n                             temp['QiY'] = 647;\r\n                             temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n-                            temp['chaoInterQiY'] = temp['QiY'];\r\n+                            temp['chaoInterQiY'] = 0;\r\n \r\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             ;\r\n                             if (this._allPointRect[0].isPointInner) {\r\n"
                },
                {
                    "date": 1625473587725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -392,9 +392,9 @@\n                             temp['QiX'] = 542;\r\n                             temp['QiY'] = 647;\r\n                             temp['angle'] = 0;\r\n                             temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n-                            temp['chaoInterQiY'] = temp['QiY'];\r\n+                            temp['chaoInterQiY'] = 0;\r\n                             temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                             temp['result'] = false;\r\n                             state.allTouchLinesPos['line1'] = temp;\r\n \r\n"
                }
            ],
            "date": 1625472376456,
            "name": "Commit-0",
            "content": "\r\n/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: ruzhuan\r\n * @Date: 2021-06-08 18:00:00\r\n * @LastEditors: ruzhuan\r\n * @LastEditTime: 2021-06-08 18:00:00\r\n */\r\nconst { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class t4_05_model_v5 extends cc.Component {\r\n    private _worldRoot: cc.Node;\r\n\r\n    private _view: fgui.GComponent;\r\n\r\n    private _c1: fgui.Controller;\r\n\r\n    private _title: fgui.GButton;\r\n\r\n    private _titleTrigger: fgui.GLoader;\r\n\r\n    private _submitBtn: fgui.GButton;\r\n\r\n    private _resetBtn: fgui.GButton;\r\n\r\n    private _package: any;\r\n\r\n    private _curTouchesPos: any = [];\r\n\r\n    private _moveCurPos: cc.Vec2;\r\n\r\n    private graphics: cc.Graphics = null;\r\n\r\n    private _dragging = false;\r\n\r\n    private _scheduleTime = 0.08;\r\n\r\n    private _allTouchLinesObj = {};\r\n\r\n    private _allOtherTouchLinesObj = {};\r\n\r\n    private _allPointRect = [];\r\n\r\n    private submitType: any = cc.Enum({\r\n\r\n        No: 0,\r\n        GuideShow: 1,\r\n        WrongFeed: 2,\r\n        RightFeed: 3\r\n    });\r\n\r\n    // 远程动态组件\r\n    private feedback: any;\r\n\r\n    private _state = {};\r\n\r\n    get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    set state(v: any) {\r\n        this.updateUi(this._state, v);\r\n        this._state = v;\r\n        this.mergeState();\r\n    }\r\n\r\n    async onLoad() {\r\n\r\n        this._worldRoot = cc.find(\"Canvas\").parent;\r\n\r\n        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n\r\n        fgui.GRoot.inst.addChild(this._view);\r\n\r\n        this._c1 = this._view.getController(\"c1\");\r\n\r\n        // 臨時\r\n        // bug 初始设置不播放不生效\r\n        if (this._c1) {\r\n            this._c1.selectedIndex = 1;\r\n            this._c1.selectedIndex = 0;\r\n        }\r\n\r\n        let tt1 = new cc.Vec2(953, 403);\r\n        let tt2 = new cc.Vec2(800, 626);\r\n        console.log('=== mag 66666 DDDD ===' + tt1.sub(tt2).mag());\r\n\r\n        let pointGroup = this._view.getChild(\"n84\").asGroup;\r\n        for (let i = 0; i < this._view.numChildren; i++) {\r\n            if (this._view.getChildAt(i).group == pointGroup) {\r\n                let img = this._view.getChildAt(i).asImage;\r\n                let temp = {\r\n                    'rect': new cc.Rect(img.x, img.y, img.width, img.height),\r\n                    'isContains': false,\r\n                    'minx': img.x,\r\n                    'maxx': img.x + img.width,\r\n                    'miny': img.y,\r\n                    'maxy': img.y + img.height,\r\n                    'limitQiMinx': false,\r\n                    'limitEndMaxx': false,\r\n                    'isPointInner': false\r\n                };\r\n                this._allPointRect.push(temp);\r\n            }\r\n        }\r\n\r\n        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n\r\n        this._title = this._view.getChild(\"title\").asButton;\r\n\r\n        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n\r\n        this._resetBtn = this._view.getChild(\"restart\").asButton;\r\n        this._resetBtn.on(fgui.Event.CLICK, this._clickReset, this);\r\n\r\n        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n\r\n        let huiNode = new cc.Node('huiNode');\r\n        huiNode.parent = this._worldRoot;\r\n\r\n        this.graphics = huiNode.addComponent(cc.Graphics);\r\n        this.graphics.lineWidth = 20;\r\n        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n        this.graphics.fillColor = cc.color(255, 0, 0);\r\n\r\n        // 初始化state\r\n        this._state = {\r\n            title: false,\r\n            submit: this.submitType.No,\r\n            touch: \"no\",\r\n            reset: false,\r\n            curTouchesPos: cc.Vec2,\r\n            allTouchLinesPos: {},\r\n        }\r\n    }\r\n\r\n    async init(data: any) {\r\n        // 临时 model component json 配置加载\r\n        let { pathConfig, model, components } = data;\r\n        let Package = pathConfig.packageName;\r\n        let GComponent = model.uiPath;\r\n        let { boxSoundUrl, guidIndex } = model.config;\r\n        this._package = Package;\r\n\r\n        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n\r\n        if (components) {\r\n            for (const key in components) {\r\n                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n                let componentBundle: any = await loadBundle(componentPath);\r\n                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n                this[key] = componentPrefab;\r\n            }\r\n        }\r\n    }\r\n\r\n    _onDrawStart(event) {\r\n        console.log('===== start 111 ====' + event.touch.getLocation());\r\n\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        if (state.touch === 'no') {\r\n            state.touch = 'start';\r\n            let tempPos = new cc.Vec2(event.touch.getLocation().x, event.touch.getLocation().y);\r\n            state.curTouchesPos = tempPos;\r\n            this.updateState(state);\r\n        }\r\n    }\r\n\r\n    _onDrawMove(event) {\r\n\r\n        this._dragging = true;\r\n        this._moveCurPos = new cc.Vec2(event.touch.getLocation().x, event.touch.getLocation().y);\r\n    }\r\n\r\n    _onDrawEnd(event) {\r\n\r\n        this._dragging = false;\r\n\r\n        let tempPos = new cc.Vec2(event.touch.getLocation().x, event.touch.getLocation().y);\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        state.curTouchesPos = tempPos;\r\n        state.touch = 'end';\r\n        this.updateState(state);\r\n    }\r\n\r\n\r\n    // 排序方法\r\n    comparePosX() {\r\n        return function (a, b) {\r\n            var value1 = a.x;\r\n            var value2 = b.x;\r\n            return value1 - value2;\r\n        }\r\n    }\r\n\r\n    // 排序方法\r\n    comparePosY() {\r\n        return function (a, b) {\r\n            var value1 = a.y;\r\n            var value2 = b.y;\r\n            return value1 - value2;\r\n        }\r\n    }\r\n\r\n    private _clickReset(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        state.reset = true;\r\n        this.updateState(state);\r\n\r\n    }\r\n\r\n    private _clickSubmit(evt: any) {\r\n\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n\r\n        if (Object.keys(state.allTouchLinesPos).length === 0) {\r\n\r\n            state.submit = this.submitType.GuideShow;\r\n\r\n        } else {\r\n\r\n            let isAllRight = true;\r\n            for (let key in state.allTouchLinesPos) {\r\n\r\n                if (!state.allTouchLinesPos[key].result) {\r\n                    isAllRight = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (isAllRight) {\r\n                state.submit = this.submitType.RightFeed;\r\n            } else {\r\n                state.submit = this.submitType.WrongFeed;\r\n            }\r\n        }\r\n\r\n        this.updateState(state);\r\n    }\r\n\r\n    private _clickTitle(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        state.title = true;\r\n        this.updateState(state);\r\n    }\r\n\r\n    // 临时\r\n    // 拖拽定时器\r\n    dragSchedule() {\r\n        if (this._dragging) {\r\n\r\n            console.log('==== 3333333 拖拽定时器 ======');\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.curTouchesPos = this._moveCurPos;\r\n            state.touch = \"move\";\r\n            this.updateState(state);\r\n        }\r\n    }\r\n\r\n    // 获取状态\r\n    getState(data: any) {\r\n        this.updateState(data);\r\n    }\r\n\r\n    // 更新状态层\r\n    updateState(curState: any) {\r\n        if (globalThis._.isEqual(this._state, curState)) return;\r\n        this.state = curState;\r\n    }\r\n\r\n    // 更新ui层\r\n    updateUi(oldState: any, state: any) {\r\n\r\n        if (state.touch == \"start\") {\r\n\r\n            this._curTouchesPos.length = 0;\r\n            this._curTouchesPos.push(state.curTouchesPos);\r\n            this.graphics.clear();\r\n\r\n        } else if (state.touch == \"move\") {\r\n\r\n            this._curTouchesPos.push(state.curTouchesPos);\r\n\r\n            const MIN_POINT_DISTANCE = 4;\r\n\r\n            let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n            this.graphics.moveTo(this._curTouchesPos[0].x - worldPos.x, this._curTouchesPos[0].y - worldPos.y);\r\n            let lastIndex = 0;\r\n            for (let i = 1, l = this._curTouchesPos.length; i < l; i++) {\r\n                if (this._curTouchesPos[i].sub(this._curTouchesPos[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n                    continue;\r\n                }\r\n                lastIndex = i;\r\n                this.graphics.lineTo(this._curTouchesPos[i].x - worldPos.x, this._curTouchesPos[i].y - worldPos.y);\r\n            }\r\n            this.graphics.stroke();\r\n\r\n        } else if (state.touch == \"end\") {\r\n\r\n            this._curTouchesPos.push(state.curTouchesPos);\r\n\r\n            this.graphics.clear();\r\n            if (this._curTouchesPos.length > 0) {\r\n\r\n                for (let i = 0; i < this._curTouchesPos.length; i++) {\r\n\r\n                    this._curTouchesPos[i].y = this._view.height - this._curTouchesPos[i].y;\r\n                }\r\n\r\n                this._curTouchesPos.sort(this.comparePosX());\r\n\r\n                for (let i = 0; i < this._allPointRect.length; i++) {\r\n\r\n                    this._allPointRect[i].isContains = false;\r\n                    this._allPointRect[i].limitQiMinx = false;\r\n                    this._allPointRect[i].limitEndMaxx = false;\r\n                    this._allPointRect[i].isPointInner = false;\r\n                }\r\n\r\n                let pointNums = 0;\r\n                for (let i = 0; i < this._curTouchesPos.length; i++) {\r\n\r\n                    for (let j = 0; j < this._allPointRect.length; j++) {\r\n\r\n                        if (this._allPointRect[j].rect.contains(this._curTouchesPos[i])) {\r\n                            this._allPointRect[j].isContains = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                for (let i = 0; i < this._allPointRect.length; i++) {\r\n\r\n                    if (this._allPointRect[i].isContains) {\r\n                        pointNums++;\r\n                        continue;\r\n                    }\r\n                }\r\n                console.log('===== 5555 =====' + pointNums);\r\n\r\n                if (pointNums >= 3) {\r\n\r\n                    for (let i = 0; i < this._allPointRect.length; i++) {\r\n\r\n                        if (this._allPointRect[i].rect.contains(this._curTouchesPos[0]) ||\r\n                            this._allPointRect[i].rect.contains(this._curTouchesPos[this._curTouchesPos.length - 1])) {\r\n                            this._allPointRect[i].isPointInner = true;\r\n                        }\r\n\r\n                        if (this._allPointRect[i].isContains) {\r\n\r\n                            if (this._curTouchesPos[0].x < this._allPointRect[i].minx) {\r\n\r\n                                this._allPointRect[i].limitQiMinx = true;\r\n                            }\r\n                            if (this._curTouchesPos[this._curTouchesPos.length - 1].x > this._allPointRect[i].maxx) {\r\n\r\n                                this._allPointRect[i].limitEndMaxx = true;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    console.log('===== allPointRect ====');\r\n                    console.log(this._allPointRect);\r\n                    console.log(this._curTouchesPos);\r\n\r\n                    let temp = {};\r\n                    if (this._allPointRect[0].isContains && this._allPointRect[1].isContains && this._allPointRect[2].isContains) {\r\n\r\n                        if (this._allPointRect[0].isPointInner && this._allPointRect[2].isPointInner) {\r\n\r\n                            console.log('===== 线段 =====');\r\n                            //线段\r\n                            let pointMidChang = 753;\r\n                            temp['QiX'] = 673;\r\n                            temp['QiY'] = 222;\r\n                            temp['angle'] = 47;\r\n                            temp['chaoInterQiX'] = 0;\r\n                            temp['chaoInterQiY'] = 0;\r\n                            temp['chang'] = pointMidChang;\r\n                            temp['result'] = false;\r\n                            state.allTouchLinesPos['line1'] = temp;\r\n\r\n                        } else if (this._allPointRect[0].limitQiMinx && this._allPointRect[2].limitEndMaxx) {\r\n\r\n\r\n                            console.log('===== 直线 =====' + Math.pow(2, 2));\r\n                            // 直线\r\n                            temp['QiX'] = 673;\r\n                            temp['QiY'] = 222;\r\n                            temp['angle'] = 47;\r\n                            temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n                            temp['chaoInterQiY'] = Math.tan(temp['angle'] * 3.14 / 180) * temp['chaoInterQiX'];\r\n                            temp['chang'] = this._curTouchesPos[this._curTouchesPos.length - 1].sub(this._curTouchesPos[0]).mag();\r\n                            temp['result'] = true;\r\n                            state.allTouchLinesPos['line1'] = temp;\r\n\r\n                        } else if (this._allPointRect[0].limitQiMinx && !this._allPointRect[2].limitEndMaxx) {\r\n\r\n                            // 左点超出射线\r\n                            let pointMidChang = 753;\r\n\r\n\r\n                            temp['QiX'] = 673;\r\n                            temp['QiY'] = 222;\r\n                            temp['angle'] = 47;\r\n                            temp['chaoInterQiX'] = temp['QiX'] - this._curTouchesPos[0].x;\r\n                            temp['chaoInterQiY'] = Math.tan(temp['angle'] * 3.14 / 180) * temp['chaoInterQiX'];\r\n                            let jisaun1 = Math.ceil(temp['chaoInterQiX']) * Math.ceil(temp['chaoInterQiX']);\r\n                            let jisaun2 = Math.ceil(temp['chaoInterQiY']) * Math.ceil(temp['chaoInterQiY']);\r\n                            let jisuan3 = Math.sqrt(jisaun1 + jisaun2)\r\n\r\n                            temp['chang'] = pointMidChang + jisuan3;\r\n                            ;\r\n                            temp['result'] = false;\r\n                            state.allTouchLinesPos['line1'] = temp;\r\n\r\n                            console.log('===== 左点超出射线 =====')\r\n\r\n                        } else if (!this._allPointRect[0].limitQiMinx && this._allPointRect[2].limitEndMaxx) {\r\n\r\n                            console.log('===== 右点超出的射线 =====');\r\n                            // 右点超出的射线\r\n                            let pointMaxX = 1199;\r\n                            let pointMaxY = 804;\r\n\r\n                            let pointMidChang = 753;\r\n\r\n                            temp['QiX'] = 673;\r\n                            temp['QiY'] = 222;\r\n                            temp['angle'] = 47;\r\n                            temp['chaoInterQiX'] = 0;\r\n                            temp['chaoInterQiY'] = 0;\r\n\r\n                            let jisaun1 = Math.ceil(this._curTouchesPos[this._curTouchesPos.length - 1].x - pointMaxX) * Math.ceil(this._curTouchesPos[this._curTouchesPos.length - 1].x - pointMaxX);\r\n                            let jisaun2 = Math.ceil(this._curTouchesPos[this._curTouchesPos.length - 1].y - pointMaxY) * Math.ceil(this._curTouchesPos[this._curTouchesPos.length - 1].y - pointMaxY);\r\n                            let jisuan3 = Math.sqrt(jisaun1 + jisaun2);\r\n\r\n                            temp['chang'] = pointMidChang + jisuan3;\r\n                            temp['result'] = false;\r\n                            state.allTouchLinesPos['line1'] = temp;\r\n\r\n                        }\r\n                    }\r\n                }\r\n\r\n                setTimeout(() => {\r\n\r\n                    let state1: any = globalThis._.cloneDeep(this._state);\r\n                    state1.touch = 'no';\r\n                    state1.allTouchLinesPos = state.allTouchLinesPos;\r\n                    this.updateState(state1);\r\n\r\n                }, 20);\r\n            }\r\n        }\r\n\r\n\r\n        if (!globalThis._.isEqual(oldState.allTouchLinesPos, state.allTouchLinesPos)) {\r\n\r\n            for (let key in this._allTouchLinesObj) {\r\n                this._allTouchLinesObj[key].removeFromParent();\r\n            }\r\n\r\n            for (let key in state.allTouchLinesPos) {\r\n\r\n                let temp = state.allTouchLinesPos[key];\r\n                let zhiLine = fgui.UIPackage.createObjectFromURL('ui://mgpb39d5xdox2a');\r\n                this._view.addChild(zhiLine);\r\n                zhiLine.width = temp['chang'];\r\n\r\n                zhiLine.x = temp.QiX - temp.chaoInterQiX;\r\n                zhiLine.y = temp.QiY - temp.chaoInterQiY;\r\n\r\n                zhiLine.rotation = temp.angle;\r\n                this._allTouchLinesObj[key] = zhiLine;\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.reset, state.reset)) {\r\n\r\n            if (state.reset) {\r\n\r\n                for (let key in state.allTouchLinesPos) {\r\n                    delete state.allTouchLinesPos[key];\r\n                }\r\n\r\n                for (let key in this._allTouchLinesObj) {\r\n                    this._allTouchLinesObj[key].removeFromParent();\r\n                }\r\n\r\n                for (let key in this._allOtherTouchLinesObj) {\r\n                    this._allOtherTouchLinesObj[key].removeFromParent();\r\n                }\r\n\r\n                setTimeout(() => {\r\n\r\n                    let state1: any = globalThis._.cloneDeep(this._state);\r\n                    state1.reset = false;\r\n                    state1.allTouchLinesPos = state.allTouchLinesPos;\r\n                    this.updateState(state1);\r\n\r\n                }, 10);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n\r\n            if (state.submit === this.submitType.RightFeed) {\r\n\r\n                this.answerFeedback(true);\r\n\r\n            } else if (state.submit === this.submitType.WrongFeed) {\r\n\r\n                this.answerFeedback(false);\r\n\r\n            } else if (state.submit === this.submitType.GuideShow) {\r\n\r\n                // let keyBtn = this._view.getChild('input1').asButton;\r\n                // this.handTips2(keyBtn);\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n            this.playTitle(state.title);\r\n        }\r\n    }\r\n\r\n    angle(start, end) {\r\n        var diff_x = end.x - start.x,\r\n            diff_y = end.y - start.y;\r\n        //返回角度,不是弧度\r\n        return 360 * Math.atan(diff_y / diff_x) / (2 * Math.PI);\r\n    }\r\n\r\n\r\n    async playTitle(bool: boolean) {\r\n        this._c1.selectedIndex = bool ? 1 : 0;\r\n        if (bool) {\r\n            cc.audioEngine.stopAll();\r\n            this.forbidHandle();\r\n            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n            let audioId = cc.audioEngine.play(audio, false, 1);\r\n            cc.audioEngine.setFinishCallback(audioId, () => {\r\n                let state: any = globalThis._.cloneDeep(this._state);\r\n                state.title = false;\r\n                this.updateState(state);\r\n            });\r\n        } else {\r\n            this.disableForbidHandle();\r\n        }\r\n    }\r\n\r\n    answerFeedback(bool: boolean) {\r\n        if (!this.feedback) return;\r\n        let feedback: any = cc.instantiate(this.feedback);\r\n        feedback.x = 960;\r\n        feedback.y = 540;\r\n        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n        feedbackJs.init(bool);\r\n        feedback.parent = cc.find(\"Canvas\").parent;\r\n\r\n        setTimeout(() => {\r\n            feedback.destroy();\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.submit = this.submitType.No;\r\n            this.updateState(state);\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    /**\r\n     * 点击指引\r\n     * @param obj 点击对象\r\n     */\r\n    handTips2(obj: fgui.GObject) {\r\n        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n        this._view.addChild(hand);\r\n        let tempX = obj.x;\r\n        let tempY = obj.y;\r\n\r\n        hand.x = tempX;\r\n        hand.y = tempY;\r\n\r\n        cc.tween(hand).to(0.3, {\r\n            x: tempX - 30,\r\n            y: tempY - 30\r\n        }).to(0.3, {\r\n            x: tempX,\r\n            y: tempY\r\n        }).to(0.3, {\r\n            x: tempX - 30,\r\n            y: tempY - 30\r\n        }).to(0.3, {\r\n            x: tempX,\r\n            y: tempY\r\n        }).call(() => {\r\n            this._view.removeChild(hand);\r\n            hand = null;\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.submit = this.submitType.No;\r\n            this.updateState(state)\r\n        }).start();\r\n    }\r\n\r\n    // 运行时 禁止操作\r\n    forbidHandle() {\r\n        console.log('===  运行时 禁止操作 =====');\r\n        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n        if (!handleMask) {\r\n            let handleMask = new cc.Node('handleMask');\r\n            handleMask.addComponent(cc.BlockInputEvents);\r\n            handleMask.parent = this._worldRoot;\r\n            handleMask.width = 1920;\r\n            handleMask.height = 1080;\r\n            handleMask.x = 960;\r\n            handleMask.y = 540;\r\n        }\r\n    }\r\n\r\n    // 消除禁止\r\n    disableForbidHandle() {\r\n        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n        if (handleMask) handleMask.destroy();\r\n    }\r\n\r\n    // 注册状态，及获取状态的方法\r\n    registerState() {\r\n        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n    }\r\n\r\n    // 解除状态，及获取状态的方法\r\n    relieveState() {\r\n        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n    }\r\n\r\n    // 本组件状态合并到全局\r\n    mergeState() {\r\n        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n    }\r\n\r\n    onEnable() {\r\n        this.registerState();\r\n        this.schedule(this.dragSchedule, this._scheduleTime);\r\n    }\r\n\r\n    onDisable() {\r\n        this.relieveState();\r\n        cc.audioEngine.stopAll();\r\n    }\r\n}\r\n"
        }
    ]
}