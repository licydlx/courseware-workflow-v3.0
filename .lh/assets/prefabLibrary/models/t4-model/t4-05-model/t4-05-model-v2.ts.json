{
    "sourceFile": "assets/prefabLibrary/models/t4-model/t4-05-model/t4-05-model-v2.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 141,
            "patches": [
                {
                    "date": 1624850534342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1624850539765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n const { ccclass, property } = cc._decorator;\r\n \r\n @ccclass\r\n-export default class t4_05_model_v1 extends cc.Component {\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n     private _worldRoot: cc.Node;\r\n \r\n     private _view: fgui.GComponent;\r\n \r\n"
                },
                {
                    "date": 1624850560356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,10 +31,8 @@\n     private _textMap: any = {};\r\n \r\n     private _kuangNameArr: any = [];\r\n \r\n-    private _rightAnswer: any = { 'kuang1': '2', 'kuang2': '1', 'kuang3': '2' };\r\n-\r\n     private submitType: any = cc.Enum({\r\n \r\n         No: 0,\r\n         GuideShow: 1,\r\n"
                },
                {
                    "date": 1624850568176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,12 +27,8 @@\n     private _package: any;\r\n \r\n     private _selectMap: any = {};\r\n \r\n-    private _textMap: any = {};\r\n-\r\n-    private _kuangNameArr: any = [];\r\n-\r\n     private submitType: any = cc.Enum({\r\n \r\n         No: 0,\r\n         GuideShow: 1,\r\n"
                },
                {
                    "date": 1624850599480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,55 +76,14 @@\n \r\n         this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n         if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n \r\n-        let tempAnswerMap = {};\r\n-        let kuangGroup = this._view.getChild(\"kuangGroup\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == kuangGroup) {\r\n-                let btn = this._view.getChildAt(i).asButton;\r\n-                this._kuangNameArr.push(btn.name);\r\n-                tempAnswerMap[btn.name] = '';\r\n-                btn.on(fgui.Event.CLICK, this._clickKuang, this);\r\n-            }\r\n-        }\r\n \r\n-        let selectGroup = this._view.getChild(\"selectGroup\").asGroup;\r\n-        let indexTemp = 0;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == selectGroup) {\r\n-                let img = this._view.getChildAt(i).asImage;\r\n-                this._selectMap[this._kuangNameArr[indexTemp]] = img;\r\n-                img.visible = false;\r\n-                indexTemp++;\r\n-            }\r\n-        }\r\n \r\n-        indexTemp = 0;\r\n-        let textGroup = this._view.getChild(\"textGroup\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == textGroup) {\r\n-                let label = this._view.getChildAt(i).asLabel;\r\n-                this._textMap[this._kuangNameArr[indexTemp]] = label;\r\n-                indexTemp++;\r\n-            }\r\n-        }\r\n-\r\n-        let keyGroup = this._view.getChild(\"key\").asGroup;\r\n-        for (let i = 0; i < this._view.numChildren; i++) {\r\n-            if (this._view.getChildAt(i).group == keyGroup) {\r\n-                let keyBtn = this._view.getChildAt(i).asButton;\r\n-                keyBtn.on(fgui.Event.CLICK, this._clickKey, this);\r\n-            }\r\n-        }\r\n-\r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n-            submit: this.submitType.No,\r\n-            selectKuangName: '',\r\n-            keyNumber: '',\r\n-            answerMap: tempAnswerMap,\r\n+            submit: this.submitType.No\r\n         }\r\n     }\r\n \r\n     async init(data: any) {\r\n"
                },
                {
                    "date": 1624850623233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,77 +118,11 @@\n             }\r\n         }\r\n     }\r\n \r\n-    private _clickKey(evt: any) {\r\n \r\n-        let isHideAll = true;\r\n-        for (let key in this._selectMap) {\r\n-\r\n-            if (this._selectMap[key].visible) {\r\n-                isHideAll = false;\r\n-                break;\r\n-            }\r\n-        }\r\n-\r\n-        if (isHideAll) {\r\n-            this.handTips2(this._selectMap[this._kuangNameArr[0]]);\r\n-            return;\r\n-        }\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let subName = btn.name.substring('input'.length);\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.keyNumber = subName + '';\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickKuang(evt: any) {\r\n-\r\n-        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        if (state.selectKuangName === btn.name) {\r\n-            state.selectKuangName = '';\r\n-        } else {\r\n-\r\n-            state.selectKuangName = btn.name;\r\n-        }\r\n-\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n     private _clickSubmit(evt: any) {\r\n         let state: any = globalThis._.cloneDeep(this._state);\r\n-\r\n-\r\n-        let isAllKong = true;\r\n-        for (let key in state.answerMap) {\r\n-\r\n-            if (state.answerMap[key] !== '') {\r\n-\r\n-                isAllKong = false;\r\n-                break;\r\n-            }\r\n-\r\n-        }\r\n-\r\n-        if (isAllKong) {\r\n-            state.submit = this.submitType.GuideShow;\r\n-        } else {\r\n-            let isAllDeng = true;\r\n-            for (let key in state.answerMap) {\r\n-                if (state.answerMap[key] !== this._rightAnswer[key]) {\r\n-\r\n-                    isAllDeng = false;\r\n-                    break;\r\n-                }\r\n-            }\r\n-            if (isAllDeng) {\r\n-                state.submit = this.submitType.RightFeed;\r\n-            } else {\r\n-                state.submit = this.submitType.WrongFeed;\r\n-            }\r\n-        }\r\n-\r\n         this.updateState(state);\r\n     }\r\n \r\n     private _clickTitle(evt: any) {\r\n"
                },
                {
                    "date": 1624850635875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,287 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private _selectMap: any = {};\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n+        // this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        cc.tween(this).stop();\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624850641888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,287 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private _selectMap: any = {};\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n+        // this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        cc.tween(this).stop();\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624850650037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -284,645 +284,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private _selectMap: any = {};\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n-        // this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        cc.tween(this).stop();\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private _selectMap: any = {};\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n-        // this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-        if (!globalThis._.isEqual(oldState.keyNumber, state.keyNumber)) {\r\n-\r\n-            if (state.keyNumber != '') {\r\n-\r\n-                let answerMapTemp = state.answerMap;\r\n-                let curKuangName = state.selectKuangName;\r\n-                let oldKuangName = oldState.selectKuangName;\r\n-                if (oldKuangName != curKuangName) {\r\n-\r\n-                    if (state.keyNumber === 'x' && answerMapTemp[curKuangName].length !== 0) {\r\n-\r\n-                        let str = answerMapTemp[curKuangName];\r\n-                        let strJian = str.substring(0, str.length - 1);\r\n-                        answerMapTemp[curKuangName] = strJian;\r\n-\r\n-                    } if (state.keyNumber !== 'x') {\r\n-                        answerMapTemp[curKuangName] = state.keyNumber;\r\n-                    }\r\n-\r\n-                } else {\r\n-\r\n-                    if (state.keyNumber === 'x' && answerMapTemp[curKuangName].length !== 0) {\r\n-\r\n-                        let str = answerMapTemp[curKuangName];\r\n-                        let strJian = str.substring(0, str.length - 1);\r\n-\r\n-                        answerMapTemp[curKuangName] = strJian;\r\n-\r\n-                    } else if (state.keyNumber !== 'x') {\r\n-\r\n-                        answerMapTemp[curKuangName] += state.keyNumber;\r\n-                    }\r\n-\r\n-                }\r\n-\r\n-                setTimeout(() => {\r\n-\r\n-                    let state2: any = globalThis._.cloneDeep(this._state);\r\n-                    state2.keyNumber = '';\r\n-                    state2.answerMap = answerMapTemp;\r\n-                    this.updateState(state2);\r\n-\r\n-                }, 10);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.answerMap, state.answerMap)) {\r\n-\r\n-            for (let key in state.answerMap) {\r\n-\r\n-                this._textMap[key].text = state.answerMap[key];\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.selectKuangName, state.selectKuangName)) {\r\n-\r\n-\r\n-            if (state.selectKuangName != '') {\r\n-\r\n-                this._selectMap[state.selectKuangName].visible = true;\r\n-            }\r\n-\r\n-            if (oldState.selectKuangName != '') {\r\n-\r\n-                this._selectMap[oldState.selectKuangName].visible = false;\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        cc.tween(this).stop();\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624850662646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,8 @@\n     private _submitBtn: fgui.GButton;\r\n \r\n     private _package: any;\r\n \r\n-    private _selectMap: any = {};\r\n-\r\n     private submitType: any = cc.Enum({\r\n \r\n         No: 0,\r\n         GuideShow: 1,\r\n"
                },
                {
                    "date": 1624850667705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,285 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n+        // this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        cc.tween(this).stop();\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624850673753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,285 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n+        // this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n+\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        cc.tween(this).stop();\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624850679047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,12 +93,8 @@\n         this._package = Package;\r\n \r\n         this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n \r\n-        // let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n-        // this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-\r\n         // 动效注册\r\n         // for (let v in ae) {\r\n         //     if (ae[v]) {\r\n         //         this[v] = {};\r\n@@ -282,574 +278,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n-        // this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        cc.tween(this).stop();\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n-        // this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n-\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        cc.tween(this).stop();\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624850692000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,281 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        cc.tween(this).stop();\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624850700960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,281 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        cc.tween(this).stop();\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624850788203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -273,571 +273,8 @@\n         this.registerState();\r\n     }\r\n \r\n     onDisable() {\r\n-        cc.tween(this).stop();\r\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        cc.tween(this).stop();\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        cc.tween(this).stop();\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624850804330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,280 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624850809944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -277,284 +277,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624850816242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,280 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624850821332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,8 @@\n         this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n         if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n \r\n \r\n-\r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n             submit: this.submitType.No\r\n@@ -277,284 +276,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624850827108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,8 @@\n \r\n         this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n         if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n \r\n-\r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n             submit: this.submitType.No\r\n"
                },
                {
                    "date": 1624850838425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,278 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624850845136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,278 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624850851018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,560 +275,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624850863731,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,278 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624850873998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -275,282 +275,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624851123532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,10 @@\n \r\n         this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n         if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n \r\n+        this._submitBtn = this._view.getChild(\"start\").asButton;\r\n+\r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n             submit: this.submitType.No\r\n"
                },
                {
                    "date": 1624851144900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,10 @@\n \r\n         this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n         if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n \r\n-        this._submitBtn = this._view.getChild(\"start\").asButton;\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n \r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n"
                },
                {
                    "date": 1624851355179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,8 +77,12 @@\n \r\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n+        node.on(fgui.Event.TOUCH_BEGIN, this._onDragStart, this);\r\n+        node.on(fgui.Event.TOUCH_MOVE, this._onDragMove, this);\r\n+        node.on(fgui.Event.TOUCH_END, this._onDragEnd, this);\r\n+\r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n             submit: this.submitType.No\r\n"
                },
                {
                    "date": 1624851371125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,11 +77,11 @@\n \r\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n-        node.on(fgui.Event.TOUCH_BEGIN, this._onDragStart, this);\r\n-        node.on(fgui.Event.TOUCH_MOVE, this._onDragMove, this);\r\n-        node.on(fgui.Event.TOUCH_END, this._onDragEnd, this);\r\n+        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDragStart, this);\r\n+        this._view.on(fgui.Event.TOUCH_MOVE, this._onDragMove, this);\r\n+        this._view.on(fgui.Event.TOUCH_END, this._onDragEnd, this);\r\n \r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n"
                },
                {
                    "date": 1624851395939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,11 +77,11 @@\n \r\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n-        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDragStart, this);\r\n-        this._view.on(fgui.Event.TOUCH_MOVE, this._onDragMove, this);\r\n-        this._view.on(fgui.Event.TOUCH_END, this._onDragEnd, this);\r\n+        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n+        this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n \r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n"
                },
                {
                    "date": 1624851425240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+import { v2 } from '../../../../../creator';\r\n \r\n /*\r\n  * @Descripttion: \r\n  * @version: \r\n@@ -117,9 +118,14 @@\n             }\r\n         }\r\n     }\r\n \r\n+    onTouchStart(event) {\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n \r\n+    v2\r\n     private _clickSubmit(evt: any) {\r\n         let state: any = globalThis._.cloneDeep(this._state);\r\n         this.updateState(state);\r\n     }\r\n"
                },
                {
                    "date": 1624851433115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -123,9 +123,31 @@\n         this.touches.length = 0;\r\n         this.touches.push(event.touch.getLocation());\r\n     }\r\n \r\n-    v2\r\n+    onTouchMove(event) {\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    onTouchEnd(event) {\r\n+    }\r\n+\r\n     private _clickSubmit(evt: any) {\r\n         let state: any = globalThis._.cloneDeep(this._state);\r\n         this.updateState(state);\r\n     }\r\n"
                },
                {
                    "date": 1624851451944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,14 +118,14 @@\n             }\r\n         }\r\n     }\r\n \r\n-    onTouchStart(event) {\r\n+    _onDrawStart(event) {\r\n         this.touches.length = 0;\r\n         this.touches.push(event.touch.getLocation());\r\n     }\r\n \r\n-    onTouchMove(event) {\r\n+    _onDrawMove(event) {\r\n         let touches = this.touches;\r\n         touches.push(event.touch.getLocation());\r\n \r\n         const MIN_POINT_DISTANCE = 2;\r\n@@ -143,9 +143,9 @@\n         }\r\n         this.graphics.stroke();\r\n     }\r\n \r\n-    onTouchEnd(event) {\r\n+    _onDrawEnd(event) {\r\n     }\r\n \r\n     private _clickSubmit(evt: any) {\r\n         let state: any = globalThis._.cloneDeep(this._state);\r\n"
                },
                {
                    "date": 1624851485891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,11 @@\n     private _submitBtn: fgui.GButton;\r\n \r\n     private _package: any;\r\n \r\n+    touches: cc.Vec2[] = []\r\n+    graphics: cc.Graphics = null;\r\n+\r\n     private submitType: any = cc.Enum({\r\n \r\n         No: 0,\r\n         GuideShow: 1,\r\n@@ -144,8 +147,9 @@\n         this.graphics.stroke();\r\n     }\r\n \r\n     _onDrawEnd(event) {\r\n+\r\n     }\r\n \r\n     private _clickSubmit(evt: any) {\r\n         let state: any = globalThis._.cloneDeep(this._state);\r\n"
                },
                {
                    "date": 1624851493987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,11 +26,12 @@\n     private _submitBtn: fgui.GButton;\r\n \r\n     private _package: any;\r\n \r\n-    touches: cc.Vec2[] = []\r\n-    graphics: cc.Graphics = null;\r\n+    private touches: cc.Vec2[] = [];\r\n \r\n+    private graphics: cc.Graphics = null;\r\n+\r\n     private submitType: any = cc.Enum({\r\n \r\n         No: 0,\r\n         GuideShow: 1,\r\n"
                },
                {
                    "date": 1624851511732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,317 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n+        this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624851517271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -314,322 +314,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-import { v2 } from '../../../../../creator';\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n-        this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624851545904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,9 @@\n \r\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n         this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        let worldPos = this.view.node.convertToWorldSpaceAR(cc.v2());\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n"
                },
                {
                    "date": 1624851552145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,9 @@\n \r\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n         this.graphics.clear();\r\n-        let worldPos = this.view.node.convertToWorldSpaceAR(cc.v2());\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n"
                },
                {
                    "date": 1624851573261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,8 +81,10 @@\n \r\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n+        this.graphics = this.getComponent(cc.Graphics);\r\n+\r\n         this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n         this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n \r\n"
                },
                {
                    "date": 1624851633665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,319 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this.graphics = this.getComponent(cc.Graphics);\r\n+\r\n+        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n+        this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624851651695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,320 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+\r\n+        this.graphics = this.getComponent(cc.Graphics);\r\n+\r\n+        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n+        this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624853785027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,642 +317,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = this.getComponent(cc.Graphics);\r\n-\r\n-        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n-        this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = this.getComponent(cc.Graphics);\r\n-\r\n-        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n-        this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624853855782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,320 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+\r\n+        this.graphics = this.getComponent(cc.Graphics);\r\n+\r\n+        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n+        this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624853861183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -317,324 +317,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-\r\n-        this.graphics = this.getComponent(cc.Graphics);\r\n-\r\n-        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n-        this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624854161969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,8 @@\n \r\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n-\r\n         this.graphics = this.getComponent(cc.Graphics);\r\n \r\n         this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n         this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n"
                },
                {
                    "date": 1624854238492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n \r\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n-        this.graphics = this.getComponent(cc.Graphics);\r\n+        this.graphics = this.addComponent(cc.Graphics);\r\n \r\n         this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n         this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n"
                },
                {
                    "date": 1624854256207,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n         this.graphics = this.addComponent(cc.Graphics);\r\n-\r\n+        this.graphics.lineWidth\r\n         this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n         this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n \r\n"
                },
                {
                    "date": 1624854274240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,10 @@\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n         this.graphics = this.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth\r\n+        this.graphics.lineWidth = 20;\r\n+\r\n         this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n         this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n \r\n"
                },
                {
                    "date": 1624854301570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,8 +83,9 @@\n         startBtn.visible = false;\r\n \r\n         this.graphics = this.addComponent(cc.Graphics);\r\n         this.graphics.lineWidth = 20;\r\n+        this.graphics.lineWidth = 20;.lineJoin\r\n \r\n         this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n         this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n"
                },
                {
                    "date": 1624854335479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n         startBtn.visible = false;\r\n \r\n         this.graphics = this.addComponent(cc.Graphics);\r\n         this.graphics.lineWidth = 20;\r\n-        this.graphics.lineWidth = 20;.lineJoin\r\n+        this.graphics.lineJoin = Graphics.LineJoin.ROUND;\r\n \r\n         this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n         this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n"
                },
                {
                    "date": 1624854341957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,10 +83,11 @@\n         startBtn.visible = false;\r\n \r\n         this.graphics = this.addComponent(cc.Graphics);\r\n         this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = Graphics.LineJoin.ROUND;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n \r\n+\r\n         this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n         this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n \r\n"
                },
                {
                    "date": 1624854371786,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,10 +84,10 @@\n \r\n         this.graphics = this.addComponent(cc.Graphics);\r\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n \r\n-\r\n         this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n         this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n \r\n"
                },
                {
                    "date": 1624854387215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,8 +85,9 @@\n         this.graphics = this.addComponent(cc.Graphics);\r\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n \r\n         this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n         this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n"
                },
                {
                    "date": 1624854475364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,323 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this.graphics = this.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n+        this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624854480634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -320,327 +320,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = this.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n-        this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624854545107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,8 +128,9 @@\n         }\r\n     }\r\n \r\n     _onDrawStart(event) {\r\n+        console.log('===== ====');\r\n         this.touches.length = 0;\r\n         this.touches.push(event.touch.getLocation());\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624854553259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n         }\r\n     }\r\n \r\n     _onDrawStart(event) {\r\n-        console.log('===== ====');\r\n+        console.log('===== start 111 ====');\r\n         this.touches.length = 0;\r\n         this.touches.push(event.touch.getLocation());\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624854573660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,8 +91,10 @@\n         this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n         this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n \r\n+        this._view.draggable = true;\r\n+\r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n             submit: this.submitType.No\r\n"
                },
                {
                    "date": 1624854594998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,11 +87,11 @@\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n \r\n-        this._view.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n-        this._view.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n+        this.node.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n+        this.node.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this.node.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n \r\n         this._view.draggable = true;\r\n \r\n         // 初始化state\r\n"
                },
                {
                    "date": 1624854601314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,326 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this.graphics = this.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this.node.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n+        this.node.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this.node.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        this._view.draggable = true;\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====');\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624854640319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,11 +87,11 @@\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n \r\n-        this.node.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n-        this.node.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this.node.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n+        this.node.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this.node.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n \r\n         this._view.draggable = true;\r\n \r\n         // 初始化state\r\n@@ -323,330 +323,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = this.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this.node.on(fgui.Event.TOUCH_BEGIN, this._onDrawStart, this);\r\n-        this.node.on(fgui.Event.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this.node.on(fgui.Event.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        this._view.draggable = true;\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====');\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624854657546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,10 +91,8 @@\n         this.node.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n         this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n         this.node.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n \r\n-        this._view.draggable = true;\r\n-\r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n             submit: this.submitType.No\r\n"
                },
                {
                    "date": 1624854673803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,324 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this.graphics = this.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this.node.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this.node.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====');\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624854673840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,324 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this.graphics = this.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this.node.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this.node.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====');\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624854679054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,652 +321,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = this.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this.node.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this.node.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====');\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = this.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this.node.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this.node.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====');\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624854721936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,11 +87,11 @@\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n \r\n-        this.node.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this.node.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n \r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n"
                },
                {
                    "date": 1624862390084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,324 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this.graphics = this.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====');\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624862647723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,324 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this.graphics = this.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====');\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624862704794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -321,652 +321,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = this.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====');\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = this.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====');\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624871350013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,8 +134,11 @@\n         this.touches.push(event.touch.getLocation());\r\n     }\r\n \r\n     _onDrawMove(event) {\r\n+\r\n+        console.log('===== start 111 ====');\r\n+\r\n         let touches = this.touches;\r\n         touches.push(event.touch.getLocation());\r\n \r\n         const MIN_POINT_DISTANCE = 2;\r\n"
                },
                {
                    "date": 1624871362570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,9 +135,9 @@\n     }\r\n \r\n     _onDrawMove(event) {\r\n \r\n-        console.log('===== start 111 ====');\r\n+        console.log('===== move 222 ====');\r\n \r\n         let touches = this.touches;\r\n         touches.push(event.touch.getLocation());\r\n \r\n"
                },
                {
                    "date": 1624871476924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,11 +87,11 @@\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n \r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+        this.node.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this.node.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n \r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n"
                },
                {
                    "date": 1624871539880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,8 +87,10 @@\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n \r\n+        var canvas = cc.find('Canvas');\r\n+\r\n         this.node.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n         this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n         this.node.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n \r\n"
                },
                {
                    "date": 1624871548516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,11 +89,11 @@\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n \r\n         var canvas = cc.find('Canvas');\r\n \r\n-        this.node.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this.node.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this.node.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+        canvas.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        canvas.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        canvas.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n \r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n"
                },
                {
                    "date": 1624871639557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,11 +89,11 @@\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n \r\n         var canvas = cc.find('Canvas');\r\n \r\n-        canvas.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        canvas.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        canvas.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n \r\n         // 初始化state\r\n         this._state = {\r\n             title: false,\r\n"
                },
                {
                    "date": 1624871645309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,10 +87,8 @@\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n \r\n-        var canvas = cc.find('Canvas');\r\n-\r\n         this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n         this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n \r\n"
                },
                {
                    "date": 1624871712201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -128,9 +128,9 @@\n         }\r\n     }\r\n \r\n     _onDrawStart(event) {\r\n-        console.log('===== start 111 ====');\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n         this.touches.length = 0;\r\n         this.touches.push(event.touch.getLocation());\r\n     }\r\n \r\n"
                },
                {
                    "date": 1624871728450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,13 +135,13 @@\n     }\r\n \r\n     _onDrawMove(event) {\r\n \r\n-        console.log('===== move 222 ====');\r\n-\r\n         let touches = this.touches;\r\n         touches.push(event.touch.getLocation());\r\n \r\n+        console.log('===== move 222 ====');\r\n+\r\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n         this.graphics.clear();\r\n         let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n"
                },
                {
                    "date": 1624871743956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n \r\n         let touches = this.touches;\r\n         touches.push(event.touch.getLocation());\r\n \r\n-        console.log('===== move 222 ====');\r\n+        console.log('===== move 222 ====' + event.touch.getLocation()event.touch.getLocation());\r\n \r\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n         this.graphics.clear();\r\n"
                },
                {
                    "date": 1624871749093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,327 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this.graphics = this.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624871791345,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -324,331 +324,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = this.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation()event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624871848700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,8 +86,9 @@\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(0.1, 0);\r\n \r\n         this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n         this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n"
                },
                {
                    "date": 1624871859142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(0.1, 0);\r\n+        this.graphics.lineTo(800, 800);\r\n \r\n         this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n         this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n"
                },
                {
                    "date": 1624871939038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,8 +87,9 @@\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n         this.graphics.lineTo(800, 800);\r\n+        this.graphics.stroke();\r\n \r\n         this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n         this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n"
                },
                {
                    "date": 1624872159820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,10 @@\n         fgui.GRoot.inst.addChild(this._view);\r\n \r\n         this._c1 = this._view.getController(\"c1\");\r\n \r\n+        huiNode\r\n+\r\n         // 臨時\r\n         // bug 初始设置不播放不生效\r\n         if (this._c1) {\r\n             this._c1.selectedIndex = 1;\r\n"
                },
                {
                    "date": 1624872174135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,9 @@\n         fgui.GRoot.inst.addChild(this._view);\r\n \r\n         this._c1 = this._view.getController(\"c1\");\r\n \r\n+\r\n         huiNode\r\n \r\n         // 臨時\r\n         // bug 初始设置不播放不生效\r\n"
                },
                {
                    "date": 1624872197273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,10 +63,10 @@\n         fgui.GRoot.inst.addChild(this._view);\r\n \r\n         this._c1 = this._view.getController(\"c1\");\r\n \r\n+        this.node.getChildByName(\"huiNode\");\r\n \r\n-        huiNode\r\n \r\n         // 臨時\r\n         // bug 初始设置不播放不生效\r\n         if (this._c1) {\r\n"
                },
                {
                    "date": 1624872298101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,10 @@\n         fgui.GRoot.inst.addChild(this._view);\r\n \r\n         this._c1 = this._view.getController(\"c1\");\r\n \r\n-        this.node.getChildByName(\"huiNode\");\r\n+        let huiNode = this.node.getChildByName(\"huiNode\");\r\n+        huiNode.zOrder = 10000；\r\n \r\n \r\n         // 臨時\r\n         // bug 初始设置不播放不生效\r\n"
                },
                {
                    "date": 1624872458033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,12 +63,9 @@\n         fgui.GRoot.inst.addChild(this._view);\r\n \r\n         this._c1 = this._view.getController(\"c1\");\r\n \r\n-        let huiNode = this.node.getChildByName(\"huiNode\");\r\n-        huiNode.zOrder = 10000；\r\n \r\n-\r\n         // 臨時\r\n         // bug 初始设置不播放不生效\r\n         if (this._c1) {\r\n             this._c1.selectedIndex = 1;\r\n@@ -85,9 +82,9 @@\n \r\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n-        this.graphics = this.addComponent(cc.Graphics);\r\n+        this.graphics = this.node.addComponent(cc.Graphics);\r\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n"
                },
                {
                    "date": 1624872696089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n \r\n         this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n         this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n \r\n-        fgui.GRoot.inst.addChild(this._view);\r\n+        //fgui.GRoot.inst.addChild(this._view);\r\n \r\n         this._c1 = this._view.getController(\"c1\");\r\n \r\n \r\n"
                },
                {
                    "date": 1624872756735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,330 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        //fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this.graphics = this.node.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(800, 800);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624872765280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -327,334 +327,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        //fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = this.node.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(800, 800);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624872779356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,330 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        //fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this.graphics = this.node.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(800, 800);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624872839613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n \r\n         this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n         this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n \r\n-        //fgui.GRoot.inst.addChild(this._view);\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n \r\n         this._c1 = this._view.getController(\"c1\");\r\n \r\n \r\n@@ -82,9 +82,9 @@\n \r\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n-        this.graphics = this.node.addComponent(cc.Graphics);\r\n+        this.graphics = cc.find(\"Canvas\").addComponent(cc.Graphics);\r\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n@@ -327,334 +327,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        //fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = this.node.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(800, 800);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624872920564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(800, 800);\r\n+        this.graphics.lineTo(300, 300);\r\n         this.graphics.stroke();\r\n \r\n         this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n         this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n"
                },
                {
                    "date": 1624873219162,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,8 +83,9 @@\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n         this.graphics = cc.find(\"Canvas\").addComponent(cc.Graphics);\r\n+\r\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n"
                },
                {
                    "date": 1624873457081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,331 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this.graphics = cc.find(\"Canvas\").addComponent(cc.Graphics);\r\n+\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(100, 100);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624873468253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,331 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        this.graphics = cc.find(\"Canvas\").addComponent(cc.Graphics);\r\n+\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(100, 100);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624873474610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(100, 100);\r\n+        this.graphics.lineTo(200, 200);\r\n         this.graphics.stroke();\r\n \r\n         this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n         this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n@@ -328,666 +328,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = cc.find(\"Canvas\").addComponent(cc.Graphics);\r\n-\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(100, 100);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        this.graphics = cc.find(\"Canvas\").addComponent(cc.Graphics);\r\n-\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(300, 300);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624873521113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,10 +82,13 @@\n \r\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n+        let handleMask = new cc.Node('handleMask');\r\n+        handleMask.addComponent(cc.BlockInputEvents);\r\n+        handleMask.parent = this._worldRoot;\r\n+\r\n         this.graphics = cc.find(\"Canvas\").addComponent(cc.Graphics);\r\n-\r\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n"
                },
                {
                    "date": 1624873535423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,11 +82,11 @@\n \r\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n-        let handleMask = new cc.Node('handleMask');\r\n+        let huiNode = new cc.Node('handleMask');\r\n         handleMask.addComponent(cc.BlockInputEvents);\r\n-        handleMask.parent = this._worldRoot;\r\n+        huiNode.parent = this._worldRoot;\r\n \r\n         this.graphics = cc.find(\"Canvas\").addComponent(cc.Graphics);\r\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n"
                },
                {
                    "date": 1624873552773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,12 +83,11 @@\n         let startBtn = this._view.getChild(\"start\").asButton;\r\n         startBtn.visible = false;\r\n \r\n         let huiNode = new cc.Node('handleMask');\r\n-        handleMask.addComponent(cc.BlockInputEvents);\r\n         huiNode.parent = this._worldRoot;\r\n \r\n-        this.graphics = cc.find(\"Canvas\").addComponent(cc.Graphics);\r\n+        huiNode.addComponent(cc.Graphics);\r\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n"
                },
                {
                    "date": 1624873578954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,333 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('handleMask');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(200, 200);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624873588023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,333 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(200, 200);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624873633183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,333 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(200, 200);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624873776808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,333 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(200, 200);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624873781908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,333 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(200, 200);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624874565581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,1669 +330,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(200, 200);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(200, 200);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(200, 200);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('handleMask');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(200, 200);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('handleMask');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(200, 200);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624874565630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,333 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(200, 200);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624882203464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,333 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(200, 200);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624882218815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -330,670 +330,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(200, 200);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(200, 200);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624882224333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,333 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(200, 200);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624882256171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,333 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        this.graphics = huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+        this.graphics.lineTo(200, 200);\r\n+        this.graphics.stroke();\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+        this.graphics.clear();\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624882323576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,10 +90,8 @@\n         this.graphics.lineWidth = 20;\r\n         this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n         this.graphics.strokeColor = cc.color(255, 0, 0);\r\n         this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(200, 200);\r\n-        this.graphics.stroke();\r\n \r\n         this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n         this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n         this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n@@ -330,670 +328,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(200, 200);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-        this.graphics.lineTo(200, 200);\r\n-        this.graphics.stroke();\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-        this.graphics.clear();\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624883820825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,10 +142,8 @@\n \r\n         let touches = this.touches;\r\n         touches.push(event.touch.getLocation());\r\n \r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-\r\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n         this.graphics.clear();\r\n         let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n@@ -158,8 +156,10 @@\n             lastIndex = i;\r\n             this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n         }\r\n         this.graphics.stroke();\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n     }\r\n \r\n     _onDrawEnd(event) {\r\n \r\n"
                },
                {
                    "date": 1624883852284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,8 +133,10 @@\n     }\r\n \r\n     _onDrawStart(event) {\r\n         console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        console.log('===== start 111 ====' + event.touch.getLocation()); 、\r\n+\r\n         this.touches.length = 0;\r\n         this.touches.push(event.touch.getLocation());\r\n     }\r\n \r\n@@ -144,9 +146,8 @@\n         touches.push(event.touch.getLocation());\r\n \r\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n-        this.graphics.clear();\r\n         let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n"
                },
                {
                    "date": 1624883924973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,9 +133,9 @@\n     }\r\n \r\n     _onDrawStart(event) {\r\n         console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        console.log('===== start 111 ====' + event.touch.getLocation()); 、\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n \r\n         this.touches.length = 0;\r\n         this.touches.push(event.touch.getLocation());\r\n     }\r\n"
                },
                {
                    "date": 1624883959386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -133,10 +133,9 @@\n     }\r\n \r\n     _onDrawStart(event) {\r\n         console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-\r\n+        this.graphics.clear();\r\n         this.touches.length = 0;\r\n         this.touches.push(event.touch.getLocation());\r\n     }\r\n \r\n@@ -146,8 +145,9 @@\n         touches.push(event.touch.getLocation());\r\n \r\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n+\r\n         let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n"
                },
                {
                    "date": 1624884235808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,332 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        this.graphics = huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.graphics.clear();\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624884314566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,332 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        this.graphics = huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.graphics.clear();\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624884319768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,668 +329,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        this.graphics = huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.graphics.clear();\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        this.graphics = huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.graphics.clear();\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624884348812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,333 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        this.graphics = huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.graphics.clear();\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        console.log('=== =====' + );\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624884354581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,9 +147,9 @@\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n \r\n         let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        console.log('=== =====' + );\r\n+        console.log('=== =====' + worldPos.x);\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n@@ -330,336 +330,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        this.graphics = huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.graphics.clear();\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                continue;\r\n-            }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624884363685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,9 +147,10 @@\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n \r\n         let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n-        console.log('=== =====' + worldPos.x);\r\n+        console.log('=== xxxxx =====' + worldPos.x);\r\n+        console.log('=== xxxxx =====' + worldPos.x);\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n"
                },
                {
                    "date": 1624884369583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,9 @@\n \r\n \r\n         let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n         console.log('=== xxxxx =====' + worldPos.x);\r\n-        console.log('=== xxxxx =====' + worldPos.x);\r\n+        console.log('=== yyyyy =====' + worldPos.x);\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n"
                },
                {
                    "date": 1624884375127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,9 @@\n \r\n \r\n         let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n         console.log('=== xxxxx =====' + worldPos.x);\r\n-        console.log('=== yyyyy =====' + worldPos.x);\r\n+        console.log('=== yyyyy =====' + worldPos.y);\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n"
                },
                {
                    "date": 1624885085826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,9 @@\n \r\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n \r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n         console.log('=== xxxxx =====' + worldPos.x);\r\n         console.log('=== yyyyy =====' + worldPos.y);\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n"
                },
                {
                    "date": 1624885096293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,11 +146,11 @@\n \r\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n \r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n-        console.log('=== xxxxx =====' + worldPos.x);\r\n-        console.log('=== yyyyy =====' + worldPos.y);\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        console.log('=== xxxxx =====' + cc.v2().x);\r\n+        console.log('=== yyyyy =====' + cc.v2().y);\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n"
                },
                {
                    "date": 1624885174094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -146,9 +146,9 @@\n \r\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n \r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2());\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n         console.log('=== xxxxx =====' + cc.v2().x);\r\n         console.log('=== yyyyy =====' + cc.v2().y);\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n"
                },
                {
                    "date": 1624885184975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,10 +147,10 @@\n         const MIN_POINT_DISTANCE = 2;\r\n \r\n \r\n         let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n-        console.log('=== xxxxx =====' + cc.v2().x);\r\n-        console.log('=== yyyyy =====' + cc.v2().y);\r\n+        console.log('=== xxxxx =====' + worldPos.x);\r\n+        console.log('=== yyyyy =====' + worldPos.y);\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n"
                },
                {
                    "date": 1624885580128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,8 +153,9 @@\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                console.log('====== =====' + );\r\n                 continue;\r\n             }\r\n             lastIndex = i;\r\n             this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n"
                },
                {
                    "date": 1624885588903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,9 @@\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                console.log('====== =====' + );\r\n+                console.log('====== PPPP =====' + i);\r\n                 continue;\r\n             }\r\n             lastIndex = i;\r\n             this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n"
                },
                {
                    "date": 1624885644000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,335 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        this.graphics = huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.graphics.clear();\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 2;\r\n+\r\n+\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n+        console.log('=== xxxxx =====' + worldPos.x);\r\n+        console.log('=== yyyyy =====' + worldPos.y);\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                console.log('====== PPPP 1111 =====' + i);\r\n+                continue;\r\n+            }\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624885660630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,343 +156,10 @@\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n                 console.log('====== PPPP 1111 =====' + i);\r\n                 continue;\r\n             }\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n+            console.log('====== PPPP 1111 =====' + i);\r\n \r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        this.graphics = huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.graphics.clear();\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 2;\r\n-\r\n-\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n-        console.log('=== xxxxx =====' + worldPos.x);\r\n-        console.log('=== yyyyy =====' + worldPos.y);\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                console.log('====== PPPP =====' + i);\r\n-                continue;\r\n-            }\r\n             lastIndex = i;\r\n             this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n         }\r\n         this.graphics.stroke();\r\n"
                },
                {
                    "date": 1624885666231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,9 +156,9 @@\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n                 console.log('====== PPPP 1111 =====' + i);\r\n                 continue;\r\n             }\r\n-            console.log('====== PPPP 1111 =====' + i);\r\n+            console.log('====== PPPP 2222 =====' + i);\r\n \r\n             lastIndex = i;\r\n             this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n         }\r\n"
                },
                {
                    "date": 1624886153867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n \r\n         let touches = this.touches;\r\n         touches.push(event.touch.getLocation());\r\n \r\n-        const MIN_POINT_DISTANCE = 2;\r\n+        const MIN_POINT_DISTANCE = 10;\r\n \r\n \r\n         let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n         console.log('=== xxxxx =====' + worldPos.x);\r\n"
                },
                {
                    "date": 1624886185223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,337 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        this.graphics = huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.graphics.clear();\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 5;\r\n+\r\n+\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n+        console.log('=== xxxxx =====' + worldPos.x);\r\n+        console.log('=== yyyyy =====' + worldPos.y);\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                console.log('====== PPPP 1111 =====' + i);\r\n+                continue;\r\n+            }\r\n+            console.log('====== PPPP 2222 =====' + i);\r\n+\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624886190305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,337 @@\n+\r\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ruzhuan\r\n+ * @Date: 2021-06-08 18:00:00\r\n+ * @LastEditors: ruzhuan\r\n+ * @LastEditTime: 2021-06-08 18:00:00\r\n+ */\r\n+const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t4_05_model_v2 extends cc.Component {\r\n+    private _worldRoot: cc.Node;\r\n+\r\n+    private _view: fgui.GComponent;\r\n+\r\n+    private _c1: fgui.Controller;\r\n+\r\n+    private _title: fgui.GButton;\r\n+\r\n+    private _titleTrigger: fgui.GLoader;\r\n+\r\n+    private _submitBtn: fgui.GButton;\r\n+\r\n+    private _package: any;\r\n+\r\n+    private touches: cc.Vec2[] = [];\r\n+\r\n+    private graphics: cc.Graphics = null;\r\n+\r\n+    private submitType: any = cc.Enum({\r\n+\r\n+        No: 0,\r\n+        GuideShow: 1,\r\n+        WrongFeed: 2,\r\n+        RightFeed: 3\r\n+    });\r\n+\r\n+    // 远程动态组件\r\n+    private feedback: any;\r\n+\r\n+    private _state = {};\r\n+\r\n+    get state(): any {\r\n+        return this._state;\r\n+    }\r\n+\r\n+    set state(v: any) {\r\n+        this.updateUi(this._state, v);\r\n+        this._state = v;\r\n+        this.mergeState();\r\n+    }\r\n+\r\n+    async onLoad() {\r\n+\r\n+        this._worldRoot = cc.find(\"Canvas\").parent;\r\n+\r\n+        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n+        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n+\r\n+        fgui.GRoot.inst.addChild(this._view);\r\n+\r\n+        this._c1 = this._view.getController(\"c1\");\r\n+\r\n+\r\n+        // 臨時\r\n+        // bug 初始设置不播放不生效\r\n+        if (this._c1) {\r\n+            this._c1.selectedIndex = 1;\r\n+            this._c1.selectedIndex = 0;\r\n+        }\r\n+\r\n+        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n+        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n+\r\n+        this._title = this._view.getChild(\"title\").asButton;\r\n+\r\n+        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n+        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n+\r\n+        let startBtn = this._view.getChild(\"start\").asButton;\r\n+        startBtn.visible = false;\r\n+\r\n+        let huiNode = new cc.Node('huiNode');\r\n+        huiNode.parent = this._worldRoot;\r\n+\r\n+        this.graphics = huiNode.addComponent(cc.Graphics);\r\n+        this.graphics.lineWidth = 20;\r\n+        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n+        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n+        this.graphics.fillColor = cc.color(255, 0, 0);\r\n+\r\n+        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n+        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n+\r\n+        // 初始化state\r\n+        this._state = {\r\n+            title: false,\r\n+            submit: this.submitType.No\r\n+        }\r\n+    }\r\n+\r\n+    async init(data: any) {\r\n+        // 临时 model component json 配置加载\r\n+        let { pathConfig, model, components } = data;\r\n+        let Package = pathConfig.packageName;\r\n+        let GComponent = model.uiPath;\r\n+        let { boxSoundUrl, guidIndex } = model.config;\r\n+        this._package = Package;\r\n+\r\n+        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n+\r\n+        // 动效注册\r\n+        // for (let v in ae) {\r\n+        //     if (ae[v]) {\r\n+        //         this[v] = {};\r\n+        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n+        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n+        //     }\r\n+        // }\r\n+\r\n+        if (components) {\r\n+            for (const key in components) {\r\n+                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n+                let componentBundle: any = await loadBundle(componentPath);\r\n+                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n+                this[key] = componentPrefab;\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    _onDrawStart(event) {\r\n+        console.log('===== start 111 ====' + event.touch.getLocation());\r\n+        this.graphics.clear();\r\n+        this.touches.length = 0;\r\n+        this.touches.push(event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawMove(event) {\r\n+\r\n+        let touches = this.touches;\r\n+        touches.push(event.touch.getLocation());\r\n+\r\n+        const MIN_POINT_DISTANCE = 5;\r\n+\r\n+\r\n+        let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n+        console.log('=== xxxxx =====' + worldPos.x);\r\n+        console.log('=== yyyyy =====' + worldPos.y);\r\n+        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n+        let lastIndex = 0;\r\n+        for (let i = 1, l = touches.length; i < l; i++) {\r\n+            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n+                console.log('====== PPPP 1111 =====' + i);\r\n+                continue;\r\n+            }\r\n+            console.log('====== PPPP 2222 =====' + i);\r\n+\r\n+            lastIndex = i;\r\n+            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n+        }\r\n+        this.graphics.stroke();\r\n+\r\n+        console.log('===== move 222 ====' + event.touch.getLocation());\r\n+    }\r\n+\r\n+    _onDrawEnd(event) {\r\n+\r\n+    }\r\n+\r\n+    private _clickSubmit(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+    private _clickTitle(evt: any) {\r\n+        let state: any = globalThis._.cloneDeep(this._state);\r\n+        state.title = true;\r\n+        this.updateState(state);\r\n+    }\r\n+\r\n+\r\n+    // 获取状态\r\n+    getState(data: any) {\r\n+        this.updateState(data);\r\n+    }\r\n+\r\n+    // 更新状态层\r\n+    updateState(curState: any) {\r\n+        if (globalThis._.isEqual(this._state, curState)) return;\r\n+        this.state = curState;\r\n+    }\r\n+\r\n+    // 更新ui层\r\n+    updateUi(oldState: any, state: any) {\r\n+\r\n+        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n+\r\n+            if (state.submit === this.submitType.RightFeed) {\r\n+\r\n+                this.answerFeedback(true);\r\n+\r\n+            } else if (state.submit === this.submitType.WrongFeed) {\r\n+\r\n+                this.answerFeedback(false);\r\n+\r\n+            } else if (state.submit === this.submitType.GuideShow) {\r\n+\r\n+                let keyBtn = this._view.getChild('input1').asButton;\r\n+                this.handTips2(keyBtn);\r\n+            }\r\n+        }\r\n+\r\n+        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n+            this.playTitle(state.title);\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    async playTitle(bool: boolean) {\r\n+        this._c1.selectedIndex = bool ? 1 : 0;\r\n+        if (bool) {\r\n+            cc.audioEngine.stopAll();\r\n+            this.forbidHandle();\r\n+            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n+            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n+            let audioId = cc.audioEngine.play(audio, false, 1);\r\n+            cc.audioEngine.setFinishCallback(audioId, () => {\r\n+                let state: any = globalThis._.cloneDeep(this._state);\r\n+                state.title = false;\r\n+                this.updateState(state);\r\n+            });\r\n+        } else {\r\n+            this.disableForbidHandle();\r\n+        }\r\n+    }\r\n+\r\n+    answerFeedback(bool: boolean) {\r\n+        if (!this.feedback) return;\r\n+        let feedback: any = cc.instantiate(this.feedback);\r\n+        feedback.x = 960;\r\n+        feedback.y = 540;\r\n+        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n+        feedbackJs.init(bool);\r\n+        feedback.parent = cc.find(\"Canvas\").parent;\r\n+\r\n+        setTimeout(() => {\r\n+            feedback.destroy();\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state);\r\n+        }, 2000);\r\n+    }\r\n+\r\n+\r\n+    /**\r\n+     * 点击指引\r\n+     * @param obj 点击对象\r\n+     */\r\n+    handTips2(obj: fgui.GObject) {\r\n+        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n+        this._view.addChild(hand);\r\n+        let tempX = obj.x;\r\n+        let tempY = obj.y;\r\n+\r\n+        hand.x = tempX;\r\n+        hand.y = tempY;\r\n+\r\n+        cc.tween(hand).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).to(0.3, {\r\n+            x: tempX - 30,\r\n+            y: tempY - 30\r\n+        }).to(0.3, {\r\n+            x: tempX,\r\n+            y: tempY\r\n+        }).call(() => {\r\n+            this._view.removeChild(hand);\r\n+            hand = null;\r\n+            let state: any = globalThis._.cloneDeep(this._state);\r\n+            state.submit = this.submitType.No;\r\n+            this.updateState(state)\r\n+        }).start();\r\n+    }\r\n+\r\n+    // 运行时 禁止操作\r\n+    forbidHandle() {\r\n+        console.log('===  运行时 禁止操作 =====');\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (!handleMask) {\r\n+            let handleMask = new cc.Node('handleMask');\r\n+            handleMask.addComponent(cc.BlockInputEvents);\r\n+            handleMask.parent = this._worldRoot;\r\n+            handleMask.width = 1920;\r\n+            handleMask.height = 1080;\r\n+            handleMask.x = 960;\r\n+            handleMask.y = 540;\r\n+        }\r\n+    }\r\n+\r\n+    // 消除禁止\r\n+    disableForbidHandle() {\r\n+        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n+        if (handleMask) handleMask.destroy();\r\n+    }\r\n+\r\n+    // 注册状态，及获取状态的方法\r\n+    registerState() {\r\n+        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n+    }\r\n+\r\n+    // 解除状态，及获取状态的方法\r\n+    relieveState() {\r\n+        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n+    }\r\n+\r\n+    // 本组件状态合并到全局\r\n+    mergeState() {\r\n+        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n+    }\r\n+\r\n+    onEnable() {\r\n+        this.registerState();\r\n+    }\r\n+\r\n+    onDisable() {\r\n+        this.relieveState();\r\n+        cc.audioEngine.stopAll();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1624886418011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,9 +143,9 @@\n \r\n         let touches = this.touches;\r\n         touches.push(event.touch.getLocation());\r\n \r\n-        const MIN_POINT_DISTANCE = 5;\r\n+        const MIN_POINT_DISTANCE = 4;\r\n \r\n \r\n         let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n         console.log('=== xxxxx =====' + worldPos.x);\r\n@@ -334,678 +334,4 @@\n         this.relieveState();\r\n         cc.audioEngine.stopAll();\r\n     }\r\n }\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        this.graphics = huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.graphics.clear();\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 5;\r\n-\r\n-\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n-        console.log('=== xxxxx =====' + worldPos.x);\r\n-        console.log('=== yyyyy =====' + worldPos.y);\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                console.log('====== PPPP 1111 =====' + i);\r\n-                continue;\r\n-            }\r\n-            console.log('====== PPPP 2222 =====' + i);\r\n-\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n-\r\n-/*\r\n- * @Descripttion: \r\n- * @version: \r\n- * @Author: ruzhuan\r\n- * @Date: 2021-06-08 18:00:00\r\n- * @LastEditors: ruzhuan\r\n- * @LastEditTime: 2021-06-08 18:00:00\r\n- */\r\n-const { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\n-const { ccclass, property } = cc._decorator;\r\n-\r\n-@ccclass\r\n-export default class t4_05_model_v2 extends cc.Component {\r\n-    private _worldRoot: cc.Node;\r\n-\r\n-    private _view: fgui.GComponent;\r\n-\r\n-    private _c1: fgui.Controller;\r\n-\r\n-    private _title: fgui.GButton;\r\n-\r\n-    private _titleTrigger: fgui.GLoader;\r\n-\r\n-    private _submitBtn: fgui.GButton;\r\n-\r\n-    private _package: any;\r\n-\r\n-    private touches: cc.Vec2[] = [];\r\n-\r\n-    private graphics: cc.Graphics = null;\r\n-\r\n-    private submitType: any = cc.Enum({\r\n-\r\n-        No: 0,\r\n-        GuideShow: 1,\r\n-        WrongFeed: 2,\r\n-        RightFeed: 3\r\n-    });\r\n-\r\n-    // 远程动态组件\r\n-    private feedback: any;\r\n-\r\n-    private _state = {};\r\n-\r\n-    get state(): any {\r\n-        return this._state;\r\n-    }\r\n-\r\n-    set state(v: any) {\r\n-        this.updateUi(this._state, v);\r\n-        this._state = v;\r\n-        this.mergeState();\r\n-    }\r\n-\r\n-    async onLoad() {\r\n-\r\n-        this._worldRoot = cc.find(\"Canvas\").parent;\r\n-\r\n-        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n-        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n-\r\n-        fgui.GRoot.inst.addChild(this._view);\r\n-\r\n-        this._c1 = this._view.getController(\"c1\");\r\n-\r\n-\r\n-        // 臨時\r\n-        // bug 初始设置不播放不生效\r\n-        if (this._c1) {\r\n-            this._c1.selectedIndex = 1;\r\n-            this._c1.selectedIndex = 0;\r\n-        }\r\n-\r\n-        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n-        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n-\r\n-        this._title = this._view.getChild(\"title\").asButton;\r\n-\r\n-        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n-        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n-\r\n-        let startBtn = this._view.getChild(\"start\").asButton;\r\n-        startBtn.visible = false;\r\n-\r\n-        let huiNode = new cc.Node('huiNode');\r\n-        huiNode.parent = this._worldRoot;\r\n-\r\n-        this.graphics = huiNode.addComponent(cc.Graphics);\r\n-        this.graphics.lineWidth = 20;\r\n-        this.graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\r\n-        this.graphics.strokeColor = cc.color(255, 0, 0);\r\n-        this.graphics.fillColor = cc.color(255, 0, 0);\r\n-\r\n-        this._view.on(cc.Node.EventType.TOUCH_START, this._onDrawStart, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_MOVE, this._onDrawMove, this);\r\n-        this._view.on(cc.Node.EventType.TOUCH_END, this._onDrawEnd, this);\r\n-\r\n-        // 初始化state\r\n-        this._state = {\r\n-            title: false,\r\n-            submit: this.submitType.No\r\n-        }\r\n-    }\r\n-\r\n-    async init(data: any) {\r\n-        // 临时 model component json 配置加载\r\n-        let { pathConfig, model, components } = data;\r\n-        let Package = pathConfig.packageName;\r\n-        let GComponent = model.uiPath;\r\n-        let { boxSoundUrl, guidIndex } = model.config;\r\n-        this._package = Package;\r\n-\r\n-        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n-\r\n-        // 动效注册\r\n-        // for (let v in ae) {\r\n-        //     if (ae[v]) {\r\n-        //         this[v] = {};\r\n-        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n-        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n-        //     }\r\n-        // }\r\n-\r\n-        if (components) {\r\n-            for (const key in components) {\r\n-                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n-                let componentBundle: any = await loadBundle(componentPath);\r\n-                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n-                this[key] = componentPrefab;\r\n-            }\r\n-        }\r\n-    }\r\n-\r\n-    _onDrawStart(event) {\r\n-        console.log('===== start 111 ====' + event.touch.getLocation());\r\n-        this.graphics.clear();\r\n-        this.touches.length = 0;\r\n-        this.touches.push(event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawMove(event) {\r\n-\r\n-        let touches = this.touches;\r\n-        touches.push(event.touch.getLocation());\r\n-\r\n-        const MIN_POINT_DISTANCE = 10;\r\n-\r\n-\r\n-        let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n-        console.log('=== xxxxx =====' + worldPos.x);\r\n-        console.log('=== yyyyy =====' + worldPos.y);\r\n-        this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n-        let lastIndex = 0;\r\n-        for (let i = 1, l = touches.length; i < l; i++) {\r\n-            if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                console.log('====== PPPP 1111 =====' + i);\r\n-                continue;\r\n-            }\r\n-            console.log('====== PPPP 2222 =====' + i);\r\n-\r\n-            lastIndex = i;\r\n-            this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n-        }\r\n-        this.graphics.stroke();\r\n-\r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n-    }\r\n-\r\n-    _onDrawEnd(event) {\r\n-\r\n-    }\r\n-\r\n-    private _clickSubmit(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-    private _clickTitle(evt: any) {\r\n-        let state: any = globalThis._.cloneDeep(this._state);\r\n-        state.title = true;\r\n-        this.updateState(state);\r\n-    }\r\n-\r\n-\r\n-    // 获取状态\r\n-    getState(data: any) {\r\n-        this.updateState(data);\r\n-    }\r\n-\r\n-    // 更新状态层\r\n-    updateState(curState: any) {\r\n-        if (globalThis._.isEqual(this._state, curState)) return;\r\n-        this.state = curState;\r\n-    }\r\n-\r\n-    // 更新ui层\r\n-    updateUi(oldState: any, state: any) {\r\n-\r\n-        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n-\r\n-            if (state.submit === this.submitType.RightFeed) {\r\n-\r\n-                this.answerFeedback(true);\r\n-\r\n-            } else if (state.submit === this.submitType.WrongFeed) {\r\n-\r\n-                this.answerFeedback(false);\r\n-\r\n-            } else if (state.submit === this.submitType.GuideShow) {\r\n-\r\n-                let keyBtn = this._view.getChild('input1').asButton;\r\n-                this.handTips2(keyBtn);\r\n-            }\r\n-        }\r\n-\r\n-        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n-            this.playTitle(state.title);\r\n-        }\r\n-    }\r\n-\r\n-\r\n-    async playTitle(bool: boolean) {\r\n-        this._c1.selectedIndex = bool ? 1 : 0;\r\n-        if (bool) {\r\n-            cc.audioEngine.stopAll();\r\n-            this.forbidHandle();\r\n-            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n-            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n-            let audioId = cc.audioEngine.play(audio, false, 1);\r\n-            cc.audioEngine.setFinishCallback(audioId, () => {\r\n-                let state: any = globalThis._.cloneDeep(this._state);\r\n-                state.title = false;\r\n-                this.updateState(state);\r\n-            });\r\n-        } else {\r\n-            this.disableForbidHandle();\r\n-        }\r\n-    }\r\n-\r\n-    answerFeedback(bool: boolean) {\r\n-        if (!this.feedback) return;\r\n-        let feedback: any = cc.instantiate(this.feedback);\r\n-        feedback.x = 960;\r\n-        feedback.y = 540;\r\n-        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n-        feedbackJs.init(bool);\r\n-        feedback.parent = cc.find(\"Canvas\").parent;\r\n-\r\n-        setTimeout(() => {\r\n-            feedback.destroy();\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state);\r\n-        }, 2000);\r\n-    }\r\n-\r\n-\r\n-    /**\r\n-     * 点击指引\r\n-     * @param obj 点击对象\r\n-     */\r\n-    handTips2(obj: fgui.GObject) {\r\n-        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n-        this._view.addChild(hand);\r\n-        let tempX = obj.x;\r\n-        let tempY = obj.y;\r\n-\r\n-        hand.x = tempX;\r\n-        hand.y = tempY;\r\n-\r\n-        cc.tween(hand).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).to(0.3, {\r\n-            x: tempX - 30,\r\n-            y: tempY - 30\r\n-        }).to(0.3, {\r\n-            x: tempX,\r\n-            y: tempY\r\n-        }).call(() => {\r\n-            this._view.removeChild(hand);\r\n-            hand = null;\r\n-            let state: any = globalThis._.cloneDeep(this._state);\r\n-            state.submit = this.submitType.No;\r\n-            this.updateState(state)\r\n-        }).start();\r\n-    }\r\n-\r\n-    // 运行时 禁止操作\r\n-    forbidHandle() {\r\n-        console.log('===  运行时 禁止操作 =====');\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (!handleMask) {\r\n-            let handleMask = new cc.Node('handleMask');\r\n-            handleMask.addComponent(cc.BlockInputEvents);\r\n-            handleMask.parent = this._worldRoot;\r\n-            handleMask.width = 1920;\r\n-            handleMask.height = 1080;\r\n-            handleMask.x = 960;\r\n-            handleMask.y = 540;\r\n-        }\r\n-    }\r\n-\r\n-    // 消除禁止\r\n-    disableForbidHandle() {\r\n-        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n-        if (handleMask) handleMask.destroy();\r\n-    }\r\n-\r\n-    // 注册状态，及获取状态的方法\r\n-    registerState() {\r\n-        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n-    }\r\n-\r\n-    // 解除状态，及获取状态的方法\r\n-    relieveState() {\r\n-        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n-    }\r\n-\r\n-    // 本组件状态合并到全局\r\n-    mergeState() {\r\n-        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n-    }\r\n-\r\n-    onEnable() {\r\n-        this.registerState();\r\n-    }\r\n-\r\n-    onDisable() {\r\n-        this.relieveState();\r\n-        cc.audioEngine.stopAll();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1624886654392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,25 +147,19 @@\n         const MIN_POINT_DISTANCE = 4;\r\n \r\n \r\n         let worldPos = this.node.convertToWorldSpaceAR(cc.v2(0, 0));\r\n-        console.log('=== xxxxx =====' + worldPos.x);\r\n-        console.log('=== yyyyy =====' + worldPos.y);\r\n         this.graphics.moveTo(touches[0].x - worldPos.x, touches[0].y - worldPos.y);\r\n         let lastIndex = 0;\r\n         for (let i = 1, l = touches.length; i < l; i++) {\r\n             if (touches[i].sub(touches[lastIndex]).mag() < MIN_POINT_DISTANCE) {\r\n-                console.log('====== PPPP 1111 =====' + i);\r\n                 continue;\r\n             }\r\n-            console.log('====== PPPP 2222 =====' + i);\r\n-\r\n             lastIndex = i;\r\n             this.graphics.lineTo(touches[i].x - worldPos.x, touches[i].y - worldPos.y);\r\n         }\r\n         this.graphics.stroke();\r\n \r\n-        console.log('===== move 222 ====' + event.touch.getLocation());\r\n     }\r\n \r\n     _onDrawEnd(event) {\r\n \r\n"
                }
            ],
            "date": 1624850534341,
            "name": "Commit-0",
            "content": "\r\n/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: ruzhuan\r\n * @Date: 2021-06-08 18:00:00\r\n * @LastEditors: ruzhuan\r\n * @LastEditTime: 2021-06-08 18:00:00\r\n */\r\nconst { loadBundle, loadPrefab, loadResource } = window['GlobalData'].sample;\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class t4_05_model_v1 extends cc.Component {\r\n    private _worldRoot: cc.Node;\r\n\r\n    private _view: fgui.GComponent;\r\n\r\n    private _c1: fgui.Controller;\r\n\r\n    private _title: fgui.GButton;\r\n\r\n    private _titleTrigger: fgui.GLoader;\r\n\r\n    private _submitBtn: fgui.GButton;\r\n\r\n    private _package: any;\r\n\r\n    private _selectMap: any = {};\r\n\r\n    private _textMap: any = {};\r\n\r\n    private _kuangNameArr: any = [];\r\n\r\n    private _rightAnswer: any = { 'kuang1': '2', 'kuang2': '1', 'kuang3': '2' };\r\n\r\n    private submitType: any = cc.Enum({\r\n\r\n        No: 0,\r\n        GuideShow: 1,\r\n        WrongFeed: 2,\r\n        RightFeed: 3\r\n    });\r\n\r\n    // 远程动态组件\r\n    private feedback: any;\r\n\r\n    private _state = {};\r\n\r\n    get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    set state(v: any) {\r\n        this.updateUi(this._state, v);\r\n        this._state = v;\r\n        this.mergeState();\r\n    }\r\n\r\n    async onLoad() {\r\n\r\n        this._worldRoot = cc.find(\"Canvas\").parent;\r\n\r\n        this._view.y = (fgui.GRoot.inst.height - this._view.height) / 2;\r\n        this._view.x = (fgui.GRoot.inst.width - this._view.width) / 2;\r\n\r\n        fgui.GRoot.inst.addChild(this._view);\r\n\r\n        this._c1 = this._view.getController(\"c1\");\r\n\r\n        // 臨時\r\n        // bug 初始设置不播放不生效\r\n        if (this._c1) {\r\n            this._c1.selectedIndex = 1;\r\n            this._c1.selectedIndex = 0;\r\n        }\r\n\r\n        this._titleTrigger = this._view.getChild(\"titleTrigger\").asLoader;\r\n        if (this._titleTrigger) this._titleTrigger.on(fgui.Event.CLICK, this._clickTitle, this);\r\n\r\n        this._title = this._view.getChild(\"title\").asButton;\r\n\r\n        this._submitBtn = this._view.getChild(\"submit\").asButton;\r\n        if (this._submitBtn) this._submitBtn.on(fgui.Event.CLICK, this._clickSubmit, this);\r\n\r\n        let tempAnswerMap = {};\r\n        let kuangGroup = this._view.getChild(\"kuangGroup\").asGroup;\r\n        for (let i = 0; i < this._view.numChildren; i++) {\r\n            if (this._view.getChildAt(i).group == kuangGroup) {\r\n                let btn = this._view.getChildAt(i).asButton;\r\n                this._kuangNameArr.push(btn.name);\r\n                tempAnswerMap[btn.name] = '';\r\n                btn.on(fgui.Event.CLICK, this._clickKuang, this);\r\n            }\r\n        }\r\n\r\n        let selectGroup = this._view.getChild(\"selectGroup\").asGroup;\r\n        let indexTemp = 0;\r\n        for (let i = 0; i < this._view.numChildren; i++) {\r\n            if (this._view.getChildAt(i).group == selectGroup) {\r\n                let img = this._view.getChildAt(i).asImage;\r\n                this._selectMap[this._kuangNameArr[indexTemp]] = img;\r\n                img.visible = false;\r\n                indexTemp++;\r\n            }\r\n        }\r\n\r\n        indexTemp = 0;\r\n        let textGroup = this._view.getChild(\"textGroup\").asGroup;\r\n        for (let i = 0; i < this._view.numChildren; i++) {\r\n            if (this._view.getChildAt(i).group == textGroup) {\r\n                let label = this._view.getChildAt(i).asLabel;\r\n                this._textMap[this._kuangNameArr[indexTemp]] = label;\r\n                indexTemp++;\r\n            }\r\n        }\r\n\r\n        let keyGroup = this._view.getChild(\"key\").asGroup;\r\n        for (let i = 0; i < this._view.numChildren; i++) {\r\n            if (this._view.getChildAt(i).group == keyGroup) {\r\n                let keyBtn = this._view.getChildAt(i).asButton;\r\n                keyBtn.on(fgui.Event.CLICK, this._clickKey, this);\r\n            }\r\n        }\r\n\r\n        // 初始化state\r\n        this._state = {\r\n            title: false,\r\n            submit: this.submitType.No,\r\n            selectKuangName: '',\r\n            keyNumber: '',\r\n            answerMap: tempAnswerMap,\r\n        }\r\n    }\r\n\r\n    async init(data: any) {\r\n        // 临时 model component json 配置加载\r\n        let { pathConfig, model, components } = data;\r\n        let Package = pathConfig.packageName;\r\n        let GComponent = model.uiPath;\r\n        let { boxSoundUrl, guidIndex } = model.config;\r\n        this._package = Package;\r\n\r\n        this._view = fgui.UIPackage.createObject(Package, GComponent).asCom;\r\n\r\n        // let item = fgui.UIPackage.getItemByURL(boxSoundUrl);\r\n        // this._boxSound = await loadResource(item.file, cc.AudioClip);\r\n\r\n\r\n        // 动效注册\r\n        // for (let v in ae) {\r\n        //     if (ae[v]) {\r\n        //         this[v] = {};\r\n        //         if (ae[v].component) this[v].component = fgui.UIPackage.createObject(Package, ae[v].component).asCom;\r\n        //         if (ae[v].pos) this[v].pos = ae[v].pos;\r\n        //     }\r\n        // }\r\n\r\n        if (components) {\r\n            for (const key in components) {\r\n                let componentPath: any = `${pathConfig.remoteUrl}${pathConfig.componentBundlePath}${components[key].bundleName}`;\r\n                let componentBundle: any = await loadBundle(componentPath);\r\n                let componentPrefab: any = await loadPrefab(componentBundle, components[key].prefabName);\r\n                this[key] = componentPrefab;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _clickKey(evt: any) {\r\n\r\n        let isHideAll = true;\r\n        for (let key in this._selectMap) {\r\n\r\n            if (this._selectMap[key].visible) {\r\n                isHideAll = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isHideAll) {\r\n            this.handTips2(this._selectMap[this._kuangNameArr[0]]);\r\n            return;\r\n        }\r\n        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n        let subName = btn.name.substring('input'.length);\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        state.keyNumber = subName + '';\r\n        this.updateState(state);\r\n    }\r\n\r\n    private _clickKuang(evt: any) {\r\n\r\n        var btn: fgui.GObject = fgui.GObject.cast(evt.currentTarget);\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        if (state.selectKuangName === btn.name) {\r\n            state.selectKuangName = '';\r\n        } else {\r\n\r\n            state.selectKuangName = btn.name;\r\n        }\r\n\r\n        this.updateState(state);\r\n    }\r\n\r\n    private _clickSubmit(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n\r\n\r\n        let isAllKong = true;\r\n        for (let key in state.answerMap) {\r\n\r\n            if (state.answerMap[key] !== '') {\r\n\r\n                isAllKong = false;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        if (isAllKong) {\r\n            state.submit = this.submitType.GuideShow;\r\n        } else {\r\n            let isAllDeng = true;\r\n            for (let key in state.answerMap) {\r\n                if (state.answerMap[key] !== this._rightAnswer[key]) {\r\n\r\n                    isAllDeng = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (isAllDeng) {\r\n                state.submit = this.submitType.RightFeed;\r\n            } else {\r\n                state.submit = this.submitType.WrongFeed;\r\n            }\r\n        }\r\n\r\n        this.updateState(state);\r\n    }\r\n\r\n    private _clickTitle(evt: any) {\r\n        let state: any = globalThis._.cloneDeep(this._state);\r\n        state.title = true;\r\n        this.updateState(state);\r\n    }\r\n\r\n\r\n    // 获取状态\r\n    getState(data: any) {\r\n        this.updateState(data);\r\n    }\r\n\r\n    // 更新状态层\r\n    updateState(curState: any) {\r\n        if (globalThis._.isEqual(this._state, curState)) return;\r\n        this.state = curState;\r\n    }\r\n\r\n    // 更新ui层\r\n    updateUi(oldState: any, state: any) {\r\n\r\n        if (!globalThis._.isEqual(oldState.submit, state.submit)) {\r\n\r\n            if (state.submit === this.submitType.RightFeed) {\r\n\r\n                this.answerFeedback(true);\r\n\r\n            } else if (state.submit === this.submitType.WrongFeed) {\r\n\r\n                this.answerFeedback(false);\r\n\r\n            } else if (state.submit === this.submitType.GuideShow) {\r\n\r\n                let keyBtn = this._view.getChild('input1').asButton;\r\n                this.handTips2(keyBtn);\r\n            }\r\n        }\r\n        if (!globalThis._.isEqual(oldState.keyNumber, state.keyNumber)) {\r\n\r\n            if (state.keyNumber != '') {\r\n\r\n                let answerMapTemp = state.answerMap;\r\n                let curKuangName = state.selectKuangName;\r\n                let oldKuangName = oldState.selectKuangName;\r\n                if (oldKuangName != curKuangName) {\r\n\r\n                    if (state.keyNumber === 'x' && answerMapTemp[curKuangName].length !== 0) {\r\n\r\n                        let str = answerMapTemp[curKuangName];\r\n                        let strJian = str.substring(0, str.length - 1);\r\n                        answerMapTemp[curKuangName] = strJian;\r\n\r\n                    } if (state.keyNumber !== 'x') {\r\n                        answerMapTemp[curKuangName] = state.keyNumber;\r\n                    }\r\n\r\n                } else {\r\n\r\n                    if (state.keyNumber === 'x' && answerMapTemp[curKuangName].length !== 0) {\r\n\r\n                        let str = answerMapTemp[curKuangName];\r\n                        let strJian = str.substring(0, str.length - 1);\r\n\r\n                        answerMapTemp[curKuangName] = strJian;\r\n\r\n                    } else if (state.keyNumber !== 'x') {\r\n\r\n                        answerMapTemp[curKuangName] += state.keyNumber;\r\n                    }\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n\r\n                    let state2: any = globalThis._.cloneDeep(this._state);\r\n                    state2.keyNumber = '';\r\n                    state2.answerMap = answerMapTemp;\r\n                    this.updateState(state2);\r\n\r\n                }, 10);\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.answerMap, state.answerMap)) {\r\n\r\n            for (let key in state.answerMap) {\r\n\r\n                this._textMap[key].text = state.answerMap[key];\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.selectKuangName, state.selectKuangName)) {\r\n\r\n\r\n            if (state.selectKuangName != '') {\r\n\r\n                this._selectMap[state.selectKuangName].visible = true;\r\n            }\r\n\r\n            if (oldState.selectKuangName != '') {\r\n\r\n                this._selectMap[oldState.selectKuangName].visible = false;\r\n            }\r\n        }\r\n\r\n        if (!globalThis._.isEqual(oldState.title, state.title)) {\r\n            this.playTitle(state.title);\r\n        }\r\n    }\r\n\r\n\r\n    async playTitle(bool: boolean) {\r\n        this._c1.selectedIndex = bool ? 1 : 0;\r\n        if (bool) {\r\n            cc.audioEngine.stopAll();\r\n            this.forbidHandle();\r\n            let item = fgui.UIPackage.getItemByURL(this._title[\"_sound\"]);\r\n            let audio: cc.AudioClip = await loadResource(item.file, cc.AudioClip);\r\n            let audioId = cc.audioEngine.play(audio, false, 1);\r\n            cc.audioEngine.setFinishCallback(audioId, () => {\r\n                let state: any = globalThis._.cloneDeep(this._state);\r\n                state.title = false;\r\n                this.updateState(state);\r\n            });\r\n        } else {\r\n            this.disableForbidHandle();\r\n        }\r\n    }\r\n\r\n    answerFeedback(bool: boolean) {\r\n        if (!this.feedback) return;\r\n        let feedback: any = cc.instantiate(this.feedback);\r\n        feedback.x = 960;\r\n        feedback.y = 540;\r\n        let feedbackJs: any = feedback.getComponent(cc.Component);\r\n        feedbackJs.init(bool);\r\n        feedback.parent = cc.find(\"Canvas\").parent;\r\n\r\n        setTimeout(() => {\r\n            feedback.destroy();\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.submit = this.submitType.No;\r\n            this.updateState(state);\r\n        }, 2000);\r\n    }\r\n\r\n\r\n    /**\r\n     * 点击指引\r\n     * @param obj 点击对象\r\n     */\r\n    handTips2(obj: fgui.GObject) {\r\n        let hand = fgui.UIPackage.createObject(this._package, 'hand');\r\n        this._view.addChild(hand);\r\n        let tempX = obj.x;\r\n        let tempY = obj.y;\r\n\r\n        hand.x = tempX;\r\n        hand.y = tempY;\r\n\r\n        cc.tween(hand).to(0.3, {\r\n            x: tempX - 30,\r\n            y: tempY - 30\r\n        }).to(0.3, {\r\n            x: tempX,\r\n            y: tempY\r\n        }).to(0.3, {\r\n            x: tempX - 30,\r\n            y: tempY - 30\r\n        }).to(0.3, {\r\n            x: tempX,\r\n            y: tempY\r\n        }).call(() => {\r\n            this._view.removeChild(hand);\r\n            hand = null;\r\n            let state: any = globalThis._.cloneDeep(this._state);\r\n            state.submit = this.submitType.No;\r\n            this.updateState(state)\r\n        }).start();\r\n    }\r\n\r\n    // 运行时 禁止操作\r\n    forbidHandle() {\r\n        console.log('===  运行时 禁止操作 =====');\r\n        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n        if (!handleMask) {\r\n            let handleMask = new cc.Node('handleMask');\r\n            handleMask.addComponent(cc.BlockInputEvents);\r\n            handleMask.parent = this._worldRoot;\r\n            handleMask.width = 1920;\r\n            handleMask.height = 1080;\r\n            handleMask.x = 960;\r\n            handleMask.y = 540;\r\n        }\r\n    }\r\n\r\n    // 消除禁止\r\n    disableForbidHandle() {\r\n        let handleMask = this._worldRoot.getChildByName('handleMask');\r\n        if (handleMask) handleMask.destroy();\r\n    }\r\n\r\n    // 注册状态，及获取状态的方法\r\n    registerState() {\r\n        if (window['GlobalData'].sample.registerState) window['GlobalData'].sample.registerState.call(this);\r\n    }\r\n\r\n    // 解除状态，及获取状态的方法\r\n    relieveState() {\r\n        if (window['GlobalData'].sample.relieveState) window['GlobalData'].sample.relieveState.call(this);\r\n    }\r\n\r\n    // 本组件状态合并到全局\r\n    mergeState() {\r\n        if (window['GlobalData'].sample.mergeState) window['GlobalData'].sample.mergeState.call(this);\r\n    }\r\n\r\n    onEnable() {\r\n        this.registerState();\r\n    }\r\n\r\n    onDisable() {\r\n        cc.tween(this).stop();\r\n        this.relieveState();\r\n        cc.audioEngine.stopAll();\r\n    }\r\n}\r\n"
        }
    ]
}