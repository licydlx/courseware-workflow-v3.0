{
    "sourceFile": "assets/prefabLibrary/controllers/controller-model02/scripts/controller-model02-getMessage.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1624346427179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1624346427179,
            "name": "Commit-0",
            "content": "/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: ydlx\r\n * @Date: 2021-02-07 11:39:43\r\n * @LastEditors: ydlx\r\n * @LastEditTime: 2021-04-26 14:41:39\r\n */\r\n\r\nexport async function getMessage(data: any) {\r\n    // console.log('getMessage')\r\n    let message = globalThis._.cloneDeep(data);\r\n    // console.log(message)\r\n\r\n    switch (data.method) {\r\n        case \"onJumpPage\": {\r\n            this.onJumpConfig(data.toPage);\r\n            break;\r\n        }\r\n\r\n        case 'onFileMessage': {\r\n            if (data.isRestore) {\r\n                return;\r\n            }\r\n\r\n            if (data.handleData.action == \"EVENT_UPDATE_STATE\") {\r\n                if (!window['GlobalData'].stateProxy) return;\r\n                let { name, userid, role, signalingModel, monitored, monitoredName } = window['GlobalData'].courseData;\r\n                let user = data.handleData.user;\r\n                let curState = data.handleData.handleData;\r\n                let prevState = globalThis._.cloneDeep(window['GlobalData'].stateProxy[\"state\"]);\r\n\r\n                if (data.handleData.toUser) {\r\n                    let toUser = data.handleData.toUser;\r\n\r\n                    // 兼容\r\n                    // 安卓ipad 部分账户 无法获取userid 用name替代\r\n                    if (toUser.id == userid || encodeURIComponent(toUser.nickname) == userid) {\r\n                        Object.keys(prevState).forEach((v) => {\r\n                            if (!(globalThis._.isEqual(prevState[v], curState[v]))) {\r\n                                // state 流转 临时\r\n                                window['GlobalData'].stateProxy[v] = \"\";\r\n                                window['GlobalData'].pubSub.emit(curState[v], v);\r\n                            }\r\n                        });\r\n                    }\r\n                } else {\r\n                    // 老师同步学生\r\n                    if (role == 0) {\r\n                        // 演示模式 相互通信\r\n                        if (signalingModel == 1) {\r\n                            Object.keys(prevState).forEach((v) => {\r\n                                if (!(globalThis._.isEqual(prevState[v], curState[v]))) {\r\n                                    // state 流转 临时\r\n                                    window['GlobalData'].stateProxy[v] = \"\";\r\n                                    window['GlobalData'].pubSub.emit(curState[v], v);\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        // 答题模式 \r\n                        // 1.老师保存学生答案 2.老师保存并渲染学生答案\r\n                        if (signalingModel == 2) {\r\n                            if (user.role == 2) {\r\n                                let panleState: any = globalThis._.cloneDeep(window['GlobalData'].stateProxy[this._panel.name]);\r\n                                panleState.snapshoot[user.userid] = curState;\r\n                                window['GlobalData'].stateProxy[this._panel.name] = \"\";\r\n                                window['GlobalData'].pubSub.emit(panleState, this._panel.name);\r\n\r\n                                // 临时 拓客云 sdk版本不同，账号不同，参数不同\r\n                                // 1.在直播间 通过url进入课件，课件身份唯一根据url的参数 userid role name 确定\r\n                                // 2.由于各种原因 如果url参数缺失，以name 当做userid\r\n                                // 3.假如，学生进入课堂，参数缺失 进行2；但是 老师监听有人进入房间-获取的学生信息会有userid 从而导致同一个学生userid不一致\r\n                                // 临时解决：先对比userid，如果userid不一致 对比 name\r\n                                // 遗留问题：2个学生userid缺失，且名字相同 从而 身份无法识别\r\n                                if (monitored && (user.userid == monitored || (user.userid != monitored && user.name == monitoredName))) {\r\n                                    Object.keys(prevState).forEach((v) => {\r\n                                        if (!(globalThis._.isEqual(prevState[v], curState[v])) && v != this._panel.name) {\r\n                                            // state 流转 临时\r\n                                            window['GlobalData'].stateProxy[v] = \"\";\r\n                                            window['GlobalData'].pubSub.emit(curState[v], v);\r\n                                        }\r\n                                    });\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 学生 同步老师\r\n                    if (role == 2) {\r\n                        // 演示模式 相互通信\r\n                        if (signalingModel == 1) {\r\n                            Object.keys(prevState).forEach((v) => {\r\n                                if (!(globalThis._.isEqual(prevState[v], curState[v]))) {\r\n                                    // state 流转 临时\r\n                                    window['GlobalData'].stateProxy[v] = \"\";\r\n                                    window['GlobalData'].pubSub.emit(curState[v], v);\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (signalingModel == 2) {\r\n                            if (user.role == 0) {\r\n                                if (user.signalingModel != signalingModel) {\r\n                                    Object.keys(prevState).forEach((v) => {\r\n                                        if (!(globalThis._.isEqual(prevState[v], curState[v]))) {\r\n                                            // state 流转 临时\r\n                                            window['GlobalData'].stateProxy[v] = \"\";\r\n                                            window['GlobalData'].pubSub.emit(curState[v], v);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (signalingModel == 3) {\r\n                            if (user.role == 0) {\r\n                                Object.keys(prevState).forEach((v) => {\r\n                                    if (!(globalThis._.isEqual(prevState[v], curState[v]))) {\r\n                                        // state 流转 临时\r\n                                        window['GlobalData'].stateProxy[v] = \"\";\r\n                                        window['GlobalData'].pubSub.emit(curState[v], v);\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 巡课 助教 同屏 老师\r\n                    if (role == 1 || role == 4) {\r\n                        if (user.role == 0) {\r\n                            Object.keys(prevState).forEach((v) => {\r\n                                if (!(globalThis._.isEqual(prevState[v], curState[v]))) {\r\n                                    // state 流转 临时\r\n                                    window['GlobalData'].stateProxy[v] = \"\";\r\n                                    window['GlobalData'].pubSub.emit(curState[v], v);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        }\r\n\r\n        case 'onUserChange': {\r\n            // 此回调 老师处理\r\n            if (window['GlobalData'].courseData.role != 0) {\r\n                return;\r\n            }\r\n\r\n            // 临时方案\r\n            // 老师端 人员变动 禁止 发送信令\r\n            // 老师退出重进：此处信息获取早于 页面状态初始化\r\n            if (data.data.type == 'create') {\r\n                window['GlobalData'].stateProxy[this._panel.name] = \"\";\r\n            }\r\n\r\n            if (data.data.type == 'join') {\r\n                let user = data.data.users[0];\r\n                if (user.role == 2) {\r\n                    window['GlobalData'].stateProxy[this._panel.name] = \"\";\r\n                }\r\n            }\r\n\r\n            if (data.data.type == 'leave') {\r\n                let user = data.data.users[0];\r\n                if (user.role == 2) {\r\n                    window['GlobalData'].stateProxy[this._panel.name] = \"\";\r\n                }\r\n            }\r\n\r\n            // 临时方案\r\n            // 定时同步 ：ipad 课件加载慢; 已获取进入房间的信息，但学生课件并未加载完成\r\n            if (data.data.type == 'join') {\r\n                let user = data.data.users[0];\r\n                this.countDown(user);\r\n            }\r\n\r\n            let panelJs: any = this._panel.getComponent(cc.Component);\r\n            panelJs.signalCallback(data.data);\r\n        }\r\n    }\r\n\r\n}"
        }
    ]
}