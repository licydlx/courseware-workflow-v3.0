{
    "sourceFile": "assets/entrances/javascripts/courseware.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1624874514238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1624874562446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,83 @@\n+/*\r\n+ * @Descripttion: \r\n+ * @version: \r\n+ * @Author: ydlx\r\n+ * @Date: 2021-03-26 18:05:12\r\n+ * @LastEditors: ydlx\r\n+ * @LastEditTime: 2021-04-27 11:32:03\r\n+ */\r\n+const gameData = window['GlobalData'].gameData;\r\n+const { loadBundle, loadPrefab, ajax } = window['GlobalData'].sample;\r\n+const { parseURL } = window['GlobalData'].utils;\r\n+const { ccclass, property } = cc._decorator;\r\n+\r\n+@ccclass\r\n+export default class t3_courseware extends cc.Component {\r\n+\r\n+    @property({\r\n+        displayName: '本地测试'\r\n+    })\r\n+    test = false;\r\n+\r\n+    @property({\r\n+        type: cc.JsonAsset,\r\n+        displayName: '配置 文件'\r\n+    })\r\n+    configJson: cc.JsonAsset = null;\r\n+\r\n+    private _controllerJs: any;\r\n+\r\n+    async onLoad() {\r\n+\r\n+        let configJson: any;\r\n+        if (this.test) {\r\n+            // 本地测试\r\n+            configJson = this.configJson.json;\r\n+        } else {\r\n+            // 获取配置文件\r\n+            let { courseName } = parseURL(window.location.href);\r\n+            if (!courseName) {\r\n+                return;\r\n+            }\r\n+            let env: any = window.location.href.includes('test') ? 'test' : 'prod';\r\n+            let json: any = await ajax(\"GET\", `${gameData.apiOrigin}/getConfigJson?courseName=${courseName ? courseName.toLowerCase() : ''}&env=${env}`);\r\n+            configJson = JSON.parse(json);\r\n+        }\r\n+        // 生成控制器\r\n+        let contrllerPath: any = `${configJson.pathConfig.remoteUrl}${configJson.pathConfig.controllerBundlePath}${configJson.pathConfig.controllerName}`;\r\n+        let contrllerBundle: any = await loadBundle(contrllerPath);\r\n+        let contrllerPrefab: any = await loadPrefab(contrllerBundle, contrllerBundle.name);\r\n+        let contrllerNode: any = cc.instantiate(contrllerPrefab);\r\n+        contrllerNode.parent = this.node.parent;\r\n+        this._controllerJs = contrllerNode.getComponent(cc.Component);\r\n+        await this._controllerJs.init(configJson);\r\n+\r\n+        if (this.test) {\r\n+            this._controllerJs.onJumpConfig(1);\r\n+        }\r\n+        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n+        // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n+        this._controllerJs._toPage = 1;\r\n+    }\r\n+\r\n+    onKeyDown(event: cc.Event.EventKeyboard) {\r\n+        if (!this.test) return;\r\n+        switch (event.keyCode) {\r\n+            case cc.macro.KEY.left:\r\n+                console.log('Press left key');\r\n+                if (this._controllerJs._toPage <= 1) return;\r\n+                this._controllerJs.onJumpConfig(--this._controllerJs._toPage);\r\n+                break;\r\n+            case cc.macro.KEY.right:\r\n+                console.log('Press right key');\r\n+                if (this._controllerJs._toPage >= this.configJson.json.totalPages) return;\r\n+                this._controllerJs.onJumpConfig(++this._controllerJs._toPage);\r\n+                break;\r\n+            default: break;\r\n+        }\r\n+    }\r\n+\r\n+    choosePage(e: any, ced: any) {\r\n+        this._controllerJs.onJumpConfig(ced);\r\n+    }\r\n+}\r\n"
                }
            ],
            "date": 1624874514238,
            "name": "Commit-0",
            "content": "/*\r\n * @Descripttion: \r\n * @version: \r\n * @Author: ydlx\r\n * @Date: 2021-03-26 18:05:12\r\n * @LastEditors: ydlx\r\n * @LastEditTime: 2021-04-27 11:32:03\r\n */\r\nconst gameData = window['GlobalData'].gameData;\r\nconst { loadBundle, loadPrefab, ajax } = window['GlobalData'].sample;\r\nconst { parseURL } = window['GlobalData'].utils;\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class t3_courseware extends cc.Component {\r\n\r\n    @property({\r\n        displayName: '本地测试'\r\n    })\r\n    test = false;\r\n\r\n    @property({\r\n        type: cc.JsonAsset,\r\n        displayName: '配置 文件'\r\n    })\r\n    configJson: cc.JsonAsset = null;\r\n\r\n    private _controllerJs: any;\r\n\r\n    async onLoad() {\r\n\r\n        let configJson: any;\r\n        if (this.test) {\r\n            // 本地测试\r\n            configJson = this.configJson.json;\r\n        } else {\r\n            // 获取配置文件\r\n            let { courseName } = parseURL(window.location.href);\r\n            if (!courseName) {\r\n                return;\r\n            }\r\n            let env: any = window.location.href.includes('test') ? 'test' : 'prod';\r\n            let json: any = await ajax(\"GET\", `${gameData.apiOrigin}/getConfigJson?courseName=${courseName ? courseName.toLowerCase() : ''}&env=${env}`);\r\n            configJson = JSON.parse(json);\r\n        }\r\n        // 生成控制器\r\n        let contrllerPath: any = `${configJson.pathConfig.remoteUrl}${configJson.pathConfig.controllerBundlePath}${configJson.pathConfig.controllerName}`;\r\n        let contrllerBundle: any = await loadBundle(contrllerPath);\r\n        let contrllerPrefab: any = await loadPrefab(contrllerBundle, contrllerBundle.name);\r\n        let contrllerNode: any = cc.instantiate(contrllerPrefab);\r\n        contrllerNode.parent = this.node.parent;\r\n        this._controllerJs = contrllerNode.getComponent(cc.Component);\r\n        await this._controllerJs.init(configJson);\r\n\r\n        if (this.test) {\r\n            this._controllerJs.onJumpConfig(1);\r\n        }\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        // cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n        this._controllerJs._toPage = 1;\r\n    }\r\n\r\n    onKeyDown(event: cc.Event.EventKeyboard) {\r\n        if (!this.test) return;\r\n        switch (event.keyCode) {\r\n            case cc.macro.KEY.left:\r\n                console.log('Press left key');\r\n                if (this._controllerJs._toPage <= 1) return;\r\n                this._controllerJs.onJumpConfig(--this._controllerJs._toPage);\r\n                break;\r\n            case cc.macro.KEY.right:\r\n                console.log('Press right key');\r\n                if (this._controllerJs._toPage >= this.configJson.json.totalPages) return;\r\n                this._controllerJs.onJumpConfig(++this._controllerJs._toPage);\r\n                break;\r\n            default: break;\r\n        }\r\n    }\r\n\r\n    choosePage(e: any, ced: any) {\r\n        this._controllerJs.onJumpConfig(ced);\r\n    }\r\n}\r\n"
        }
    ]
}